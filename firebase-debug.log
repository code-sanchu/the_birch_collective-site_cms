[debug] [2023-06-30T14:49:39.258Z] ----------------------------------------------------------------------
[debug] [2023-06-30T14:49:39.260Z] Command:       /home/ruben/.nvm/versions/node/v18.16.0/bin/node /home/ruben/.nvm/versions/node/v18.16.0/bin/firebase emulators:start --import=./db-local-data --export-on-exit=./db-local-data
[debug] [2023-06-30T14:49:39.260Z] CLI Version:   12.4.0
[debug] [2023-06-30T14:49:39.261Z] Platform:      linux
[debug] [2023-06-30T14:49:39.261Z] Node Version:  v18.16.0
[debug] [2023-06-30T14:49:39.261Z] Time:          Fri Jun 30 2023 15:49:39 GMT+0100 (British Summer Time)
[debug] [2023-06-30T14:49:39.261Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-06-30T14:49:39.337Z] Object ".extensions" in "firebase.json" has unknown property: {"additionalProperty":"storage-resize-images"}
[debug] [2023-06-30T14:49:39.340Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-06-30T14:49:39.340Z] > authorizing via signed-in user (a.ruben00001@gmail.com)
[debug] [2023-06-30T14:49:39.399Z] java version "20.0.1" 2023-04-18

[debug] [2023-06-30T14:49:39.399Z] Java(TM) SE Runtime Environment (build 20.0.1+9-29)
Java HotSpot(TM) 64-Bit Server VM (build 20.0.1+9-29, mixed mode, sharing)

[debug] [2023-06-30T14:49:39.403Z] Parsed Java major version: 20
[info] i  emulators: Starting emulators: auth, functions, firestore, storage, extensions {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore, storage, extensions"}}
[debug] [2023-06-30T14:49:39.406Z] > refreshing access token with scopes: []
[debug] [2023-06-30T14:49:39.408Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2023-06-30T14:49:39.408Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-06-30T14:49:39.518Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2023-06-30T14:49:39.518Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2023-06-30T14:49:39.524Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop [none]
[debug] [2023-06-30T14:49:39.742Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop 200
[debug] [2023-06-30T14:49:39.742Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop {"projectId":"birch-collective-develop","projectNumber":"796296843255","displayName":"birch-collective-develop","name":"projects/birch-collective-develop","resources":{"hostingSite":"birch-collective-develop","storageBucket":"birch-collective-develop.appspot.com","locationId":"europe-west2"},"state":"ACTIVE","etag":"1_095513ac-3af7-470c-9141-4da1c4ea659b"}
[debug] [2023-06-30T14:49:39.743Z] Successfully read params from storage-resize-images.env
[debug] [2023-06-30T14:49:39.744Z] Error: ENOENT: no such file or directory, open '/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/extensions/storage-resize-images.env.default'
[debug] [2023-06-30T14:49:39.744Z] Error: ENOENT: no such file or directory, open '/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/extensions/storage-resize-images.env.796296843255'
[debug] [2023-06-30T14:49:39.744Z] Error: ENOENT: no such file or directory, open '/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/extensions/storage-resize-images.env.birch-collective-develop'
[debug] [2023-06-30T14:49:39.744Z] Error: ENOENT: no such file or directory, open '/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/extensions/storage-resize-images.env.local'
[debug] [2023-06-30T14:49:39.744Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig [none]
[debug] [2023-06-30T14:49:39.938Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig 200
[debug] [2023-06-30T14:49:39.938Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig {"projectId":"birch-collective-develop","storageBucket":"birch-collective-develop.appspot.com","locationId":"europe-west2"}
[debug] [2023-06-30T14:49:39.941Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop [none]
[debug] [2023-06-30T14:49:40.166Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop 200
[debug] [2023-06-30T14:49:40.167Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop {"projectId":"birch-collective-develop","projectNumber":"796296843255","displayName":"birch-collective-develop","name":"projects/birch-collective-develop","resources":{"hostingSite":"birch-collective-develop","storageBucket":"birch-collective-develop.appspot.com","locationId":"europe-west2"},"state":"ACTIVE","etag":"1_095513ac-3af7-470c-9141-4da1c4ea659b"}
[debug] [2023-06-30T14:49:40.168Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images [none]
[debug] [2023-06-30T14:49:40.813Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images 200
[debug] [2023-06-30T14:49:40.813Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images {"name":"publishers/firebase/extensions/storage-resize-images","ref":"firebase/storage-resize-images","latestVersion":"0.1.37","latestVersionCreateTime":"2023-06-07T17:38:42.485685Z","state":"PUBLISHED","createTime":"2021-03-18T22:07:59.572345Z","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/firebase/resize_images_120@2x.png","publisher":{"displayName":"Firebase","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/publisher_icons/firebase/firebase_128dp.png"},"repoUri":"https://github.com/firebase/extensions","metrics":{"activeInstallCount":"18400"},"latestApprovedVersion":"0.1.37"}
[debug] [2023-06-30T14:49:40.814Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions filter=&showPrereleases=true&pageSize=100&pageToken=
[debug] [2023-06-30T14:49:42.050Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions 200
[debug] [2023-06-30T14:49:42.058Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions {"extensionVersions":[{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.0","ref":"firebase/storage-resize-images@0.1.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/commits/master","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n\n\n* Cache-Control header for resized images: Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* generateResizedImage (google.storage.object.finalize)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"ae8734a79a3808c0e5baadb2129a07db978b017bcfa6aa3dd974a3b87cdccc7d","createTime":"2019-09-18T20:52:33.938873796Z","id":"0.1.0","releaseNotes":"Initial release of the _Resize Images_ extension.\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.1","ref":"firebase/storage-resize-images@0.1.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/releases","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Cache-Control header for resized images: Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* generateResizedImage (google.storage.object.finalize)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"0e640d83d7a7df47082e1ecb8ee586aaf547cf7f22ff1b37f86f04ed10284a55","createTime":"2019-10-17T17:19:34.531333517Z","id":"0.1.1","releaseNotes":"fixed - Fixed bug where certain edge cases led to already resized image being resized again. (issue #7)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"700"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.10","ref":"firebase/storage-resize-images@0.1.10","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.10","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"5b6aaad19e4055fd5a4d43a3310e0b2d1fad45d097b924d15cffb92419949f4a","createTime":"2020-06-25T17:23:56.517417Z","id":"0.1.10","releaseNotes":"fixed - A fresh token is now generated for each resized image. (Issue #323, PR #351)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"1500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.11","ref":"firebase/storage-resize-images@0.1.11","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.11","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a6334c9b51015839f41340e8d8edcf420d0028fea6ca6dcf3c9fbc3269b975c1","createTime":"2020-09-01T17:11:44.235295Z","id":"0.1.11","releaseNotes":"feature - Update Cloud Functions runtime to Node.js 10.\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"100"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.12","ref":"firebase/storage-resize-images@0.1.12","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.12","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"137bb35c38deb264c2ab107b4565ddea56dcef315b6f682317599b74105f59d0","createTime":"2020-09-10T17:15:34.956867Z","id":"0.1.12","releaseNotes":"fixed - ignore gzipped images (PR #417)\n\nfeature - Add new Cloud Functions locations. For more information about locations and their pricing tiers, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"600"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.13","ref":"firebase/storage-resize-images@0.1.13","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.13","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"707fa9ef9d2b8131dc232f5e096a8cecdbcff237137d04e8c65333c32089f646","createTime":"2020-11-05T17:03:34.934877Z","id":"0.1.13","releaseNotes":"feature - Add new parameter to optionally convert each uploaded image to a different image content-type (PR #483)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"100"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.14","ref":"firebase/storage-resize-images@0.1.14","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.14","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred type: The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"bd8a63899ae4900c93c1f7f937c6ce1980572cb1fab47e6b2fe2ebb9766d4806","createTime":"2020-11-19T19:40:37.624195Z","id":"0.1.14","releaseNotes":"feature - Added a \"delete only on success\" option to the `DELETE_ORIGINAL_FILE` param (#479)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"100"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.16","ref":"firebase/storage-resize-images@0.1.16","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.16","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred type: The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"39a474a801a2ec9906dd0489f50ea3caf18866d8260b2e201a519c02ab4bc4af","createTime":"2020-12-10T18:42:54.259365Z","id":"0.1.16","releaseNotes":"feature - Adds support for absolute paths restrictions for Storage Resize Image (#427)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.17","ref":"firebase/storage-resize-images@0.1.17","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.17","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred type: The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"b90cae92b70e9bf6e4eab4ee92d8ae1fadfd5466f1442abec2973ccff0e475ee","createTime":"2021-01-14T17:46:16.836237Z","id":"0.1.17","releaseNotes":"docs - Adds documentation that explains which content types are supported, and shows how to set content type explicitly (#534)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.18","ref":"firebase/storage-resize-images@0.1.18","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.18","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n#### Configuration Parameters\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred type: The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"4b3d920bb9c035e1b94bd6ccb5901af956d8c2ec63b38d369f53d3941cbf9a90","createTime":"2021-02-11T23:35:52.318567Z","id":"0.1.18","releaseNotes":"fixed - fixed a bug that caused resized images to be named incorrectly if their file extension was capitalized (#549)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.19","ref":"firebase/storage-resize-images@0.1.19","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.19","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n#### Configuration Parameters\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"85653802698bb12bd4d4090b8de56f5f807c15d000756870395ecfd4815ece66","createTime":"2021-03-04T17:50:05.876197Z","id":"0.1.19","releaseNotes":"feature - Adds support for converting to more than one image format (#579)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.21","ref":"firebase/storage-resize-images@0.1.21","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.21","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a7252a179c6a38ac80d10fbb932eabb7e922b627090a07b91babb9b0c9a57c0e","createTime":"2021-04-15T21:30:45.121285Z","id":"0.1.21","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"600"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.22","ref":"firebase/storage-resize-images@0.1.22","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.22","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n#### Configuration Parameters\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"d19f44e0cd23c5ea45a2bba07e7390cfe27b967826a8d601b89412e1362a1ecb","createTime":"2021-06-17T18:04:05.400316Z","id":"0.1.22","releaseNotes":"feature - added Warsaw (europe-central2) location (#677)\n\nfeature - updated Cloud Functions runtime to Node.js 14 (#660)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"1300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.23","ref":"firebase/storage-resize-images@0.1.23","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.23","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"4bd7c2a4ea1dff1c17f73cb988158a53c4a30cce318ce2ec73fabbead5d30693","createTime":"2021-10-20T18:21:31.562784Z","id":"0.1.23","releaseNotes":"feature - add Taiwan and Singapore Cloud Function locations (#729)\n","listing":{"state":"APPROVED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.24","ref":"firebase/storage-resize-images@0.1.24","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.24","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"d0d2709ca16a418e9750ab2fa924fcdc2de5d45dc91d281b3479995dbf1036bf","createTime":"2021-10-21T13:47:27.093269Z","id":"0.1.24","releaseNotes":"fixed - update package lock file to fix installation errors (#782)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"400"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.25","ref":"firebase/storage-resize-images@0.1.25","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.25","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"false","label":"original"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"d4eaafe5234bfc6dbb096a8ea35bb0d32ee8861cb95532d8dd3fa9d0a7239211","createTime":"2021-12-13T21:57:29.342985Z","id":"0.1.25","releaseNotes":"fixed - fix errors when resizing Samsung-encoded JPEGs\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"700"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.26","ref":"firebase/storage-resize-images@0.1.26","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.26","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- \n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"cc530d81657d24f53ae4da1415642169fa2f8f321cd6f8d540e2dffdf1b698dc","createTime":"2022-03-07T16:50:58.893124Z","id":"0.1.26","releaseNotes":"fixed - generate correct `package-lock.json` files after `lerna bootstrap` (#779)\n\nfixed - update resized metadata content disposition (#839)\n\nfeature - add WEBP and GIF animation (#875)\n\nfixed - update validate workflow to use node14\n\nfixed - fix samsung encoded jpg resizing\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.26-rc.1","ref":"firebase/storage-resize-images@0.1.26-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.26-rc.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- \n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a822632bbe7b33034ebab0c053b8735839c925f3d90db4cd0757d1b33de7aac0","createTime":"2022-03-02T21:28:30.026260Z","id":"0.1.26-rc.1","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.27","ref":"firebase/storage-resize-images@0.1.27","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.27","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"f35b38ba04316e2c1740d926d5e0600ab27162a3e72b39c30c7188015c523cda","createTime":"2022-04-07T18:48:34.715302Z","id":"0.1.27","releaseNotes":"fixed - update to firebase-admin v10 (#935)\n\nfeature - add output options param, to support [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg) (#878)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.28","ref":"firebase/storage-resize-images@0.1.28","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.28","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for all changes made to your specified Cloud Storage bucket, finds any images, and resizes them. Resized images are stored in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"181466310919029d32f2df067e30058ad456e9eac0bb145e5481b1359a5758fc","createTime":"2022-05-10T16:07:21.268515Z","id":"0.1.28","releaseNotes":"feature - added extension event for image resize completion (#967)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"800"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.29","ref":"firebase/storage-resize-images@0.1.29","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.29","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"53c3ef614c8aa474091fcd18c8d688a841d5f28433599a50036e0cfa1e47536b","createTime":"2022-08-09T22:14:28.416069Z","id":"0.1.29","releaseNotes":"fixed - add size to metadata\n\nfeature - add an option to make the resized images public\n\nfixed - updated sharp lib dependency for improved compression algorithm\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.3","ref":"firebase/storage-resize-images@0.1.3","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.3","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/releases","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following metadata, if present, from the original image to the resized image(s):\n\n- [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control)\n- [`Content-Disposition`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Disposition)\n- [`Content-Encoding`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Encoding)\n- [`Content-Language`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Language)\n- [`Content-Type`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type)\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nNote that if you configured the `Cache-Control header for resized images` param, the specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"7a1283da29e4e66e45b79a6bef975480a388100b15aeaabba13db31b6f71a8ea","createTime":"2019-11-21T19:21:08.486676552Z","id":"0.1.3","releaseNotes":"feature - Automatically copy the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can configure your extension to overwrite the Cache-Control value for the resized image(s).\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"800"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.30","ref":"firebase/storage-resize-images@0.1.30","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.30","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"64d49102709cb18e65b6d6896091f72cbbf7306a87f4077631b93126539b09ce","createTime":"2022-09-29T18:22:00.156454Z","id":"0.1.30","releaseNotes":"feature - include original image data in events\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"600"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.30-rc.0","ref":"firebase/storage-resize-images@0.1.30-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.30-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"3df443606881f0415ca85f956345a78b616295c7f82133b88f90795c8883dff3","createTime":"2022-09-28T15:32:54.115340Z","id":"0.1.30-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.31","ref":"firebase/storage-resize-images@0.1.31","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.31","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"85bb47ae9d602a01516a67499aee1a078fc4af804468a76f0a69e682c3a5385f","createTime":"2022-11-21T18:51:58.619150Z","id":"0.1.31","releaseNotes":"feature - add AVIF codec support\n\nfeature - update IMG_BUCKET param type to selectResource\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"100"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.31-rc.0","ref":"firebase/storage-resize-images@0.1.31-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.31-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"595d4422e5660a03be6ffc1bc08f638aba4b4fe8c0e4b3fbedeeb3e19ea17fc4","createTime":"2022-11-16T09:50:49.612394Z","id":"0.1.31-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.31-rc.1","ref":"firebase/storage-resize-images@0.1.31-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.31-rc.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a1b095524da27dea748bbc9922d935a9b85dcd27f53d2ab0a255faa8c405a5e1","createTime":"2022-11-16T13:55:57.517370Z","id":"0.1.31-rc.1","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.32","ref":"firebase/storage-resize-images@0.1.32","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.32","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"946f89a07cfc8d420128a0f6ed21f488ceff0bef00ddef013f3bd4d638402fa8","createTime":"2022-12-05T17:05:39.269479Z","id":"0.1.32","releaseNotes":"feature - added lifecycle event to resize existing images\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.32-rc.0","ref":"firebase/storage-resize-images@0.1.32-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.32-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a733e12e0104994f88a8fa892a7f05b6adf8f1e72b1107e8c02d441760daa346","createTime":"2022-12-01T22:24:07.954720Z","id":"0.1.32-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.33","ref":"firebase/storage-resize-images@0.1.33","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.33","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"2c70a453af018330671a8ca63af31676f8ef7ee9c58a9d452d7f3c0255ebaa13","createTime":"2023-01-06T09:15:59.836425Z","id":"0.1.33","releaseNotes":"fixed - re-add input object data to the complete event\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.33-rc.0","ref":"firebase/storage-resize-images@0.1.33-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.33-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would match `/users/profile/pictures/image.png` as well as  `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/users/pictures` and `/restaurants/menuItems` directories, specify the paths `/users/pictures,/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures`  would exclude `/users/profile/pictures/image.png` as well as `/users/profile/pictures/any/sub/directory/image.png`. \nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"c00310215a913e01b8086863c8fcf7c54534a3a653b7a8c7da7472a955f828b2","createTime":"2023-01-05T17:17:39.571251Z","id":"0.1.33-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.34","ref":"firebase/storage-resize-images@0.1.34","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.34","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"e4bebdc6c35b8b3920bed5fe5e9ced34d2b8709c16d9b658f9f7f8fa8bb0423d","createTime":"2023-02-08T12:01:49.735289Z","id":"0.1.34","releaseNotes":"feature - upgrade extensions to the latest firebase-admin sdk\n\nfixed - support backfill task in custom region\n\nfeature - add description to the failedImagesPath param\n\nfeature - put failed resizes in separate directory #563\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"400"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.34-rc.0","ref":"firebase/storage-resize-images@0.1.34-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.34-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"54cf6b24023875e0a0d064e948f01281daf8c7c7b6680fabb8c9c362f5fb2dd2","createTime":"2023-02-08T10:18:43.398137Z","id":"0.1.34-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.35","ref":"firebase/storage-resize-images@0.1.35","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.35","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"7f12461bf80bc00b378332cd51d5375913e204ea006f5a04a435eacdfe0dfb54","createTime":"2023-03-17T16:20:20.728921Z","id":"0.1.35","releaseNotes":"feature - handle jfif extensions correctly\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.35-rc.0","ref":"firebase/storage-resize-images@0.1.35-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.35-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"84854e3f2b380279aae462fe08b6a0ee740ddcb45607109049e58bf31c8a7554","createTime":"2023-03-17T11:08:18.520029Z","id":"0.1.35-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.35-rc.1","ref":"firebase/storage-resize-images@0.1.35-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.35-rc.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"f6c273d14364e202c727054e3c53dbba4cc55c917ceabda58dd394a2036cb52c","createTime":"2023-03-17T15:51:54.538429Z","id":"0.1.35-rc.1","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.36","ref":"firebase/storage-resize-images@0.1.36","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.36","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"53459008c80d2746fca36a5c25ca94e3fb03a7b565f5299905a76c1ad0d3f823","createTime":"2023-04-05T14:33:20.703655Z","id":"0.1.36","releaseNotes":"fixed - added fixes for gcs vulnerabilities\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"700"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.36-rc.0","ref":"firebase/storage-resize-images@0.1.36-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.36-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs14\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs14\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly exclude any directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"a299e65b763903d86e6480bc4cc2cef3ce470e8b69181d3d0a928458e51f3a3a","createTime":"2023-04-05T14:04:27.144128Z","id":"0.1.36-rc.0","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.37","ref":"firebase/storage-resize-images@0.1.37","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.37","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs16\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs16\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"008e9b78f75cc2082febea52eb76a3c2e17f90f23f90e7b0f5bdfe9a43aa6c81","createTime":"2023-06-07T17:38:42.485685Z","id":"0.1.37","releaseNotes":"feature - bump to nodejs16\n\nfixed - correct include path list description\n","buildSourceUri":"https://github.com/firebase/extensions/tree/25537363d0d4416fd5d9326a0d5f452fd6e342f3","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"400"},"extensionRoot":"storage-resize-images"},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.37-rc.0","ref":"firebase/storage-resize-images@0.1.37-rc.0","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.37-rc.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs16\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs16\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"2c7381c0a52c465ebfe5cf84ffe8c54a69e124fa4fd1f26f7df25c86bc4bc672","createTime":"2023-06-06T16:26:29.964259Z","id":"0.1.37-rc.0","buildSourceUri":"https://github.com/firebase/extensions/tree/56b4e9aa09971c65eca8e3e14065ca567e7b2e55","listing":{"state":"UNLISTED"},"extensionRoot":"storage-resize-images"},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.4","ref":"firebase/storage-resize-images@0.1.4","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.4","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following metadata, if present, from the original image to the resized image(s):\n\n- [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control)\n- [`Content-Disposition`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Disposition)\n- [`Content-Encoding`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Encoding)\n- [`Content-Language`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Language)\n- [`Content-Type`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type)\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nNote that if you configured the `Cache-Control header for resized images` param, the specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"c86d57ccd6d5a684a218a3d8c3fd7ee981f8b6c265598a549a061efa2101077e","createTime":"2020-01-16T18:19:34.532055498Z","id":"0.1.4","releaseNotes":"fixed - Fixed bug where name of resized file was missing original name if there was no file extension. (issue #20)\n\nfixed - Fixed \"TypeError: Cannot set property 'resizedImage' of undefined\". (issue #130)\n\nfixed - Fixed bug where some valid bucket names were rejected during configuration. (issue #27)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"900"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.5","ref":"firebase/storage-resize-images@0.1.5","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.5","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"9596eaf7533fe73df3b7e449a862466048e25c8d83b1edcddc3db1947cd873ef","createTime":"2020-04-09T17:19:22.670451672Z","id":"0.1.5","releaseNotes":"fixed - The original, uploaded image's MIME type must now always be specified in the `Content-Type` header. (Issue #175)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.6","ref":"firebase/storage-resize-images@0.1.6","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.6","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"fc1ff54f6d77722ecd86cbe9fcfc69be618a23bee4e58dee48bba844d839df84","createTime":"2020-04-23T17:17:59.966539870Z","id":"0.1.6","releaseNotes":"fixed - Switched ImageMagick for Sharp library to support webp format. (Issue #199)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.7","ref":"firebase/storage-resize-images@0.1.7","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.7","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"eb333fcdfff9795fb1cd02ae737493270721fc44068b8a1983a0aa20479f132b","createTime":"2020-05-07T17:13:51.872987459Z","id":"0.1.7","releaseNotes":"fixed - Resized images now render in the Firebase console. (Issue #140)\n\nfixed - The Sharp cache is now cleared so that the latest image with a given\nfile name is retrieved from the Storage bucket. (Issue #286)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.8","ref":"firebase/storage-resize-images@0.1.8","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.8","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"b02ebe65202c3535bad8e69daf46767be76102858277af1bc33654e588acc5e7","createTime":"2020-05-20T17:55:21.556770994Z","id":"0.1.8","releaseNotes":"fixed - Resized images now maintain the same orientation as the original image. (Issue #290)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.0-rc.1","ref":"firebase/storage-resize-images@0.1.0-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://dev-partners.googlesource.com/samples/firebase/mods/+log","sourceUrl":"https://accounts.google.com/AccountChooser/signinchooser?service=gerritcodereview&continue=https%3A%2F%2Fdev-partners.googlesource.com%2Flogin%2Fsamples%2Ffirebase%2Fmods%2F%2B%2Fmaster%2Fstorage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension creates a resized image with your specified dimensions. It stores both the resized image and the original image in the same Storage bucket. The extension names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height. For example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket. Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension creates resized image(s) with your specfied dimensions. It stores both the resized image(s) and the original image in the same bucket, `${param:IMG_BUCKET}`. The extension names a resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: *Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).*\n\n* Cloud Storage bucket for images: *To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n*\n\n* Sizes of resized images: *What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n*\n\n* Cloud Storage path for resized images: *A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n*\n\n* Cache-Control header for resized images: *Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n*\n\n\n\n**NON-CLOUD FUNCTION RESOURCES CREATED**:\n\n* generateResizedImage (firebaseextensions.v1beta.function)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension creates a resized image with your specified dimensions. It stores both the resized image and the original image in the same Storage bucket. The extension names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height. For example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2019-09-12T20:31:32.735300678Z","id":"0.1.0-rc.1","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.0-rc.2","ref":"firebase/storage-resize-images@0.1.0-rc.2","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.0","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/commits/master","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n- Creates resized image(s) with your specfied dimensions.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n\n\n* Cache-Control header for resized images: Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* generateResizedImage (google.storage.object.finalize)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2019-09-18T16:45:41.559534413Z","id":"0.1.0-rc.2","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.1-rc.1","ref":"firebase/storage-resize-images@0.1.1-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/commits/master","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n\n\n* Cache-Control header for resized images: Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* generateResizedImage (google.storage.object.finalize)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2019-10-14T19:00:02.187428910Z","id":"0.1.1-rc.1","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.1-rc.2","ref":"firebase/storage-resize-images@0.1.1-rc.2","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.1","description":"Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores both images in the same Cloud Storage bucket.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/releases","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1"},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"(.)+\\.(.)+\\.(.)+","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# storage-resize-images\n\n**VERSION**: 0.1.0\n\n**DESCRIPTION**: Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.\n\n\n\n**CONFIGURATION PARAMETERS:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? This bucket will store both the original and resized images.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values.\n\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-image).\n\n\n* Cache-Control header for resized images: Do you want to specify a `Cache-Control` header for the resized image files? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to use a `Cache-Control` header, leave this field empty.\n\n\n\n\n**CLOUD FUNCTIONS CREATED:**\n\n* generateResizedImage (google.storage.object.finalize)\n\n\n\n**DETAILS**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nAnother optional feature of this extension is to specify a [`Cache-Control` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) for your resized image files.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n**APIS USED**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**ACCESS REQUIRED**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2019-10-15T22:49:45.589434762Z","id":"0.1.1-rc.2","listing":{"state":"UNLISTED"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.16-rc.1","ref":"firebase/storage-resize-images@0.1.16-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.16","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs10\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"},{"value":"on_success","label":"Delete on successful resize"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred type","type":"SELECT","description":"The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n","options":[{"value":"jpg","label":"jpg"},{"value":"png","label":"png"},{"value":"webp","label":"webp"},{"value":"tiff","label":"tiff"},{"value":"false","label":"Do not convert"}],"default":"false"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n \nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n \n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to only resize the images  stored in `/users/pictures` directory, specify the path `/users/pictures`.  If you prefer to resize every image uploaded to the storage bucket,  leave this field empty.\n\n\n* List of absolute paths not included for resized images: A comma-separated list of absolute paths to not take into account for  images to be resized. For example, to not resize the images  stored in `/users/pictures/avatars` directory, specify the path  `/users/pictures/avatars`. If you prefer to resize every image uploaded  to the storage bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred type: The image type you'd like your source image to convert to. The default for this option will  be to keep the original file type.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2020-12-03T20:37:21.202540Z","id":"0.1.16-rc.1","listing":{"state":"UNLISTED"},"metrics":{"activeInstallCount":"80"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.4-rc.1","ref":"firebase/storage-resize-images@0.1.4-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.4","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Deployment location","type":"SELECT","description":"Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following metadata, if present, from the original image to the resized image(s):\n\n- [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control)\n- [`Content-Disposition`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Disposition)\n- [`Content-Encoding`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Encoding)\n- [`Content-Language`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Language)\n- [`Content-Type`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type)\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nNote that if you configured the `Cache-Control header for resized images` param, the specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Deployment location: Where should the extension be deployed? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2020-01-09T18:10:50.007899289Z","id":"0.1.4-rc.1","listing":{"state":"UNLISTED"},"metrics":{"activeInstallCount":"100"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.5-rc.1","ref":"firebase/storage-resize-images@0.1.5-rc.1","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.5","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following metadata, if present, from the original image to the resized image(s):\n\n- [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control)\n- [`Content-Disposition`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Disposition)\n- [`Content-Encoding`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Encoding)\n- [`Content-Language`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Language)\n- [`Content-Type`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type)\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2020-03-05T18:15:20.965699655Z","id":"0.1.5-rc.1","listing":{"state":"UNLISTED"},"metrics":{"activeInstallCount":"200"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.5-rc.2","ref":"firebase/storage-resize-images@0.1.5-rc.2","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.5","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage).\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhen you upload an image file to `${param:IMG_BUCKET}`, this extension:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following metadata, if present, from the original image to the resized image(s):\n\n- [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control)\n- [`Content-Disposition`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Disposition)\n- [`Content-Encoding`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Encoding)\n- [`Content-Language`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Language)\n- [`Content-Type`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type)\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","createTime":"2020-03-19T18:14:15.960944126Z","id":"0.1.5-rc.2","listing":{"state":"UNLISTED"},"metrics":{"activeInstallCount":"500"}},{"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.9","ref":"firebase/storage-resize-images@0.1.9","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.9","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 1024\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${IMG_BUCKET}\nlocation: ${LOCATION}\nsourceDirectory: .\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"}],"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Mike Diarmid","email":"mike@invertase.io","url":"https://github.com/salakar"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"STRING","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket"},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata) (except Firebase storage download tokens)\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`).\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Resize Images\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload an image file to your specified Cloud Storage bucket, this extension:\n\n- Creates a resized image with your specified dimensions.\n- Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n- Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (except Firebase storage download tokens). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n#### Billing\n\nThis extension uses other Firebase or Google Cloud Platform services which may have associated charges:\n\n- Cloud Storage\n- Cloud Functions\n\nWhen you use Firebase Extensions, you're only charged for the underlying resources that you use. A paid-tier billing plan is only required if the extension uses a service that requires a paid-tier plan, for example calling to a Google Cloud Platform API or making outbound network requests to non-Google services. All Firebase services offer a free tier of usage. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension?  You usually want a location close to your Storage bucket. For help selecting a  location, refer to the [location selection  guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted.\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Note that these deletions cannot be undone.\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","displayName":"Resize Images","systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"DEPRECATED","hash":"a139bcfefbf19e901b67789105a3841ed208c6e449a896bafcc4a01e43c07844","createTime":"2020-06-11T18:12:20.333403Z","id":"0.1.9","releaseNotes":"changed - If the original image is a vector image, the extension does not resize it. (Issue #326, PR #329)\n\nfixed - Replaced `mkdirp-promise` with `mkdirp` because `mkdirp-promise` is deprecated. (PR #266)\n\nfixed - If the original image is smaller than the specified max width and height, the extension does not enlarge it or resize it. (Issue #337, PR #338)\n","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"300"}}]}
[debug] [2023-06-30T14:49:42.076Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions/0.1.37 [none]
[debug] [2023-06-30T14:49:42.783Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions/0.1.37 200
[debug] [2023-06-30T14:49:42.783Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images/versions/0.1.37 {"name":"publishers/firebase/extensions/storage-resize-images/versions/0.1.37","ref":"firebase/storage-resize-images@0.1.37","spec":{"specVersion":"v1beta","name":"storage-resize-images","version":"0.1.37","description":"Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.","apis":[{"apiName":"storage-component.googleapis.com","reason":"Needed to use Cloud Storage"}],"roles":[{"role":"storage.admin","reason":"Allows the extension to store resized images in Cloud Storage"}],"resources":[{"name":"generateResizedImage","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\neventTrigger:\n  eventType: google.storage.object.finalize\n  resource: projects/_/buckets/${param:IMG_BUCKET}\nlocation: ${param:LOCATION}\nruntime: nodejs16\n","description":"Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.","deletionPolicy":"DELETE"},{"name":"backfillResizedImages","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: ${param:FUNCTION_MEMORY}\nlocation: ${LOCATION}\nruntime: nodejs16\ntaskQueueTrigger: {}\n","description":"Handles tasks from startBackfill to resize existing images.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Firebase","url":"https://firebase.google.com"},"contributors":[{"authorName":"Tina Liang","url":"https://github.com/tinaliang"},{"authorName":"Chris Bianca","email":"chris@csfrequency.com","url":"https://github.com/chrisbianca"},{"authorName":"Invertase","email":"oss@invertase.io","url":"https://github.com/invertase"}],"license":"Apache-2.0","releaseNotesUrl":"https://github.com/firebase/extensions/blob/master/storage-resize-images/CHANGELOG.md","sourceUrl":"https://github.com/firebase/extensions/tree/master/storage-resize-images","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east1","label":"Taiwan (asia-east1)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast1","label":"Singapore (asia-southeast1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"IMG_BUCKET","label":"Cloud Storage bucket for images","type":"SELECT_RESOURCE","description":"To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"${STORAGE_BUCKET}","example":"my-project-12345.appspot.com","validationRegex":"^([0-9a-z_.-]*)$","validationErrorMessage":"Invalid storage bucket","resourceInfo":{"resourceType":"storage.googleapis.com/Bucket"}},{"param":"IMG_SIZES","label":"Sizes of resized images","type":"STRING","description":"What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n","required":true,"default":"200x200","example":"200x200","validationRegex":"^\\d+x(\\d+,\\d+x)*\\d+$","validationErrorMessage":"Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values."},{"param":"DELETE_ORIGINAL_FILE","label":"Deletion of original file","type":"SELECT","description":"Do you want to automatically delete the original file from the Cloud Storage bucket? warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.","required":true,"options":[{"value":"false","label":"Don't delete"},{"value":"true","label":"Delete on any resize attempt"},{"value":"on_success","label":"Delete only on successful resize attempts"}],"default":"false"},{"param":"MAKE_PUBLIC","label":"Make resized images public","type":"SELECT","description":"Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"false"},{"param":"RESIZED_IMAGES_PATH","label":"Cloud Storage path for resized images","type":"STRING","description":"A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n","example":"thumbnails"},{"param":"INCLUDE_PATH_LIST","label":"Paths that contain images you want to resize","type":"STRING","description":"Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n","example":"/users/avatars,/design/pictures","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"EXCLUDE_PATH_LIST","label":"List of absolute paths not included for resized images","type":"STRING","description":"Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n","example":"/users/avatars/thumbs,/design/pictures/thumbs","validationRegex":"^(\\/[^\\s\\/\\,]+)+(\\,(\\/[^\\s\\/\\,]+)+)*$","validationErrorMessage":"Invalid paths, must be a comma-separated list of absolute path values."},{"param":"FAILED_IMAGES_PATH","label":"Cloud Storage path for failed images","type":"STRING","description":"A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n","example":"failed"},{"param":"CACHE_CONTROL_HEADER","label":"Cache-Control header for resized images","type":"STRING","description":"This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n","example":"max-age=86400"},{"param":"IMAGE_TYPE","label":"Convert image to preferred types","type":"MULTISELECT","description":"The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n","required":true,"options":[{"value":"jpeg","label":"jpeg"},{"value":"webp","label":"webp"},{"value":"png","label":"png"},{"value":"tiff","label":"tiff"},{"value":"gif","label":"gif"},{"value":"avif","label":"avif"},{"value":"false","label":"original"}],"default":"false"},{"param":"OUTPUT_OPTIONS","label":"Output options for selected formats","type":"STRING","description":"Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n","validationRegex":"^({(.*?)})$","validationErrorMessage":"Please provide a valid json object."},{"param":"IS_ANIMATED","label":"GIF and WEBP animated option","type":"SELECT","description":"Keep animation of GIF and WEBP formats.\n","options":[{"value":"true","label":"Yes"},{"value":"false","label":"No (1st frame only)"}],"default":"true"},{"param":"FUNCTION_MEMORY","label":"Cloud Function memory","type":"SELECT","description":"Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).","required":true,"options":[{"value":"512","label":"512 MB"},{"value":"1024","label":"1 GB"},{"value":"2048","label":"2 GB"}],"default":"1024"},{"param":"DO_BACKFILL","label":"Backfill existing images","type":"SELECT","description":"Should existing, unresized images in the Storage bucket be resized as well?\n","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}]}],"preinstallContent":"Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","postinstallContent":"### See it in action\n\nYou can test out this extension right away!\n\n1.  Go to your [Storage dashboard](https://console.firebase.google.com/project/${param:PROJECT_ID}/storage) in the Firebase console.\n\n1.  Upload an image file to the bucket: `${param:IMG_BUCKET}`\n\n1.  In a few seconds, the resized image(s) appear in the same bucket.\n\n    Note that you might need to refresh the page to see changes.\n\n### Using the extension\n\nYou can upload images using the [Cloud Storage for Firebase SDK](https://firebase.google.com/docs/storage/) for your platform (iOS, Android, or Web). Alternatively, you can upload images directly in the Firebase console's Storage dashboard.\n\nWhenever you upload an image file to `${param:IMG_BUCKET}`, this extension does the following:\n\n- Creates resized image(s) with your specfied dimensions.\n- Names resized image(s) using the same name as the original uploaded image, but suffixed with the specified width and height.\n- Stores the resized image(s) in the bucket `${param:IMG_BUCKET}` (and, if configured, under the path `${param:RESIZED_IMAGES_PATH}`).\n\nThe extension also copies the following [metadata](https://cloud.google.com/storage/docs/metadata#mutable), if present, from the original image to the resized image(s):\n\n- `Cache-Control`\n- `Content-Disposition`\n- `Content-Encoding`\n- `Content-Language`\n- `Content-Type`\n- [user-provided metadata](https://cloud.google.com/storage/docs/metadata#custom-metadata)\n - If the original image contains a download token (publically accessible via a unique download URL), a new download token is generated for the resized image(s). \n - If the orginal image does not contain a download token, resized image(s) will not be created with unique tokens. To make a resized image publically accessible, call the [`getDownloadURL`](https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getdownloadurl) method.\n\nBe aware of the following when using this extension:\n\n- Each original image must have a valid [image MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#Image_types) specified in its [`Content-Type` metadata](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type) (for example, `image/png`). Below is a list of the content types supported by this extension:\n  * image/jpeg\n  * image/png\n  * image/tiff\n  * image/webp\n  * image/gif\n\nIf you are using raw image data in your application, you need to ensure you set the correct content type when uploading to the Firebase Storage bucket to trigger the extension image resize. Below is an example of how to set the content type:\n\n```js\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"../path-to-service-account.json\");\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n});\n\nconst storage = admin.storage();\n\n// rawImage param is the binary data read from the file system or downloaded from URL\nfunction uploadImageToStorage(rawImage){\n  const bucket = storage.bucket(\"YOUR FIREBASE STORAGE BUCKET URL\");\n  const file = bucket.file(\"filename.jpeg\");\n\n  file.save(\n    rawImage,\n    {\n      // set the content type to ensure the extension triggers the image resize(s)\n      metadata: { contentType: \"image/jpeg\" },\n    },\n    (error) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"Sucessfully uploaded image\");\n    }\n  );\n}\n```\n\n- If you configured the `Cache-Control header for resized images` parameter, your specified value will overwrite the value copied from the original image. Learn more about image metadata in the [Cloud Storage documentation](https://firebase.google.com/docs/storage/).\n\n- If you would like to optionally configure `Output options for selected formats` you can create an JSON stringfied object where you can provide file [Sharp Output Options](https://sharp.pixelplumbing.com/api-output#jpeg). Please use file formats as object keys and pass correct options. Incorrect options parameters or not selected formats will be ignored. Provide it as stringfied JSON object without outer quote signs and indentation:\n\n```js\n{\"jpeg\": {\"quality\": 5,\"chromaSubsampling\": '4:4:4'}, \"png\": { \"pallete\": true}}\n```\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n\n### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)","readmeContent":"# Resize Images\n\n**Author**: Firebase (**[https://firebase.google.com](https://firebase.google.com)**)\n\n**Description**: Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image.\n\n\n\n**Details**: Use this extension to create resized versions of an image uploaded to a Cloud Storage bucket.\n\nWhen you upload a file to your specified Cloud Storage bucket, this extension:\n\n- Detects if the file is an image. If it is, then:\n  - Creates a resized image with your specified dimensions.\n  - Names the resized image using the same name as the original uploaded image, but suffixed with your specified width and height.\n  - Stores the resized image in the same Storage bucket as the original uploaded image.\n\nYou can even configure the extension to create resized images of different dimensions for each original image upload. For example, you might want images that are 200x200, 400x400, and 680x680 - this extension can create these three resized images then store them in your bucket.\n\nThe extension automatically copies the following metadata, if present, from the original image to the resized image(s): `Cache-Control`, `Content-Disposition`, `Content-Encoding`, `Content-Language`, `Content-Type`, and user-provided metadata (a new Firebase storage download token will be generated on the resized image(s) if the original metadata contains a token). Note that you can optionally configure the extension to overwrite the [`Cache-Control`](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) value for the resized image(s).\n\nThe extension supports resizing images in `JPEG`, `PNG`, `WebP`, `GIF`, `AVIF` and `TIFF` formats, and the output can be in one or more of these formats.\n\nThe extension can publish a resize completion event which you can optionally enable when you install the extension. If you enable events, you can [write custom event handlers](https://firebase.google.com/docs/extensions/install-extensions#eventarc) that respond to these events. You can always enable or disable events later. Events will be emitted via Eventarc.\n\n#### Detailed configuration information\n\nTo configure this extension, you specify a maximum width and a maximum height (in pixels, px). This extension keeps the aspect ratio of uploaded images constant and shrinks the image until the resized image's dimensions are at or under your specified max width and height.\n\nFor example, say that you specify a max width of 200px and a max height of 100px. You upload an image that is 480px wide by 640px high, which means a 0.75 aspect ratio. The final resized image will be 75px wide by 100px high to maintain the aspect ratio while also being at or under both of your maximum specified dimensions.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've [set up a Cloud Storage bucket](https://firebase.google.com/docs/storage) in your Firebase project.\n\n> **NOTE**: As mentioned above, this extension listens for all changes made to the specified Cloud Storage bucket. This may cause unnecessary function calls. It is recommended to create a separate Cloud Storage bucket, especially for images you want to resize, and set up this extension to listen to that bucket.\n\n#### Multiple instances of this extension\n\nYou can install multiple instances of this extension for the same project to configure different resizing options for different paths. However, as mentioned before this extension listens for all changes made to the specified Cloud Storage bucket. That means all instances will be triggered every time a file is uploaded to the bucket. Therefore, it is recommended to use different buckets instead of different paths to prevent unnecessary function calls.\n\n#### Troubleshooting\n\nIf events are enabled, and you want to create custom event handlers to respond to the events published by the extension, you must ensure that you have the appropriate [role/permissions](https://cloud.google.com/pubsub/docs/access-control#permissions_and_roles) to subscribe to Pub/Sub events.\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s no-cost tier:\n - Cloud Storage\n - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n- If you enable events [Eventarc fees apply](https://cloud.google.com/eventarc/pricing).\n\n#### Further reading & resources\n\nYou can find more information about this extension in the following articles:\n\n- [Image Optimization With Firebase Extensions](https://invertase.link/ext-resize-images-tutorial)\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your Storage bucket. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* Cloud Storage bucket for images: To which Cloud Storage bucket will you upload images that you want to resize? Resized images will be stored in this bucket. Depending on your extension configuration, original images are either kept or deleted. It is recommended to create a separate bucket for this extension. For more information, refer to the [pre-installation guide](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Sizes of resized images: What sizes of images would you like (in pixels)? Enter the sizes as a comma-separated list of WIDTHxHEIGHT values. Learn more about [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).\n\n\n* Deletion of original file: Do you want to automatically delete the original file from the Cloud Storage bucket? Warning: these deletions cannot be undone, and if you reconfigure this instance to use different image dimensions, you won't be able to backfill deleted images.\n\n* Make resized images public: Do you want to make the resized images public automatically? So you can access them by URL. For example: https://storage.googleapis.com/{bucket}/{path}\n\n* Cloud Storage path for resized images: A relative path in which to store resized images. For example, if you specify a path here of `thumbs` and you upload an image to `/images/original.jpg`, then the resized image is stored at `/images/thumbs/original_200x200.jpg`. If you prefer to store resized images at the root of your bucket, leave this field empty.\n\n\n* Paths that contain images you want to resize: Restrict storage-resize-images to only resize images in specific locations in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, specifying the paths `/users/pictures,/restaurants/menuItems` will resize any images found in any subdirectories of `/users/pictures` and `/restaurants/menuItems`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would include any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`. \nIf you prefer not to explicitly restrict to certain directories of your Storage bucket, leave this field empty.\n\n\n* List of absolute paths not included for resized images: Ensure storage-resize-images does *not* resize images in _specific locations_ in your Storage bucket by  supplying a comma-separated list of absolute paths. For example, to *exclude* the images  stored in the `/foo/alpha` and its subdirectories and `/bar/beta` and its subdirectories, specify the paths `/foo/alpha,/bar/beta`.\nYou may also use wildcard notation for directories in the path. For example, `/users/*/pictures` would exclude any images in any subdirectories of `/users/foo/pictures` as well as any images in subdirectories of `/users/bar/pictures`, but also any images in subdirectories of `/users/any/level/of/subdirectories/pictures`.\nIf you prefer to resize every image uploaded to your Storage bucket,  leave this field empty.\n\n\n* Cloud Storage path for failed images: A relative path in which to store failed images. For example, if you specify a path here of `failed` and you upload an image to `/images/original.jpg`, then resizing failed, the image will be stored at `/images/failed/original.jpg`.\nLeave this field empty if you do not want to store failed images in a separate directory.\n\n\n* Cache-Control header for resized images: This extension automatically copies any `Cache-Control` metadata from the original image to the resized images. For the resized images, do you want to overwrite this copied `Cache-Control` metadata or add `Cache-Control` metadata? Learn more about [`Cache-Control` headers](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control). If you prefer not to overwrite or add `Cache-Control` metadata, leave this field empty.\n\n\n* Convert image to preferred types: The image types you'd like your source image to convert to.  The default for this option will be to keep the original file type as the destination file type.\n\n\n* Output options for selected formats: Provide a optional output option stringified object containing Sharp Output Options for selected image types conversion. eg. `{\"jpeg\": { \"quality\": 5, \"chromaSubsampling\": \"4:4:4\" }, \"png\": { \"pallete\": true }}`\n\n\n* GIF and WEBP animated option: Keep animation of GIF and WEBP formats.\n\n\n* Cloud Function memory: Memory of the function responsible of resizing images.  Choose how much memory to give to the function that resize images. (For animated GIF => GIF we recommend using a minimum of 2GB).\n\n* Backfill existing images: Should existing, unresized images in the Storage bucket be resized as well?\n\n\n\n\n**Cloud Functions:**\n\n* **generateResizedImage:** Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then stores the resized images in the same bucket. Optionally keeps or deletes the original images.\n\n* **backfillResizedImages:** Handles tasks from startBackfill to resize existing images.\n\n\n\n**APIs Used**:\n\n* storage-component.googleapis.com (Reason: Needed to use Cloud Storage)\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* storage.admin (Reason: Allows the extension to store resized images in Cloud Storage)\n","lifecycleEvents":[{"stage":"ON_INSTALL","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_UPDATE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"},{"stage":"ON_CONFIGURE","processingMessage":"Resizing existing images in ${param:IMG_BUCKET}","taskQueueTriggerFunction":"backfillResizedImages"}],"displayName":"Resize Images","events":[{"type":"firebase.extensions.storage-resize-images.v1.complete","description":"Occurs when image resizing completes. The event will contain further details about specific formats and sizes."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true},{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","default":"3000","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true}]},"state":"PUBLISHED","hash":"008e9b78f75cc2082febea52eb76a3c2e17f90f23f90e7b0f5bdfe9a43aa6c81","createTime":"2023-06-07T17:38:42.485685Z","sourceDownloadUri":"https://storage.googleapis.com/firebase-mod-sources-prod/008e9b78f75cc2082febea52eb76a3c2e17f90f23f90e7b0f5bdfe9a43aa6c81","id":"0.1.37","releaseNotes":"feature - bump to nodejs16\n\nfixed - correct include path list description\n","buildSourceUri":"https://github.com/firebase/extensions/tree/25537363d0d4416fd5d9326a0d5f452fd6e342f3","listing":{"state":"APPROVED"},"metrics":{"activeInstallCount":"400"},"extensionRoot":"storage-resize-images"}
[debug] [2023-06-30T14:49:42.791Z] [extensions] Source code valid for firebase/storage-resize-images@0.1.37
[warn] ⚠  Function 'backfillResizedImages is missing a trigger in extension.yaml. Please add one, as triggers defined in code are ignored. {"metadata":{"emulator":{"name":"functions"},"message":"Function 'backfillResizedImages is missing a trigger in extension.yaml. Please add one, as triggers defined in code are ignored."}}
[debug] [2023-06-30T14:49:42.793Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images [none]
[debug] [2023-06-30T14:49:43.431Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images 200
[debug] [2023-06-30T14:49:43.431Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/firebase/extensions/storage-resize-images {"name":"publishers/firebase/extensions/storage-resize-images","ref":"firebase/storage-resize-images","latestVersion":"0.1.37","latestVersionCreateTime":"2023-06-07T17:38:42.485685Z","state":"PUBLISHED","createTime":"2021-03-18T22:07:59.572345Z","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/firebase/resize_images_120@2x.png","publisher":{"displayName":"Firebase","iconUri":"https://storage.googleapis.com/firebase-extensions-icons/publisher_icons/firebase/firebase_128dp.png"},"repoUri":"https://github.com/firebase/extensions","metrics":{"activeInstallCount":"18400"},"latestApprovedVersion":"0.1.37"}
[debug] [2023-06-30T14:49:43.435Z] [functions] Functions Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-06-30T14:49:43.435Z] [eventarc] Eventarc Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-06-30T14:49:43.435Z] [logging] Logging Emulator only supports listening on one address (127.0.0.1). Not listening on ::1
[debug] [2023-06-30T14:49:43.436Z] assigned listening specs for emulators {"user":{"ui":[{"address":"127.0.0.1","family":"IPv4","port":4000}],"auth":[{"address":"127.0.0.1","family":"IPv4","port":9099}],"firestore":[{"address":"127.0.0.1","family":"IPv4","port":8080}],"firestore.websocket":[{"address":"127.0.0.1","family":"IPv4","port":9150}],"storage":[{"address":"127.0.0.1","family":"IPv4","port":9199}],"functions":[{"address":"127.0.0.1","family":"IPv4","port":5001}],"eventarc":[{"address":"127.0.0.1","family":"IPv4","port":9299}],"hub":[{"address":"127.0.0.1","family":"IPv4","port":4400},{"address":"::1","family":"IPv6","port":4400}],"logging":[{"address":"127.0.0.1","family":"IPv4","port":4500}]},"metadata":{"message":"assigned listening specs for emulators"}}
[debug] [2023-06-30T14:49:43.442Z] [hub] writing locator at /tmp/hub-birch-collective-develop.json
[debug] [2023-06-30T14:49:43.446Z] [Extensions] Started Extensions emulator, this is a noop.
[warn] ⚠  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, hosting, pubsub {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, hosting, pubsub\u001b[22m"}}
[debug] [2023-06-30T14:49:43.448Z] defaultcredentials: writing to file /home/ruben/.config/firebase/a_ruben00001_gmail.com_application_default_credentials.json
[debug] [2023-06-30T14:49:43.449Z] Setting GAC to /home/ruben/.config/firebase/a_ruben00001_gmail.com_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to /home/ruben/.config/firebase/a_ruben00001_gmail.com_application_default_credentials.json"}}
[debug] [2023-06-30T14:49:43.450Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig [none]
[debug] [2023-06-30T14:49:43.660Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig 200
[debug] [2023-06-30T14:49:43.660Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/birch-collective-develop/adminSdkConfig {"projectId":"birch-collective-develop","storageBucket":"birch-collective-develop.appspot.com","locationId":"europe-west2"}
[info] i  firestore: Importing data from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/firestore_export/firestore_export.overall_export_metadata {"metadata":{"emulator":{"name":"firestore"},"message":"Importing data from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/firestore_export/firestore_export.overall_export_metadata"}}
[debug] [2023-06-30T14:49:43.685Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-06-30T14:49:43.685Z] Ignoring unsupported arg: single_project_mode_error {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: single_project_mode_error"}}
[debug] [2023-06-30T14:49:43.685Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","/home/ruben/.cache/firebase/emulators/cloud-firestore-emulator-v1.17.4.jar","--host","127.0.0.1","--port",8080,"--websocket_port",9150,"--project_id","birch-collective-develop","--seed_from_export","/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/firestore_export/firestore_export.overall_export_metadata","--rules","/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/firestore.rules","--single_project_mode",true,"--functions_emulator","127.0.0.1:5001"],"optionalArgs":["port","webchannel_port","host","rules","websocket_port","functions_emulator","seed_from_export","project_id","single_project_mode"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"/home/ruben/.cache/firebase/emulators/cloud-firestore-emulator-v1.17.4.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--websocket_port\",9150,\"--project_id\",\"birch-collective-develop\",\"--seed_from_export\",\"/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/firestore_export/firestore_export.overall_export_metadata\",\"--rules\",\"/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/firestore.rules\",\"--single_project_mode\",true,\"--functions_emulator\",\"127.0.0.1:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"websocket_port\",\"functions_emulator\",\"seed_from_export\",\"project_id\",\"single_project_mode\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2023-06-30T14:49:45.337Z] Jun 30, 2023 3:49:45 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
INFO: Started WebSocket server on ws://127.0.0.1:9150
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:49:45 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://127.0.0.1:9150\n"}}
[debug] [2023-06-30T14:49:45.355Z] API endpoint: http://127.0.0.1:8080
 {"metadata":{"emulator":{"name":"firestore"},"message":"API endpoint: http://127.0.0.1:8080\n"}}
[debug] [2023-06-30T14:49:45.355Z] If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:

   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080

Dev App Server is now running.

 {"metadata":{"emulator":{"name":"firestore"},"message":"If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=127.0.0.1:8080\n\nDev App Server is now running.\n\n"}}
[info] ✔  firestore: Firestore Emulator UI websocket is running on 9150. {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator UI websocket is running on 9150."}}
[info] i  auth: Importing config from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/auth_export/config.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing config from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/auth_export/config.json"}}
[info] i  auth: Importing accounts from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/auth_export/accounts.json {"metadata":{"emulator":{"name":"auth"},"message":"Importing accounts from /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data/auth_export/accounts.json"}}
[debug] [2023-06-30T14:49:53.440Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-06-30T14:49:54.761Z] Temp file directory for storage emulator: /tmp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: /tmp/firebase/storage/blobs"}}
[debug] [2023-06-30T14:49:54.791Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2023-06-30T14:49:54.792Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2023-06-30T14:49:54.792Z] Starting Emulator UI with command {"binary":"node","args":["/home/ruben/.cache/firebase/emulators/ui-v1.11.6/server/server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"/home/ruben/.cache/firebase/emulators/ui-v1.11.6/server/server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2023-06-30T14:49:54.908Z] Web / API server started at 127.0.0.1:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at 127.0.0.1:4000\n"}}
[debug] [2023-06-30T14:49:55.061Z] [Extensions] Connecting Extensions emulator, this is a noop.
[info] i  functions: Watching "/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions\" for Cloud Functions..."}}
[info] ✔  functions: Loaded functions definitions from source: generateResizedImage, backfillResizedImages. {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: generateResizedImage, backfillResizedImages."}}
[debug] [2023-06-30T14:49:55.063Z] addStorageTrigger {"eventTrigger":{"eventType":"google.storage.object.finalize","resource":"projects/_/buckets/birch-collective-develop.appspot.com","service":"storage.googleapis.com"}}
[info] ✔  functions[europe-west2-ext-storage-resize-images-generateResizedImage]: storage function initialized. {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mstorage\u001b[22m function initialized."}}
[warn] ⚠  Unsupported function type on ext-storage-resize-images-backfillResizedImages. Expected either an httpsTrigger, eventTrigger, or blockingTrigger. {"metadata":{"emulator":{"name":"functions"},"message":"Unsupported function type on ext-storage-resize-images-backfillResizedImages. Expected either an httpsTrigger, eventTrigger, or blockingTrigger."}}
[info] i  functions[europe-west2-ext-storage-resize-images-backfillResizedImages]: function ignored because the unknown emulator does not exist or is not running. {"metadata":{"emulator":{"name":"functions"},"message":"function ignored because the unknown emulator does not exist or is not running."}}
[info] i  functions: Watching "/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/functions\" for Cloud Functions..."}}
[debug] [2023-06-30T14:49:55.068Z] Validating nodejs source
[debug] [2023-06-30T14:49:56.069Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "scripts": {
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "18"
  },
  "main": "index.js",
  "dependencies": {
    "firebase-admin": "^11.8.0",
    "firebase-functions": "^4.3.1"
  },
  "devDependencies": {
    "firebase-functions-test": "^3.1.0"
  },
  "private": true
}
[debug] [2023-06-30T14:49:56.069Z] Building nodejs source
[debug] [2023-06-30T14:49:56.070Z] Failed to find version of module node: reached end of search path /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/functions/node_modules
[info] ✔  functions: Using node@18 from host. 
[debug] [2023-06-30T14:49:56.080Z] Could not find functions.yaml. Must use http discovery
[debug] [2023-06-30T14:49:56.083Z] Found firebase-functions binary at '/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/functions/node_modules/.bin/firebase-functions'
[debug] [2023-06-30T14:49:56.356Z] Serving at port 8723

[debug] [2023-06-30T14:49:56.532Z] Got response from /__/functions.yaml {"endpoints":{},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2023-06-30T14:49:56.539Z] shutdown requested via /__/quitquitquit

[info] ✔  functions: Loaded functions definitions from source: . {"metadata":{"emulator":{"name":"functions"},"message":"Loaded functions definitions from source: ."}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://127.0.0.1:4000/               │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬──────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI              │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Authentication │ 127.0.0.1:9099 │ http://127.0.0.1:4000/auth       │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Functions      │ 127.0.0.1:5001 │ http://127.0.0.1:4000/functions  │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://127.0.0.1:4000/firestore  │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Storage        │ 127.0.0.1:9199 │ http://127.0.0.1:4000/storage    │
├────────────────┼────────────────┼──────────────────────────────────┤
│ Extensions     │ 127.0.0.1:5001 │ http://127.0.0.1:4000/extensions │
└────────────────┴────────────────┴──────────────────────────────────┘
  Emulator Hub running at 127.0.0.1:4400
  Other reserved ports: 4500, 9150
┌─────────────────────────┬───────────────────────────────────────┬────────────────────────────────────────────────────────┐
│ Extension Instance Name │ Extension Ref                         │ View in Emulator UI                                    │
├─────────────────────────┼───────────────────────────────────────┼────────────────────────────────────────────────────────┤
│ storage-resize-images   │ firebase/storage-resize-images@0.1.37 │ http://127.0.0.1:4000/extensions/storage-resize-images │
└─────────────────────────┴───────────────────────────────────────┴────────────────────────────────────────────────────────┘
Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2023-06-30T14:49:58.138Z] Jun 30, 2023 3:49:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:49:58 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:49:59.121Z] Jun 30, 2023 3:49:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:49:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:50:00.945Z] Jun 30, 2023 3:50:00 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:50:00 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:50:01.155Z] Jun 30, 2023 3:50:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:50:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:50:04.139Z] Jun 30, 2023 3:50:04 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:50:04 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-06-30T14:51:15.148Z] Jun 30, 2023 3:51:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:51:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:52:15.173Z] Jun 30, 2023 3:52:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:52:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:53:01.140Z] Jun 30, 2023 3:53:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:53:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:53:47.135Z] Jun 30, 2023 3:53:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:53:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:54:33.139Z] Jun 30, 2023 3:54:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:54:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:55:49.134Z] Jun 30, 2023 3:55:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:55:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:56:35.135Z] Jun 30, 2023 3:56:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:56:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:57:51.137Z] Jun 30, 2023 3:57:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:57:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:58:37.141Z] Jun 30, 2023 3:58:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:58:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:59:01.893Z] Jun 30, 2023 3:59:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:59:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T14:59:23.140Z] Jun 30, 2023 3:59:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 3:59:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:00:23.154Z] Jun 30, 2023 4:00:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:00:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:01:09.139Z] Jun 30, 2023 4:01:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:01:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:01:55.140Z] Jun 30, 2023 4:01:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:01:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:02:41.140Z] Jun 30, 2023 4:02:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:02:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:03:27.139Z] Jun 30, 2023 4:03:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:03:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:04:43.144Z] Jun 30, 2023 4:04:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:04:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:05:29.139Z] Jun 30, 2023 4:05:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:05:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:06:15.139Z] Jun 30, 2023 4:06:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:06:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:07:01.139Z] Jun 30, 2023 4:07:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:07:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:08:17.139Z] Jun 30, 2023 4:08:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:08:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:09:33.138Z] Jun 30, 2023 4:09:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:09:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:10:19.139Z] Jun 30, 2023 4:10:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:10:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:11:05.140Z] Jun 30, 2023 4:11:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:11:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:11:51.140Z] Jun 30, 2023 4:11:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:11:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:13:07.139Z] Jun 30, 2023 4:13:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:13:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:14:07.151Z] Jun 30, 2023 4:14:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:14:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:14:59.797Z] Jun 30, 2023 4:14:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:14:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:15:23.139Z] Jun 30, 2023 4:15:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:15:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:16:39.138Z] Jun 30, 2023 4:16:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:16:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:17:25.139Z] Jun 30, 2023 4:17:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:17:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:18:11.137Z] Jun 30, 2023 4:18:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:18:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:19:27.138Z] Jun 30, 2023 4:19:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:19:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:20:13.137Z] Jun 30, 2023 4:20:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:20:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:20:59.137Z] Jun 30, 2023 4:20:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:20:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:21:27.942Z] Jun 30, 2023 4:21:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:21:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:21:45.139Z] Jun 30, 2023 4:21:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:21:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:22:31.134Z] Jun 30, 2023 4:22:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:22:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:23:31.151Z] Jun 30, 2023 4:23:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:23:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:24:17.138Z] Jun 30, 2023 4:24:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:24:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:25:03.143Z] Jun 30, 2023 4:25:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:25:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:26:03.158Z] Jun 30, 2023 4:26:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:26:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:27:19.139Z] Jun 30, 2023 4:27:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:27:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:28:04.841Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:04.841Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688138884841","timestamp":"2023-06-30T15:28:04.841Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","bucket":"birch-collective-develop.appspot.com","generation":"1688138884669","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:28:04.669Z","updated":"2023-06-30T15:28:04.669Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"WtQqsCwxx8t/106wrFKjAeSW424","metadata":{"firebaseStorageDownloadTokens":"d3c9d54b-dc52-4c78-8a7c-1211152da6b4"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:28:04.669Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media"}}
[debug] [2023-06-30T15:28:04.848Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.847Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:28:04.849Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.847Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:04.849Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:28:04.850Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:04.850Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:04.850Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:04.850Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"6c38fa81-23f2-48a4-b72b-8a5bce045cf3","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","time":"2023-06-30T15:28:04.669Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","bucket":"birch-collective-develop.appspot.com","generation":"1688138884669","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:28:04.669Z","updated":"2023-06-30T15:28:04.669Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"WtQqsCwxx8t/106wrFKjAeSW424","metadata":{"firebaseStorageDownloadTokens":"d3c9d54b-dc52-4c78-8a7c-1211152da6b4"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:28:04.669Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media"}}
[debug] [2023-06-30T15:28:04.852Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:28:04.852Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:04.852Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:28:04.853Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:28:04.853Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:28:04.863Z] [worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[debug] [2023-06-30T15:28:04.863Z] [worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=1"}}
[debug] [2023-06-30T15:28:04.867Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:04.867Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:05.135Z] Jun 30, 2023 4:28:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:28:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:28:05.810Z] [runtime-status] [39403] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.814Z] [runtime-status] [39403] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.814Z] [runtime-status] [39403] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-06-30T15:28:05.815Z] [runtime-status] [39403] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.886Z] [runtime-status] [39403] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-06-30T15:28:05.886Z] [runtime-status] [39403] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:05.887Z] [runtime-status] [39403] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.888Z] [runtime-status] [39403] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.888Z] [runtime-status] [39403] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:05.888Z] [runtime-status] [39403] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:06.022Z] [runtime-status] [39403] initializeApp(DEFAULT) {"storageBucket":"birch-collective-develop.appspot.com","projectId":"birch-collective-develop"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] initializeApp(DEFAULT) {\"storageBucket\":\"birch-collective-develop.appspot.com\",\"projectId\":\"birch-collective-develop\"}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Initializing extension with configuration\"}"}}
[debug] [2023-06-30T15:28:06.037Z] [runtime-status] [39403] Functions runtime initialized. {"cwd":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions","node_version":"18.16.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Functions runtime initialized. {\"cwd\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions\",\"node_version\":\"18.16.0\"}"}}
[debug] [2023-06-30T15:28:06.038Z] [runtime-status] [39403] Listening to port: /tmp/fire_emu_dfaf88b2feeb3ae5.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] Listening to port: /tmp/fire_emu_dfaf88b2feeb3ae5.sock"}}
[debug] [2023-06-30T15:28:06.076Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:28:06.076Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:28:06.077Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:28:06.090Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","bucket":"birch-collective-develop.appspot.com","generation":"1688138884669","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:28:04.669Z","updated":"2023-06-30T15:28:04.669Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"WtQqsCwxx8t/106wrFKjAeSW424","metadata":{"firebaseStorageDownloadTokens":"d3c9d54b-dc52-4c78-8a7c-1211152da6b4"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:28:04.669Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media"},"context":{"eventId":"1688138884841","timestamp":"2023-06-30T15:28:04.841Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688138884669\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:28:04.669Z\",\"updated\":\"2023-06-30T15:28:04.669Z\",\"storageClass\":\"STANDARD\",\"size\":\"144634\",\"md5Hash\":\"/2sfonGDoyvJoapvLZit8Q==\",\"etag\":\"WtQqsCwxx8t/106wrFKjAeSW424\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"d3c9d54b-dc52-4c78-8a7c-1211152da6b4\"},\"crc32c\":\"54GuSg==\",\"timeStorageClassUpdated\":\"2023-06-30T15:28:04.669Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media\"},\"context\":{\"eventId\":\"1688138884841\",\"timestamp\":\"2023-06-30T15:28:04.841Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc' to '/tmp/5c2c4757-8032-40fc-865e-ddb52798c158'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc' to '/tmp/5c2c4757-8032-40fc-865e-ddb52798c158'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc' to '/tmp/5c2c4757-8032-40fc-865e-ddb52798c158'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402' to size: 32x32\"}"}}
[info] >  (node:39403) DeprecationWarning: uuidv4() is deprecated. Use v4() from the uuid module instead. {"user":"(node:39403) DeprecationWarning: uuidv4() is deprecated. Use v4() from the uuid module instead.","metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m (node:39403) DeprecationWarning: uuidv4() is deprecated. Use v4() from the uuid module instead."}}
[info] >  (Use `node --trace-deprecation ...` to show where the warning was created) {"user":"(Use `node --trace-deprecation ...` to show where the warning was created)","metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m (Use `node --trace-deprecation ...` to show where the warning was created)"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[debug] [2023-06-30T15:28:06.354Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.354Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688138886354","timestamp":"2023-06-30T15:28:06.354Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688138886353","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.353Z","updated":"2023-06-30T15:28:06.353Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"Kk1MEAOMaosgc753rv2j5fjXXT0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6d309f21-182a-4bfd-bba9-d4454b3105f5"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.353Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media"}}
[debug] [2023-06-30T15:28:06.356Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.356Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:06.356Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.356Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.357Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:06.357Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.357Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:06.358Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.358Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"9135aa61-4396-4cb1-ae79-2653e234ec4b","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","time":"2023-06-30T15:28:06.353Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688138886353","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.353Z","updated":"2023-06-30T15:28:06.353Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"Kk1MEAOMaosgc753rv2j5fjXXT0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6d309f21-182a-4bfd-bba9-d4454b3105f5"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.353Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/417eed94-5774-4f02-afe3-8ed6f681c402'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32'\"}"}}
[debug] [2023-06-30T15:28:06.360Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:06.360Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.360Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:28:06.360Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:28:06.360Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:28:06.375Z] [worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[debug] [2023-06-30T15:28:06.375Z] [worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=2 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=2"}}
[debug] [2023-06-30T15:28:06.377Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.377Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'\"}"}}
[debug] [2023-06-30T15:28:06.574Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.575Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688138886574","timestamp":"2023-06-30T15:28:06.574Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688138886572","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.572Z","updated":"2023-06-30T15:28:06.572Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"H/gwkuEO/oFapv1XrMLQ4Cey8AI","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c90bdcb7-8b22-4dad-860f-dfae180f881a"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.572Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media"}}
[debug] [2023-06-30T15:28:06.577Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.577Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.578Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.577Z"],"workRunningCount":3}
[debug] [2023-06-30T15:28:06.578Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.579Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.580Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:06.580Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.580Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"9b632ca1-4c72-4f0f-9ffc-266c20fb9b26","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","time":"2023-06-30T15:28:06.572Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688138886572","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.572Z","updated":"2023-06-30T15:28:06.572Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"H/gwkuEO/oFapv1XrMLQ4Cey8AI","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c90bdcb7-8b22-4dad-860f-dfae180f881a"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.572Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/fbb6cf45-11ed-47a3-9254-e6a58145ce93'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'\"}"}}
[debug] [2023-06-30T15:28:06.593Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.593Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688138886593","timestamp":"2023-06-30T15:28:06.593Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","bucket":"birch-collective-develop.appspot.com","generation":"1688138884669","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:28:04.669Z","updated":"2023-06-30T15:28:04.669Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"WtQqsCwxx8t/106wrFKjAeSW424","metadata":{"firebaseStorageDownloadTokens":"d3c9d54b-dc52-4c78-8a7c-1211152da6b4"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:28:04.669Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media"}}
[debug] [2023-06-30T15:28:06.594Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.594Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.594Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:04.852Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.594Z"],"workRunningCount":3}
[debug] [2023-06-30T15:28:06.594Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:28:06.594Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:28:06.594Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:28:06.604Z] [worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[debug] [2023-06-30T15:28:06.604Z] [worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=3 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key europe-west2-ext-storage-resize-images-generateResizedImage, total=3"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/a0a7572c-fff1-4739-a758-734ff41ce0dc'\"}"}}
[debug] [2023-06-30T15:28:06.612Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 535.076584ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 535.076584ms"}}
[debug] [2023-06-30T15:28:06.614Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:28:06.614Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:28:06.614Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:28:06.614Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.360Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.594Z"],"workRunningCount":2}
[debug] [2023-06-30T15:28:06.617Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.617Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:06.619Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.619Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:06.619Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:28:06.619Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"6e2e974d-c31e-4de7-816d-3aa5af88d9b9","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","time":"2023-06-30T15:28:04.669Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc","bucket":"birch-collective-develop.appspot.com","generation":"1688138884669","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:28:04.669Z","updated":"2023-06-30T15:28:04.669Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"WtQqsCwxx8t/106wrFKjAeSW424","metadata":{"firebaseStorageDownloadTokens":"d3c9d54b-dc52-4c78-8a7c-1211152da6b4"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:28:04.669Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc/1688138884669","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc?generation=1688138884669&alt=media"}}
[debug] [2023-06-30T15:28:06.622Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:28:06.623Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:28:07.136Z] [runtime-status] [39423] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.137Z] [runtime-status] [39423] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.138Z] [runtime-status] [39423] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-06-30T15:28:07.145Z] [runtime-status] [39423] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.169Z] [runtime-status] [39423] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-06-30T15:28:07.169Z] [runtime-status] [39423] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:07.170Z] [runtime-status] [39423] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.171Z] [runtime-status] [39423] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.171Z] [runtime-status] [39423] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.172Z] [runtime-status] [39423] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:07.213Z] [runtime-status] [39423] initializeApp(DEFAULT) {"storageBucket":"birch-collective-develop.appspot.com","projectId":"birch-collective-develop"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] initializeApp(DEFAULT) {\"storageBucket\":\"birch-collective-develop.appspot.com\",\"projectId\":\"birch-collective-develop\"}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Initializing extension with configuration\"}"}}
[debug] [2023-06-30T15:28:07.225Z] [runtime-status] [39423] Functions runtime initialized. {"cwd":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions","node_version":"18.16.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Functions runtime initialized. {\"cwd\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions\",\"node_version\":\"18.16.0\"}"}}
[debug] [2023-06-30T15:28:07.225Z] [runtime-status] [39423] Listening to port: /tmp/fire_emu_150954921a31a7c5.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] Listening to port: /tmp/fire_emu_150954921a31a7c5.sock"}}
[debug] [2023-06-30T15:28:07.292Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:28:07.292Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:28:07.293Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:28:07.296Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 4.339426ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 4.339426ms"}}
[debug] [2023-06-30T15:28:07.297Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:28:07.297Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:28:07.297Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:28:07.297Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:28:06.594Z"],"workRunningCount":1}
[debug] [2023-06-30T15:28:07.305Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688138886353","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.353Z","updated":"2023-06-30T15:28:06.353Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"Kk1MEAOMaosgc753rv2j5fjXXT0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6d309f21-182a-4bfd-bba9-d4454b3105f5"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.353Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media"},"context":{"eventId":"1688138886354","timestamp":"2023-06-30T15:28:06.354Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688138886353\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:28:06.353Z\",\"updated\":\"2023-06-30T15:28:06.353Z\",\"storageClass\":\"STANDARD\",\"size\":\"172\",\"md5Hash\":\"8oyrq4V5dmijnLJ+toEhcw==\",\"etag\":\"Kk1MEAOMaosgc753rv2j5fjXXT0\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"6d309f21-182a-4bfd-bba9-d4454b3105f5\"},\"crc32c\":\"OVEVMQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:28:06.353Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media\"},\"context\":{\"eventId\":\"1688138886354\",\"timestamp\":\"2023-06-30T15:28:06.354Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:28:07.354Z] [runtime-status] [39431] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.354Z] [runtime-status] [39431] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.355Z] [runtime-status] [39431] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2023-06-30T15:28:07.355Z] [runtime-status] [39431] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.385Z] [runtime-status] [39431] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Checked functions.config() {\"config\":{}}"}}
[debug] [2023-06-30T15:28:07.385Z] [runtime-status] [39431] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:07.386Z] [runtime-status] [39431] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.387Z] [runtime-status] [39431] Resolved module firebase-admin {"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.387Z] [runtime-status] [39431] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.24.1","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.24.1\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-functions/lib/index.js\"}"}}
[debug] [2023-06-30T15:28:07.387Z] [runtime-status] [39431] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"11.5.0","resolution":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js"}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"11.5.0\",\"resolution\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions/node_modules/firebase-admin/lib/index.js\"}}"}}
[debug] [2023-06-30T15:28:07.429Z] [runtime-status] [39431] initializeApp(DEFAULT) {"storageBucket":"birch-collective-develop.appspot.com","projectId":"birch-collective-develop"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] initializeApp(DEFAULT) {\"storageBucket\":\"birch-collective-develop.appspot.com\",\"projectId\":\"birch-collective-develop\"}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Initializing extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Initializing extension with configuration\"}"}}
[debug] [2023-06-30T15:28:07.440Z] [runtime-status] [39431] Functions runtime initialized. {"cwd":"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions","node_version":"18.16.0"} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Functions runtime initialized. {\"cwd\":\"/home/ruben/.cache/firebase/extensions/firebase/storage-resize-images@0.1.37/functions\",\"node_version\":\"18.16.0\"}"}}
[debug] [2023-06-30T15:28:07.441Z] [runtime-status] [39431] Listening to port: /tmp/fire_emu_430a9499885f4e54.sock {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39431] Listening to port: /tmp/fire_emu_430a9499885f4e54.sock"}}
[debug] [2023-06-30T15:28:07.527Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: IDLE"}}
[debug] [2023-06-30T15:28:07.528Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:28:07.530Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:28:07.533Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688138886572","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.572Z","updated":"2023-06-30T15:28:06.572Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"H/gwkuEO/oFapv1XrMLQ4Cey8AI","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c90bdcb7-8b22-4dad-860f-dfae180f881a"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.572Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media"},"context":{"eventId":"1688138886574","timestamp":"2023-06-30T15:28:06.574Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688138886572\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:28:06.572Z\",\"updated\":\"2023-06-30T15:28:06.572Z\",\"storageClass\":\"STANDARD\",\"size\":\"50902\",\"md5Hash\":\"OoR83DDIg+fi1SfmdDEGQg==\",\"etag\":\"H/gwkuEO/oFapv1XrMLQ4Cey8AI\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"c90bdcb7-8b22-4dad-860f-dfae180f881a\"},\"crc32c\":\"+UdurQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:28:06.572Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media\"},\"context\":{\"eventId\":\"1688138886574\",\"timestamp\":\"2023-06-30T15:28:06.574Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:28:07.535Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 5.268568ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 5.268568ms"}}
[debug] [2023-06-30T15:28:07.535Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:28:07.535Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:28:07.535Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:28:07.535Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:29:23.136Z] Jun 30, 2023 4:29:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:29:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:30:23.153Z] Jun 30, 2023 4:30:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:30:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:30:43.166Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.166Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139043166","timestamp":"2023-06-30T15:30:43.166Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17","bucket":"birch-collective-develop.appspot.com","generation":"1688139043156","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:30:43.156Z","updated":"2023-06-30T15:30:43.156Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"Xjjletqud1etTqNGHoCKnrXfHr8","metadata":{"firebaseStorageDownloadTokens":"031f7275-2645-4cab-a0eb-2c46f409aaa2"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T15:30:43.156Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media"}}
[debug] [2023-06-30T15:30:43.170Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.170Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:30:43.170Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.170Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.171Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:30:43.173Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.173Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.174Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.174Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"8bac690a-043e-4f7a-90aa-25221d91b8fe","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17","time":"2023-06-30T15:30:43.156Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17","bucket":"birch-collective-develop.appspot.com","generation":"1688139043156","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:30:43.156Z","updated":"2023-06-30T15:30:43.156Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"Xjjletqud1etTqNGHoCKnrXfHr8","metadata":{"firebaseStorageDownloadTokens":"031f7275-2645-4cab-a0eb-2c46f409aaa2"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T15:30:43.156Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media"}}
[debug] [2023-06-30T15:30:43.175Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:30:43.176Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.176Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:30:43.176Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:30:43.176Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:30:43.176Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:30:43.177Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:30:43.179Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.181Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.182Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17","bucket":"birch-collective-develop.appspot.com","generation":"1688139043156","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:30:43.156Z","updated":"2023-06-30T15:30:43.156Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"Xjjletqud1etTqNGHoCKnrXfHr8","metadata":{"firebaseStorageDownloadTokens":"031f7275-2645-4cab-a0eb-2c46f409aaa2"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T15:30:43.156Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media"},"context":{"eventId":"1688139043166","timestamp":"2023-06-30T15:30:43.166Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a26dae23-7b61-4885-a295-24956dff2e17\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139043156\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:30:43.156Z\",\"updated\":\"2023-06-30T15:30:43.156Z\",\"storageClass\":\"STANDARD\",\"size\":\"102274\",\"md5Hash\":\"j41xxb8Up7IYrGqSbgyCSQ==\",\"etag\":\"Xjjletqud1etTqNGHoCKnrXfHr8\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"031f7275-2645-4cab-a0eb-2c46f409aaa2\"},\"crc32c\":\"AgAG2g==\",\"timeStorageClassUpdated\":\"2023-06-30T15:30:43.156Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media\"},\"context\":{\"eventId\":\"1688139043166\",\"timestamp\":\"2023-06-30T15:30:43.166Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17' to '/tmp/3fbb22f8-eb3f-4e2c-8668-4e0f94c65498'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17' to '/tmp/3fbb22f8-eb3f-4e2c-8668-4e0f94c65498'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17' to '/tmp/3fbb22f8-eb3f-4e2c-8668-4e0f94c65498'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/b58052ed-db11-41af-a242-f7e5858518b6' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/b58052ed-db11-41af-a242-f7e5858518b6' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/b58052ed-db11-41af-a242-f7e5858518b6' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'\"}"}}
[debug] [2023-06-30T15:30:43.232Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.232Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139043232","timestamp":"2023-06-30T15:30:43.232Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139043231","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.231Z","updated":"2023-06-30T15:30:43.231Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"f+wTv0w/baH7YSfItMxj1z1/QDc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e19dbd12-957e-4719-91aa-74b46a057625"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T15:30:43.231Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media"}}
[debug] [2023-06-30T15:30:43.234Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.234Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.234Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.234Z"],"workRunningCount":2}
[debug] [2023-06-30T15:30:43.235Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/b58052ed-db11-41af-a242-f7e5858518b6'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32'\"}"}}
[debug] [2023-06-30T15:30:43.236Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.236Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.236Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.236Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"b6b3b91e-5bd3-45ad-9690-1eeb0e6c0e4f","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","time":"2023-06-30T15:30:43.231Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139043231","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.231Z","updated":"2023-06-30T15:30:43.231Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"f+wTv0w/baH7YSfItMxj1z1/QDc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e19dbd12-957e-4719-91aa-74b46a057625"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T15:30:43.231Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media"}}
[debug] [2023-06-30T15:30:43.238Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.238Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.238Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.238Z"],"workRunningCount":2}
[debug] [2023-06-30T15:30:43.238Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:30:43.238Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:30:43.238Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:30:43.238Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:30:43.239Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:30:43.245Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.247Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.252Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139043231","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.231Z","updated":"2023-06-30T15:30:43.231Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"f+wTv0w/baH7YSfItMxj1z1/QDc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e19dbd12-957e-4719-91aa-74b46a057625"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T15:30:43.231Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media"},"context":{"eventId":"1688139043232","timestamp":"2023-06-30T15:30:43.232Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139043231\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:30:43.231Z\",\"updated\":\"2023-06-30T15:30:43.231Z\",\"storageClass\":\"STANDARD\",\"size\":\"220\",\"md5Hash\":\"QwkECtxr0SisVV/3SxVbgQ==\",\"etag\":\"f+wTv0w/baH7YSfItMxj1z1/QDc\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"e19dbd12-957e-4719-91aa-74b46a057625\"},\"crc32c\":\"fFzPIQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:30:43.231Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media\"},\"context\":{\"eventId\":\"1688139043232\",\"timestamp\":\"2023-06-30T15:30:43.232Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:30:43.258Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 20.39573ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 20.39573ms"}}
[debug] [2023-06-30T15:30:43.260Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:30:43.260Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:30:43.260Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:30:43.260Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'\"}"}}
[debug] [2023-06-30T15:30:43.372Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.373Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139043372","timestamp":"2023-06-30T15:30:43.372Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139043372","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.372Z","updated":"2023-06-30T15:30:43.372Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"n2QB/siqFvId07UoJzYBuo6DSK4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"539f102d-5429-4d09-ada8-41cf8f2fbe58"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T15:30:43.372Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media"}}
[debug] [2023-06-30T15:30:43.375Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.375Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.376Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.375Z"],"workRunningCount":2}
[debug] [2023-06-30T15:30:43.377Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.378Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.378Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.378Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.378Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"b4a1c8b6-e925-4de9-95a3-b155731e6d76","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","time":"2023-06-30T15:30:43.372Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139043372","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.372Z","updated":"2023-06-30T15:30:43.372Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"n2QB/siqFvId07UoJzYBuo6DSK4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"539f102d-5429-4d09-ada8-41cf8f2fbe58"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T15:30:43.372Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/c89e9e5c-547b-4b87-acaa-1ed659ed2b73'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'\"}"}}
[debug] [2023-06-30T15:30:43.385Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.385Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[debug] [2023-06-30T15:30:43.385Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.385Z"],"workRunningCount":2}
[debug] [2023-06-30T15:30:43.385Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:30:43.385Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:30:43.385Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:30:43.385Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:30:43.386Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:30:43.388Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.388Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139043388","timestamp":"2023-06-30T15:30:43.388Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17","bucket":"birch-collective-develop.appspot.com","generation":"1688139043156","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:30:43.156Z","updated":"2023-06-30T15:30:43.156Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"Xjjletqud1etTqNGHoCKnrXfHr8","metadata":{"firebaseStorageDownloadTokens":"031f7275-2645-4cab-a0eb-2c46f409aaa2"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T15:30:43.156Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media"}}
[debug] [2023-06-30T15:30:43.395Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 9.891316ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 9.891316ms"}}
[debug] [2023-06-30T15:30:43.396Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:30:43.396Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:30:43.396Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:30:43.396Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:30:43.175Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/a26dae23-7b61-4885-a295-24956dff2e17'\"}"}}
[debug] [2023-06-30T15:30:43.397Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 220.737742ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 220.737742ms"}}
[debug] [2023-06-30T15:30:43.398Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:30:43.398Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:30:43.398Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:30:43.398Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:30:43.398Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.398Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.399Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139043372","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.372Z","updated":"2023-06-30T15:30:43.372Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"n2QB/siqFvId07UoJzYBuo6DSK4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"539f102d-5429-4d09-ada8-41cf8f2fbe58"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T15:30:43.372Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media"},"context":{"eventId":"1688139043372","timestamp":"2023-06-30T15:30:43.372Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139043372\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:30:43.372Z\",\"updated\":\"2023-06-30T15:30:43.372Z\",\"storageClass\":\"STANDARD\",\"size\":\"40614\",\"md5Hash\":\"XKGg6ZS4WuxRmfSHak89xQ==\",\"etag\":\"n2QB/siqFvId07UoJzYBuo6DSK4\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"539f102d-5429-4d09-ada8-41cf8f2fbe58\"},\"crc32c\":\"SqPiLA==\",\"timeStorageClassUpdated\":\"2023-06-30T15:30:43.372Z\",\"id\":\"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media\"},\"context\":{\"eventId\":\"1688139043372\",\"timestamp\":\"2023-06-30T15:30:43.372Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:30:43.401Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.402Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:30:43.402Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:30:43.402Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"0ac86052-d413-4b29-bd05-c410804775cd","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17","time":"2023-06-30T15:30:43.156Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17","bucket":"birch-collective-develop.appspot.com","generation":"1688139043156","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:30:43.156Z","updated":"2023-06-30T15:30:43.156Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"Xjjletqud1etTqNGHoCKnrXfHr8","metadata":{"firebaseStorageDownloadTokens":"031f7275-2645-4cab-a0eb-2c46f409aaa2"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T15:30:43.156Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17/1688139043156","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17?generation=1688139043156&alt=media"}}
[debug] [2023-06-30T15:30:43.405Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:30:43.405Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:31:14.291Z] Jun 30, 2023 4:31:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:39.908Z] Jun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
Jun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nJun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:39.911Z] Jun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:39.996Z] Jun 30, 2023 4:31:39 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
INFO: Websocket client disconnected
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:39 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed\nINFO: Websocket client disconnected\n"}}
[debug] [2023-06-30T15:31:40.013Z] Jun 30, 2023 4:31:40 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
INFO: Connected to new websocket client
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\n"}}
[debug] [2023-06-30T15:31:40.017Z] Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:40.033Z] Jun 30, 2023 4:31:40 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-06-30T15:31:40.035Z] Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:40.062Z] Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:31:40.095Z] Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:31:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:32:55.111Z] Jun 30, 2023 4:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:33:55.132Z] Jun 30, 2023 4:33:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:33:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:34:55.150Z] Jun 30, 2023 4:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:36:10.171Z] Jun 30, 2023 4:36:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:36:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:36:55.190Z] Jun 30, 2023 4:36:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:36:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:37:40.203Z] Jun 30, 2023 4:37:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:37:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:38:25.227Z] Jun 30, 2023 4:38:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:38:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:39:25.250Z] Jun 30, 2023 4:39:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:39:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:40:40.277Z] Jun 30, 2023 4:40:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:40:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:41:40.299Z] Jun 30, 2023 4:41:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:41:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:42:25.323Z] Jun 30, 2023 4:42:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:42:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:43:25.340Z] Jun 30, 2023 4:43:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:43:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:44:25.387Z] Jun 30, 2023 4:44:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:44:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:44:52.848Z] Jun 30, 2023 4:44:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:44:52 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:45:41.135Z] Jun 30, 2023 4:45:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:45:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:46:03.316Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.316Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139963316","timestamp":"2023-06-30T15:46:03.316Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","bucket":"birch-collective-develop.appspot.com","generation":"1688139963309","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:46:03.309Z","updated":"2023-06-30T15:46:03.309Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"IyjOFfzRgIhZ8huKPudrAGY2UHQ","metadata":{"firebaseStorageDownloadTokens":"a6efd785-7511-4ccd-90a1-5c8d840742a0"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:46:03.309Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media"}}
[debug] [2023-06-30T15:46:03.318Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.318Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:46:03.318Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.318Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.319Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:46:03.320Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.320Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.320Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.320Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e041ed28-a3ed-414c-918f-acca87469a8e","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","time":"2023-06-30T15:46:03.309Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","bucket":"birch-collective-develop.appspot.com","generation":"1688139963309","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:46:03.309Z","updated":"2023-06-30T15:46:03.309Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"IyjOFfzRgIhZ8huKPudrAGY2UHQ","metadata":{"firebaseStorageDownloadTokens":"a6efd785-7511-4ccd-90a1-5c8d840742a0"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:46:03.309Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media"}}
[debug] [2023-06-30T15:46:03.323Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:46:03.324Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.324Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:46:03.324Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:46:03.325Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:46:03.325Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:46:03.325Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:46:03.329Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.329Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.329Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","bucket":"birch-collective-develop.appspot.com","generation":"1688139963309","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:46:03.309Z","updated":"2023-06-30T15:46:03.309Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"IyjOFfzRgIhZ8huKPudrAGY2UHQ","metadata":{"firebaseStorageDownloadTokens":"a6efd785-7511-4ccd-90a1-5c8d840742a0"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:46:03.309Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media"},"context":{"eventId":"1688139963316","timestamp":"2023-06-30T15:46:03.316Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139963309\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:46:03.309Z\",\"updated\":\"2023-06-30T15:46:03.309Z\",\"storageClass\":\"STANDARD\",\"size\":\"144634\",\"md5Hash\":\"/2sfonGDoyvJoapvLZit8Q==\",\"etag\":\"IyjOFfzRgIhZ8huKPudrAGY2UHQ\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"a6efd785-7511-4ccd-90a1-5c8d840742a0\"},\"crc32c\":\"54GuSg==\",\"timeStorageClassUpdated\":\"2023-06-30T15:46:03.309Z\",\"id\":\"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media\"},\"context\":{\"eventId\":\"1688139963316\",\"timestamp\":\"2023-06-30T15:46:03.316Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511' to '/tmp/37fc4f62-ce8b-42e3-bdf6-aa9cef1da620'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511' to '/tmp/37fc4f62-ce8b-42e3-bdf6-aa9cef1da620'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511' to '/tmp/37fc4f62-ce8b-42e3-bdf6-aa9cef1da620'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[debug] [2023-06-30T15:46:03.389Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.389Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139963389","timestamp":"2023-06-30T15:46:03.389Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139963388","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.388Z","updated":"2023-06-30T15:46:03.388Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"zunoRQiRgLbIuGFwBeQzUZrBVLY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"943cd260-12b7-4016-94fe-6f5c2356f78d"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.388Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media"}}
[debug] [2023-06-30T15:46:03.391Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.391Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.392Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.391Z"],"workRunningCount":2}
[debug] [2023-06-30T15:46:03.392Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/2541d41a-6fff-49c7-8239-be5b15cd9cde'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32'\"}"}}
[debug] [2023-06-30T15:46:03.394Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.394Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.395Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.395Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"bc500508-3989-41fc-a07a-4ceb3e189356","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","time":"2023-06-30T15:46:03.388Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139963388","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.388Z","updated":"2023-06-30T15:46:03.388Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"zunoRQiRgLbIuGFwBeQzUZrBVLY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"943cd260-12b7-4016-94fe-6f5c2356f78d"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.388Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media"}}
[debug] [2023-06-30T15:46:03.400Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.400Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.401Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.400Z"],"workRunningCount":2}
[debug] [2023-06-30T15:46:03.401Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:46:03.401Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:46:03.401Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:46:03.401Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:46:03.401Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:46:03.406Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.406Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.407Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139963388","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.388Z","updated":"2023-06-30T15:46:03.388Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"zunoRQiRgLbIuGFwBeQzUZrBVLY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"943cd260-12b7-4016-94fe-6f5c2356f78d"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.388Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media"},"context":{"eventId":"1688139963389","timestamp":"2023-06-30T15:46:03.389Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139963388\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:46:03.388Z\",\"updated\":\"2023-06-30T15:46:03.388Z\",\"storageClass\":\"STANDARD\",\"size\":\"172\",\"md5Hash\":\"8oyrq4V5dmijnLJ+toEhcw==\",\"etag\":\"zunoRQiRgLbIuGFwBeQzUZrBVLY\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"943cd260-12b7-4016-94fe-6f5c2356f78d\"},\"crc32c\":\"OVEVMQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:46:03.388Z\",\"id\":\"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media\"},\"context\":{\"eventId\":\"1688139963389\",\"timestamp\":\"2023-06-30T15:46:03.389Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:46:03.408Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 7.312082ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 7.312082ms"}}
[debug] [2023-06-30T15:46:03.409Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:46:03.409Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:46:03.409Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:46:03.409Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'\"}"}}
[debug] [2023-06-30T15:46:03.571Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.571Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139963571","timestamp":"2023-06-30T15:46:03.571Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139963570","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.570Z","updated":"2023-06-30T15:46:03.570Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"L2LQgp2aoX8TX6l4wBs1qt2Fqk8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.570Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media"}}
[debug] [2023-06-30T15:46:03.572Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.572Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.573Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.572Z"],"workRunningCount":2}
[debug] [2023-06-30T15:46:03.573Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/5a5ea909-7018-48c0-b7ae-7a4e564194c3'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'\"}"}}
[debug] [2023-06-30T15:46:03.575Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.575Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.575Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.575Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"11c98ebb-ea98-4bb4-bb9b-888cd6bcc6c7","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","time":"2023-06-30T15:46:03.570Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139963570","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.570Z","updated":"2023-06-30T15:46:03.570Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"L2LQgp2aoX8TX6l4wBs1qt2Fqk8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.570Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media"}}
[debug] [2023-06-30T15:46:03.577Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.577Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688139963577","timestamp":"2023-06-30T15:46:03.577Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","bucket":"birch-collective-develop.appspot.com","generation":"1688139963309","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:46:03.309Z","updated":"2023-06-30T15:46:03.309Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"IyjOFfzRgIhZ8huKPudrAGY2UHQ","metadata":{"firebaseStorageDownloadTokens":"a6efd785-7511-4ccd-90a1-5c8d840742a0"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:46:03.309Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media"}}
[debug] [2023-06-30T15:46:03.578Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.578Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.578Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.323Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.578Z"],"workRunningCount":2}
[debug] [2023-06-30T15:46:03.578Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:46:03.578Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:46:03.578Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:46:03.578Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:46:03.578Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511'\"}"}}
[debug] [2023-06-30T15:46:03.581Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 255.26755ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 255.26755ms"}}
[debug] [2023-06-30T15:46:03.581Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:46:03.581Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:46:03.581Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:46:03.581Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:46:03.578Z"],"workRunningCount":1}
[debug] [2023-06-30T15:46:03.582Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.582Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.583Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139963570","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.570Z","updated":"2023-06-30T15:46:03.570Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"L2LQgp2aoX8TX6l4wBs1qt2Fqk8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.570Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media"},"context":{"eventId":"1688139963571","timestamp":"2023-06-30T15:46:03.571Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688139963570\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:46:03.570Z\",\"updated\":\"2023-06-30T15:46:03.570Z\",\"storageClass\":\"STANDARD\",\"size\":\"50902\",\"md5Hash\":\"OoR83DDIg+fi1SfmdDEGQg==\",\"etag\":\"L2LQgp2aoX8TX6l4wBs1qt2Fqk8\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2\"},\"crc32c\":\"+UdurQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:46:03.570Z\",\"id\":\"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media\"},\"context\":{\"eventId\":\"1688139963571\",\"timestamp\":\"2023-06-30T15:46:03.571Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:46:03.584Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.584Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:03.584Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:46:03.584Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"8301bdef-107f-4e5c-8168-b4f877491704","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","time":"2023-06-30T15:46:03.309Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511","bucket":"birch-collective-develop.appspot.com","generation":"1688139963309","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:46:03.309Z","updated":"2023-06-30T15:46:03.309Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"IyjOFfzRgIhZ8huKPudrAGY2UHQ","metadata":{"firebaseStorageDownloadTokens":"a6efd785-7511-4ccd-90a1-5c8d840742a0"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:46:03.309Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511/1688139963309","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511?generation=1688139963309&alt=media"}}
[debug] [2023-06-30T15:46:03.586Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 7.913949ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 7.913949ms"}}
[debug] [2023-06-30T15:46:03.587Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:46:03.587Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:46:03.587Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:46:03.587Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:46:03.588Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:46:03.588Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:46:27.139Z] Jun 30, 2023 4:46:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:46:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:47:36.373Z] Jun 30, 2023 4:47:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:47:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:47:43.139Z] Jun 30, 2023 4:47:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:47:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:48:04.963Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:04.968Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140084963","timestamp":"2023-06-30T15:48:04.963Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","bucket":"birch-collective-develop.appspot.com","generation":"1688140084941","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:48:04.941Z","updated":"2023-06-30T15:48:04.941Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"mg12BqqV6jaBq4bGS/Xm+RMbBDs","metadata":{"firebaseStorageDownloadTokens":"2456e731-530b-41f1-be77-a2b61638ef32"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T15:48:04.941Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media"}}
[debug] [2023-06-30T15:48:04.978Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.978Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:48:04.981Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.978Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:04.982Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:48:04.988Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:04.988Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:04.989Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:04.989Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"a5a332d2-3a8b-4f97-a167-c2839b01a228","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","time":"2023-06-30T15:48:04.941Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","bucket":"birch-collective-develop.appspot.com","generation":"1688140084941","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:48:04.941Z","updated":"2023-06-30T15:48:04.941Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"mg12BqqV6jaBq4bGS/Xm+RMbBDs","metadata":{"firebaseStorageDownloadTokens":"2456e731-530b-41f1-be77-a2b61638ef32"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T15:48:04.941Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media"}}
[debug] [2023-06-30T15:48:04.993Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:48:04.996Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:04.996Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:48:04.999Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:48:04.999Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:48:04.999Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:48:05.000Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:48:05.003Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.003Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.006Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","bucket":"birch-collective-develop.appspot.com","generation":"1688140084941","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:48:04.941Z","updated":"2023-06-30T15:48:04.941Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"mg12BqqV6jaBq4bGS/Xm+RMbBDs","metadata":{"firebaseStorageDownloadTokens":"2456e731-530b-41f1-be77-a2b61638ef32"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T15:48:04.941Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media"},"context":{"eventId":"1688140084963","timestamp":"2023-06-30T15:48:04.963Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140084941\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:48:04.941Z\",\"updated\":\"2023-06-30T15:48:04.941Z\",\"storageClass\":\"STANDARD\",\"size\":\"65093\",\"md5Hash\":\"2v5Zhvb5eAkWnlI/Jk8Ccg==\",\"etag\":\"mg12BqqV6jaBq4bGS/Xm+RMbBDs\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"2456e731-530b-41f1-be77-a2b61638ef32\"},\"crc32c\":\"Gz73XA==\",\"timeStorageClassUpdated\":\"2023-06-30T15:48:04.941Z\",\"id\":\"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media\"},\"context\":{\"eventId\":\"1688140084963\",\"timestamp\":\"2023-06-30T15:48:04.963Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc' to '/tmp/114b1771-56f9-474a-8269-9c5bbd5366b8'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc' to '/tmp/114b1771-56f9-474a-8269-9c5bbd5366b8'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc' to '/tmp/114b1771-56f9-474a-8269-9c5bbd5366b8'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'\"}"}}
[debug] [2023-06-30T15:48:05.063Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.063Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140085063","timestamp":"2023-06-30T15:48:05.063Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140085063","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.063Z","updated":"2023-06-30T15:48:05.063Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"LG51e0KhG/0V1gCrlHJ0Ch6T+78","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"86a1365e-28f1-4317-9f0f-e67abd573290"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T15:48:05.063Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media"}}
[debug] [2023-06-30T15:48:05.066Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.066Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.066Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.066Z"],"workRunningCount":2}
[debug] [2023-06-30T15:48:05.066Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.067Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.067Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.067Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.067Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"427970df-8885-40ff-a674-5abe41bef9dd","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","time":"2023-06-30T15:48:05.063Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140085063","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.063Z","updated":"2023-06-30T15:48:05.063Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"LG51e0KhG/0V1gCrlHJ0Ch6T+78","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"86a1365e-28f1-4317-9f0f-e67abd573290"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T15:48:05.063Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media"}}
[debug] [2023-06-30T15:48:05.068Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.068Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.068Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.068Z"],"workRunningCount":2}
[debug] [2023-06-30T15:48:05.068Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:48:05.068Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:48:05.068Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:48:05.068Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:48:05.069Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/3fbbef1c-52c8-47b6-a4d6-31df7297b1d2'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32'\"}"}}
[debug] [2023-06-30T15:48:05.073Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 4.395681ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 4.395681ms"}}
[debug] [2023-06-30T15:48:05.073Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:48:05.073Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:48:05.073Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:48:05.073Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.074Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.074Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.074Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140085063","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.063Z","updated":"2023-06-30T15:48:05.063Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"LG51e0KhG/0V1gCrlHJ0Ch6T+78","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"86a1365e-28f1-4317-9f0f-e67abd573290"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T15:48:05.063Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media"},"context":{"eventId":"1688140085063","timestamp":"2023-06-30T15:48:05.063Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140085063\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:48:05.063Z\",\"updated\":\"2023-06-30T15:48:05.063Z\",\"storageClass\":\"STANDARD\",\"size\":\"106\",\"md5Hash\":\"nnDYyAAuY3nCFRRn/b0meA==\",\"etag\":\"LG51e0KhG/0V1gCrlHJ0Ch6T+78\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"86a1365e-28f1-4317-9f0f-e67abd573290\"},\"crc32c\":\"buLj6Q==\",\"timeStorageClassUpdated\":\"2023-06-30T15:48:05.063Z\",\"id\":\"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media\"},\"context\":{\"eventId\":\"1688140085063\",\"timestamp\":\"2023-06-30T15:48:05.063Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'\"}"}}
[debug] [2023-06-30T15:48:05.159Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.159Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140085159","timestamp":"2023-06-30T15:48:05.159Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140085159","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.159Z","updated":"2023-06-30T15:48:05.159Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"uawAAOu7tZiVY02W+acJ1HGXS/Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0efc65e9-1ced-43b5-ba18-5d773725a555"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T15:48:05.159Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media"}}
[debug] [2023-06-30T15:48:05.162Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.161Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.162Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.161Z"],"workRunningCount":2}
[debug] [2023-06-30T15:48:05.162Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.163Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.163Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.163Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.163Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"5cff0c6d-7e1d-49de-93a9-1b0b2a08108c","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","time":"2023-06-30T15:48:05.159Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140085159","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.159Z","updated":"2023-06-30T15:48:05.159Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"uawAAOu7tZiVY02W+acJ1HGXS/Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0efc65e9-1ced-43b5-ba18-5d773725a555"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T15:48:05.159Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/d88d318e-2636-47e0-89ff-2a643439c4ee'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'\"}"}}
[debug] [2023-06-30T15:48:05.165Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.165Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140085165","timestamp":"2023-06-30T15:48:05.165Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","bucket":"birch-collective-develop.appspot.com","generation":"1688140084941","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:48:04.941Z","updated":"2023-06-30T15:48:04.941Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"mg12BqqV6jaBq4bGS/Xm+RMbBDs","metadata":{"firebaseStorageDownloadTokens":"2456e731-530b-41f1-be77-a2b61638ef32"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T15:48:04.941Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media"}}
[debug] [2023-06-30T15:48:05.166Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.166Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.166Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:04.993Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.166Z"],"workRunningCount":2}
[debug] [2023-06-30T15:48:05.166Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:48:05.166Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:48:05.166Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:48:05.166Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:48:05.167Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc'\"}"}}
[debug] [2023-06-30T15:48:05.169Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 169.128087ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 169.128087ms"}}
[debug] [2023-06-30T15:48:05.169Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:48:05.169Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:48:05.169Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:48:05.169Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:48:05.166Z"],"workRunningCount":1}
[debug] [2023-06-30T15:48:05.171Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.171Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.172Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140085159","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.159Z","updated":"2023-06-30T15:48:05.159Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"uawAAOu7tZiVY02W+acJ1HGXS/Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0efc65e9-1ced-43b5-ba18-5d773725a555"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T15:48:05.159Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media"},"context":{"eventId":"1688140085159","timestamp":"2023-06-30T15:48:05.159Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140085159\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:48:05.159Z\",\"updated\":\"2023-06-30T15:48:05.159Z\",\"storageClass\":\"STANDARD\",\"size\":\"23404\",\"md5Hash\":\"Q2Bufhca1ZFVRa9MDbe+Sg==\",\"etag\":\"uawAAOu7tZiVY02W+acJ1HGXS/Q\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"0efc65e9-1ced-43b5-ba18-5d773725a555\"},\"crc32c\":\"ZRqmww==\",\"timeStorageClassUpdated\":\"2023-06-30T15:48:05.159Z\",\"id\":\"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media\"},\"context\":{\"eventId\":\"1688140085159\",\"timestamp\":\"2023-06-30T15:48:05.159Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:48:05.174Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 7.174855ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 7.174855ms"}}
[debug] [2023-06-30T15:48:05.174Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:48:05.174Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:48:05.174Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:48:05.174Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:48:05.175Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.175Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:05.175Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:48:05.175Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"2c7c9072-d171-4e20-b586-f9cd58151001","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","time":"2023-06-30T15:48:04.941Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc","bucket":"birch-collective-develop.appspot.com","generation":"1688140084941","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:48:04.941Z","updated":"2023-06-30T15:48:04.941Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"mg12BqqV6jaBq4bGS/Xm+RMbBDs","metadata":{"firebaseStorageDownloadTokens":"2456e731-530b-41f1-be77-a2b61638ef32"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T15:48:04.941Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc/1688140084941","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc?generation=1688140084941&alt=media"}}
[debug] [2023-06-30T15:48:05.178Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:48:05.178Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:48:59.139Z] Jun 30, 2023 4:48:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:48:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:11.259Z] Jun 30, 2023 4:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:12.906Z] Jun 30, 2023 4:49:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:12.959Z] Jun 30, 2023 4:49:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:27.618Z] Jun 30, 2023 4:49:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:27.645Z] Jun 30, 2023 4:49:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:30.517Z] Jun 30, 2023 4:49:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:49:30.532Z] Jun 30, 2023 4:49:30 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose
INFO: channel closed
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:49:30 PM com.google.cloud.datastore.emulator.firestore.webchannel.FirestoreV1WebChannelAdapter$FirestoreListenHandler onClose\nINFO: channel closed\n"}}
[debug] [2023-06-30T15:49:33.231Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.232Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173231","timestamp":"2023-06-30T15:49:33.231Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687960976263","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:02:56.264Z","updated":"2023-06-28T14:02:56.264Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"++8Nrht7SfkYiZRq4//P4QMK4sQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e8898e83-93f6-4097-ba41-f4983b5aa18e"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:02:56.264Z","id":"birch-collective-develop.appspot.com/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600/1687960976263","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600?generation=1687960976263&alt=media"}}
[debug] [2023-06-30T15:49:33.235Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.236Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.236Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.236Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"ec4b4d18-f7f0-446d-9b36-2de461f64a08","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","time":"2023-06-28T14:02:56.264Z","data":{"kind":"storage#object","name":"resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687960976263","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:02:56.264Z","updated":"2023-06-28T14:02:56.264Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"++8Nrht7SfkYiZRq4//P4QMK4sQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e8898e83-93f6-4097-ba41-f4983b5aa18e"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:02:56.264Z","id":"birch-collective-develop.appspot.com/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600/1687960976263","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_2400x1600?generation=1687960976263&alt=media"}}
[debug] [2023-06-30T15:49:33.242Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.243Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.250Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.250Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173250","timestamp":"2023-06-30T15:49:33.250Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687960976153","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:02:56.153Z","updated":"2023-06-28T14:02:56.153Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"V9iuP2IarWuSkeafJa6ANyJ4I7s","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6fe876d6-33a1-4b24-82b7-4386b23eae4e"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:02:56.153Z","id":"birch-collective-develop.appspot.com/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32/1687960976153","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_32x32?generation=1687960976153&alt=media"}}
[debug] [2023-06-30T15:49:33.254Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.255Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.255Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.255Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"b69a6e35-4b67-47ab-b91e-582a7bca6aa5","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","time":"2023-06-28T14:02:56.153Z","data":{"kind":"storage#object","name":"resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687960976153","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:02:56.153Z","updated":"2023-06-28T14:02:56.153Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"V9iuP2IarWuSkeafJa6ANyJ4I7s","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6fe876d6-33a1-4b24-82b7-4386b23eae4e"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:02:56.153Z","id":"birch-collective-develop.appspot.com/resized/0df40252-b73c-4b0c-8136-9aa934a5e373_32x32/1687960976153","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F0df40252-b73c-4b0c-8136-9aa934a5e373_32x32?generation=1687960976153&alt=media"}}
[debug] [2023-06-30T15:49:33.258Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.258Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.267Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.268Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173267","timestamp":"2023-06-30T15:49:33.267Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964065128","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:54:25.128Z","updated":"2023-06-28T14:54:25.128Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"bJcjFbX6WcoQSsTcNjV/I7MLdKY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"63e21469-40e5-4fde-9bfa-aefdfb42486a"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-28T14:54:25.128Z","id":"birch-collective-develop.appspot.com/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600/1687964065128","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600?generation=1687964065128&alt=media"}}
[debug] [2023-06-30T15:49:33.270Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.270Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173270","timestamp":"2023-06-30T15:49:33.270Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964064893","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:54:24.893Z","updated":"2023-06-28T14:54:24.893Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"y2WWKSJGJpzZ+Pz9J5FGfifp8BQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"3343f878-f0be-4a11-85b8-0929f7febdbd"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-28T14:54:24.893Z","id":"birch-collective-develop.appspot.com/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32/1687964064893","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32?generation=1687964064893&alt=media"}}
[debug] [2023-06-30T15:49:33.273Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.273Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173273","timestamp":"2023-06-30T15:49:33.273Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964500071","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:01:40.071Z","updated":"2023-06-28T15:01:40.071Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"sUHWrTmYY/Fyqf97+2l2NWuO9Pc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d07fe8c7-d857-4fef-93c0-d91e04963393"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T15:01:40.071Z","id":"birch-collective-develop.appspot.com/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600/1687964500071","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600?generation=1687964500071&alt=media"}}
[debug] [2023-06-30T15:49:33.276Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.276Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173274","timestamp":"2023-06-30T15:49:33.274Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964499875","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:01:39.875Z","updated":"2023-06-28T15:01:39.875Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"eGrkgkPboR+uS610nO/8msWf0J0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5bf244bf-0b1a-4984-9c72-88c997edbe1a"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T15:01:39.875Z","id":"birch-collective-develop.appspot.com/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32/1687964499875","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32?generation=1687964499875&alt=media"}}
[debug] [2023-06-30T15:49:33.277Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.277Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173277","timestamp":"2023-06-30T15:49:33.277Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964549783","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:02:29.784Z","updated":"2023-06-28T15:02:29.784Z","storageClass":"STANDARD","size":"98402","md5Hash":"m1K4JydSM4da1/nsqttDcw==","etag":"iKQuHUVTpf6bVRxaKAzwjDp2Vj8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2bc95d6a-7ccf-4ff1-abee-0348226b4c69"},"crc32c":"0YkHbg==","timeStorageClassUpdated":"2023-06-28T15:02:29.784Z","id":"birch-collective-develop.appspot.com/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600/1687964549783","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600?generation=1687964549783&alt=media"}}
[debug] [2023-06-30T15:49:33.280Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.280Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173280","timestamp":"2023-06-30T15:49:33.280Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964549035","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:02:29.035Z","updated":"2023-06-28T15:02:29.035Z","storageClass":"STANDARD","size":"184","md5Hash":"8n794ibjJnk/dLmA3/VAeA==","etag":"ZVIe3xHAqh3hlvqxYcNta8U+hvA","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e70cd07f-9726-4335-8a4f-fd59d6bfae51"},"crc32c":"uZP+lA==","timeStorageClassUpdated":"2023-06-28T15:02:29.035Z","id":"birch-collective-develop.appspot.com/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32/1687964549035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_32x32?generation=1687964549035&alt=media"}}
[debug] [2023-06-30T15:49:33.286Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.286Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.287Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.287Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e34dea2c-3ed8-42f9-9f61-e5de31bae5e3","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","time":"2023-06-28T14:54:25.128Z","data":{"kind":"storage#object","name":"resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964065128","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:54:25.128Z","updated":"2023-06-28T14:54:25.128Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"bJcjFbX6WcoQSsTcNjV/I7MLdKY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"63e21469-40e5-4fde-9bfa-aefdfb42486a"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-28T14:54:25.128Z","id":"birch-collective-develop.appspot.com/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600/1687964065128","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_2400x1600?generation=1687964065128&alt=media"}}
[debug] [2023-06-30T15:49:33.289Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.289Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.289Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.289Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"208766d3-00df-4f62-8294-6fc50250ae1e","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","time":"2023-06-28T14:54:24.893Z","data":{"kind":"storage#object","name":"resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964064893","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:54:24.893Z","updated":"2023-06-28T14:54:24.893Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"y2WWKSJGJpzZ+Pz9J5FGfifp8BQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"3343f878-f0be-4a11-85b8-0929f7febdbd"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-28T14:54:24.893Z","id":"birch-collective-develop.appspot.com/resized/11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32/1687964064893","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F11bd30b1-48f9-4c2b-bdd3-afdd49c90e7c_32x32?generation=1687964064893&alt=media"}}
[debug] [2023-06-30T15:49:33.290Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.290Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.290Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.290Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"118c46b7-079f-479c-8b09-a020d0cb1a09","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","time":"2023-06-28T15:01:40.071Z","data":{"kind":"storage#object","name":"resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964500071","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:01:40.071Z","updated":"2023-06-28T15:01:40.071Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"sUHWrTmYY/Fyqf97+2l2NWuO9Pc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d07fe8c7-d857-4fef-93c0-d91e04963393"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T15:01:40.071Z","id":"birch-collective-develop.appspot.com/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600/1687964500071","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_2400x1600?generation=1687964500071&alt=media"}}
[debug] [2023-06-30T15:49:33.291Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.291Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.291Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.291Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"2792dbda-98f1-448e-b1cc-e303145c6d55","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","time":"2023-06-28T15:01:39.875Z","data":{"kind":"storage#object","name":"resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964499875","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:01:39.875Z","updated":"2023-06-28T15:01:39.875Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"eGrkgkPboR+uS610nO/8msWf0J0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5bf244bf-0b1a-4984-9c72-88c997edbe1a"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T15:01:39.875Z","id":"birch-collective-develop.appspot.com/resized/1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32/1687964499875","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F1677e5bf-717e-48a8-b72e-8dc8730d8efd_32x32?generation=1687964499875&alt=media"}}
[debug] [2023-06-30T15:49:33.292Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.292Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.292Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.292Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"5ae937d8-8b43-4027-88e8-6edb230bc873","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","time":"2023-06-28T15:02:29.784Z","data":{"kind":"storage#object","name":"resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964549783","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:02:29.784Z","updated":"2023-06-28T15:02:29.784Z","storageClass":"STANDARD","size":"98402","md5Hash":"m1K4JydSM4da1/nsqttDcw==","etag":"iKQuHUVTpf6bVRxaKAzwjDp2Vj8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2bc95d6a-7ccf-4ff1-abee-0348226b4c69"},"crc32c":"0YkHbg==","timeStorageClassUpdated":"2023-06-28T15:02:29.784Z","id":"birch-collective-develop.appspot.com/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600/1687964549783","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_2400x1600?generation=1687964549783&alt=media"}}
[debug] [2023-06-30T15:49:33.292Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.293Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173292","timestamp":"2023-06-30T15:49:33.292Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963828968","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:50:28.968Z","updated":"2023-06-28T14:50:28.968Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"h6AKgMBiKb1KAIvng/W2fAmzMkg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5eefaba4-3d2b-4db6-9c96-7e2761abd43c"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-28T14:50:28.968Z","id":"birch-collective-develop.appspot.com/resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600/1687963828968","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600?generation=1687963828968&alt=media"}}
[debug] [2023-06-30T15:49:33.295Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.295Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.296Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.296Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"0116baed-c488-45e1-8b2c-3a5f5aaa05ea","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","time":"2023-06-28T15:02:29.035Z","data":{"kind":"storage#object","name":"resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964549035","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:02:29.035Z","updated":"2023-06-28T15:02:29.035Z","storageClass":"STANDARD","size":"184","md5Hash":"8n794ibjJnk/dLmA3/VAeA==","etag":"ZVIe3xHAqh3hlvqxYcNta8U+hvA","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e70cd07f-9726-4335-8a4f-fd59d6bfae51"},"crc32c":"uZP+lA==","timeStorageClassUpdated":"2023-06-28T15:02:29.035Z","id":"birch-collective-develop.appspot.com/resized/3a4920bf-4568-4822-8f16-6480bd4197d5_32x32/1687964549035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F3a4920bf-4568-4822-8f16-6480bd4197d5_32x32?generation=1687964549035&alt=media"}}
[debug] [2023-06-30T15:49:33.299Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.300Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.304Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.305Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.305Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.305Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.305Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.305Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.305Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"78b63d1b-a71a-4bf2-b2f8-6b4f8e496014","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","time":"2023-06-28T14:50:28.968Z","data":{"kind":"storage#object","name":"resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963828968","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:50:28.968Z","updated":"2023-06-28T14:50:28.968Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"h6AKgMBiKb1KAIvng/W2fAmzMkg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5eefaba4-3d2b-4db6-9c96-7e2761abd43c"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-28T14:50:28.968Z","id":"birch-collective-develop.appspot.com/resized/89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600/1687963828968","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_2400x1600?generation=1687963828968&alt=media"}}
[debug] [2023-06-30T15:49:33.308Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.308Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.310Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.310Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173310","timestamp":"2023-06-30T15:49:33.310Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963828836","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:50:28.836Z","updated":"2023-06-28T14:50:28.836Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"VdSFU/oa/otUtSCmVbiBVprnv8s","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"8f7f13e2-6981-42fc-82de-1f913e668ab7"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-28T14:50:28.836Z","id":"birch-collective-develop.appspot.com/resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32/1687963828836","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_32x32?generation=1687963828836&alt=media"}}
[debug] [2023-06-30T15:49:33.312Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.312Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173312","timestamp":"2023-06-30T15:49:33.312Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963312720","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:41:52.720Z","updated":"2023-06-28T14:41:52.720Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"CQ0Wnlsn1nDNEYfj0BqniSqfKbE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"568e408e-5bd5-4b3a-9057-8c292089da10"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:41:52.720Z","id":"birch-collective-develop.appspot.com/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600/1687963312720","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600?generation=1687963312720&alt=media"}}
[debug] [2023-06-30T15:49:33.314Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.314Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173314","timestamp":"2023-06-30T15:49:33.314Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963312586","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:41:52.586Z","updated":"2023-06-28T14:41:52.586Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"RlHMUHsOq+wHGnAOmYaumcrpPVU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"def1193d-db62-4d11-a56d-bccc3738a7d5"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:41:52.586Z","id":"birch-collective-develop.appspot.com/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32/1687963312586","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32?generation=1687963312586&alt=media"}}
[debug] [2023-06-30T15:49:33.315Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.315Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.316Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.316Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173316","timestamp":"2023-06-30T15:49:33.316Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688138886353","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.353Z","updated":"2023-06-30T15:28:06.353Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"Kk1MEAOMaosgc753rv2j5fjXXT0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6d309f21-182a-4bfd-bba9-d4454b3105f5"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.353Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media"}}
[debug] [2023-06-30T15:49:33.318Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.318Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173318","timestamp":"2023-06-30T15:49:33.318Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139043372","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.372Z","updated":"2023-06-30T15:30:43.372Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"n2QB/siqFvId07UoJzYBuo6DSK4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"539f102d-5429-4d09-ada8-41cf8f2fbe58"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T15:30:43.372Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media"}}
[debug] [2023-06-30T15:49:33.319Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.319Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173319","timestamp":"2023-06-30T15:49:33.319Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963998046","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:53:18.046Z","updated":"2023-06-28T14:53:18.046Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"1m3jsq2GIQ8j9TB1geTkgjngA4Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0d18bff6-4a24-49bb-b35b-7b7a6074aa65"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:53:18.046Z","id":"birch-collective-develop.appspot.com/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600/1687963998046","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600?generation=1687963998046&alt=media"}}
[debug] [2023-06-30T15:49:33.321Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.321Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173320","timestamp":"2023-06-30T15:49:33.320Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963997880","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:53:17.880Z","updated":"2023-06-28T14:53:17.880Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"wn4fdQaSNG1GV8dBVyN5aQk74GE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c23e4647-1fbb-448b-aa8f-347c6e1e7b29"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:53:17.880Z","id":"birch-collective-develop.appspot.com/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32/1687963997880","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32?generation=1687963997880&alt=media"}}
[debug] [2023-06-30T15:49:33.322Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.322Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173322","timestamp":"2023-06-30T15:49:33.322Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688138886572","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.572Z","updated":"2023-06-30T15:28:06.572Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"H/gwkuEO/oFapv1XrMLQ4Cey8AI","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c90bdcb7-8b22-4dad-860f-dfae180f881a"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.572Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media"}}
[debug] [2023-06-30T15:49:33.325Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.326Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173325","timestamp":"2023-06-30T15:49:33.325Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140085159","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.159Z","updated":"2023-06-30T15:48:05.159Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"uawAAOu7tZiVY02W+acJ1HGXS/Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0efc65e9-1ced-43b5-ba18-5d773725a555"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T15:48:05.159Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media"}}
[debug] [2023-06-30T15:49:33.327Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.327Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173327","timestamp":"2023-06-30T15:49:33.327Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140085063","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.063Z","updated":"2023-06-30T15:48:05.063Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"LG51e0KhG/0V1gCrlHJ0Ch6T+78","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"86a1365e-28f1-4317-9f0f-e67abd573290"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T15:48:05.063Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media"}}
[debug] [2023-06-30T15:49:33.328Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.328Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173328","timestamp":"2023-06-30T15:49:33.328Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139963570","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.570Z","updated":"2023-06-30T15:46:03.570Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"L2LQgp2aoX8TX6l4wBs1qt2Fqk8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.570Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media"}}
[debug] [2023-06-30T15:49:33.329Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.329Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173329","timestamp":"2023-06-30T15:49:33.329Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139963388","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.388Z","updated":"2023-06-30T15:46:03.388Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"zunoRQiRgLbIuGFwBeQzUZrBVLY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"943cd260-12b7-4016-94fe-6f5c2356f78d"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.388Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media"}}
[debug] [2023-06-30T15:49:33.331Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.331Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173331","timestamp":"2023-06-30T15:49:33.331Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139043231","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.231Z","updated":"2023-06-30T15:30:43.231Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"f+wTv0w/baH7YSfItMxj1z1/QDc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e19dbd12-957e-4719-91aa-74b46a057625"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T15:30:43.231Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media"}}
[debug] [2023-06-30T15:49:33.335Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.336Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173335","timestamp":"2023-06-30T15:49:33.335Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963553078","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:45:53.078Z","updated":"2023-06-28T14:45:53.078Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"c+XLdL/w7PeaH7IEFTKh/lOiB4A","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d512bcd0-a6c1-4e14-885e-bbd43ec9ff23"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:45:53.078Z","id":"birch-collective-develop.appspot.com/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32/1687963553078","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32?generation=1687963553078&alt=media"}}
[debug] [2023-06-30T15:49:33.337Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.337Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173337","timestamp":"2023-06-30T15:49:33.337Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964240565","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:57:20.566Z","updated":"2023-06-28T14:57:20.566Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"QdffIM5shjl595CXKmVdJfIpTP8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2b3dc343-834b-4bde-8ae1-44a928fd2d06"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-28T14:57:20.566Z","id":"birch-collective-develop.appspot.com/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600/1687964240565","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600?generation=1687964240565&alt=media"}}
[debug] [2023-06-30T15:49:33.338Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.338Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173338","timestamp":"2023-06-30T15:49:33.338Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964240356","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:57:20.356Z","updated":"2023-06-28T14:57:20.356Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"ip6D1s+Mo7jap0qIGgXgWrsVYW4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6b81dd1f-e526-4bba-ae87-62d21d4cfd8a"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-28T14:57:20.356Z","id":"birch-collective-develop.appspot.com/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32/1687964240356","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32?generation=1687964240356&alt=media"}}
[debug] [2023-06-30T15:49:33.340Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.340Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173340","timestamp":"2023-06-30T15:49:33.340Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964789528","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:06:29.528Z","updated":"2023-06-28T15:06:29.528Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"D6ZXcHXap/UmMZwd95dWWxShSN4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"584a3737-a490-44dd-a81a-cf04c89fcf8e"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-28T15:06:29.528Z","id":"birch-collective-develop.appspot.com/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600/1687964789528","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600?generation=1687964789528&alt=media"}}
[debug] [2023-06-30T15:49:33.341Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.341Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173341","timestamp":"2023-06-30T15:49:33.341Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964789343","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:06:29.343Z","updated":"2023-06-28T15:06:29.343Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"6Mh0PCVvG00lXGs+7myTl2Oc+Vw","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"317ccb96-1d52-4a38-b1e9-d2b13e3e175b"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-28T15:06:29.343Z","id":"birch-collective-develop.appspot.com/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32/1687964789343","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32?generation=1687964789343&alt=media"}}
[debug] [2023-06-30T15:49:33.343Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.343Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173342","timestamp":"2023-06-30T15:49:33.342Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963553208","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:45:53.208Z","updated":"2023-06-28T14:45:53.208Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"sAG8/wFl5A1Q8ibBCek+fs71wt0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"f2a35979-4b93-49ce-934b-675824546b0c"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:45:53.208Z","id":"birch-collective-develop.appspot.com/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600/1687963553208","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600?generation=1687963553208&alt=media"}}
[debug] [2023-06-30T15:49:33.348Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.348Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.348Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.348Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"a16fc3ba-f296-4681-a024-bdb744cc366e","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32","time":"2023-06-28T14:50:28.836Z","data":{"kind":"storage#object","name":"resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963828836","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:50:28.836Z","updated":"2023-06-28T14:50:28.836Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"VdSFU/oa/otUtSCmVbiBVprnv8s","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"8f7f13e2-6981-42fc-82de-1f913e668ab7"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-28T14:50:28.836Z","id":"birch-collective-develop.appspot.com/resized/89e636f2-dca6-47b9-b979-05f132dc4275_32x32/1687963828836","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F89e636f2-dca6-47b9-b979-05f132dc4275_32x32?generation=1687963828836&alt=media"}}
[debug] [2023-06-30T15:49:33.349Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.349Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.349Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.349Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e1774c6a-0431-494c-8bf9-cc587ecad4b1","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","time":"2023-06-28T14:41:52.720Z","data":{"kind":"storage#object","name":"resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963312720","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:41:52.720Z","updated":"2023-06-28T14:41:52.720Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"CQ0Wnlsn1nDNEYfj0BqniSqfKbE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"568e408e-5bd5-4b3a-9057-8c292089da10"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:41:52.720Z","id":"birch-collective-develop.appspot.com/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600/1687963312720","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_2400x1600?generation=1687963312720&alt=media"}}
[debug] [2023-06-30T15:49:33.350Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.350Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.350Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.350Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"dc30a84b-05dd-415d-b007-55efb5899b4f","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","time":"2023-06-28T14:41:52.586Z","data":{"kind":"storage#object","name":"resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963312586","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:41:52.586Z","updated":"2023-06-28T14:41:52.586Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"RlHMUHsOq+wHGnAOmYaumcrpPVU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"def1193d-db62-4d11-a56d-bccc3738a7d5"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:41:52.586Z","id":"birch-collective-develop.appspot.com/resized/8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32/1687963312586","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F8b26aa41-0c73-48be-8e22-b817b9f8c6b7_32x32?generation=1687963312586&alt=media"}}
[debug] [2023-06-30T15:49:33.352Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.352Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173352","timestamp":"2023-06-30T15:49:33.352Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687962656162","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:30:56.162Z","updated":"2023-06-28T14:30:56.162Z","storageClass":"STANDARD","size":"98402","md5Hash":"m1K4JydSM4da1/nsqttDcw==","etag":"Jru4r1x44Xw9nz/SWZNntcJ+c0o","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"3a28bf64-83c5-4593-9add-8d47259a503e"},"crc32c":"0YkHbg==","timeStorageClassUpdated":"2023-06-28T14:30:56.162Z","id":"birch-collective-develop.appspot.com/resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600/1687962656162","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_2400x1600?generation=1687962656162&alt=media"}}
[debug] [2023-06-30T15:49:33.353Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.353Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173353","timestamp":"2023-06-30T15:49:33.353Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687962655302","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:30:55.302Z","updated":"2023-06-28T14:30:55.302Z","storageClass":"STANDARD","size":"184","md5Hash":"8n794ibjJnk/dLmA3/VAeA==","etag":"8/Swsi2sAUwso9pc7NWrYKWf2ag","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"a0d7edb9-db66-4300-9837-aec2f2e75673"},"crc32c":"uZP+lA==","timeStorageClassUpdated":"2023-06-28T14:30:55.302Z","id":"birch-collective-develop.appspot.com/resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32/1687962655302","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_32x32?generation=1687962655302&alt=media"}}
[debug] [2023-06-30T15:49:33.355Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.355Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173355","timestamp":"2023-06-30T15:49:33.355Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687961102849","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:05:02.849Z","updated":"2023-06-28T14:05:02.849Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"+JSdT2DkeGFnyn0pCUrX94shrlU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6025cc07-3548-4f2f-9613-9590cca97350"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-28T14:05:02.849Z","id":"birch-collective-develop.appspot.com/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600/1687961102849","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600?generation=1687961102849&alt=media"}}
[debug] [2023-06-30T15:49:33.358Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.358Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140173358","timestamp":"2023-06-30T15:49:33.358Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687961102632","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:05:02.632Z","updated":"2023-06-28T14:05:02.632Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"6Fng4Nj7h+Toj1PzsD5jsucpH9M","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"1a358cf4-3b76-442f-8e40-1e1c548c2091"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-28T14:05:02.632Z","id":"birch-collective-develop.appspot.com/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32/1687961102632","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_32x32?generation=1687961102632&alt=media"}}
[debug] [2023-06-30T15:49:33.359Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.360Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.360Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.360Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"3553f526-775b-4605-af72-111292a7d2e2","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","time":"2023-06-30T15:28:06.353Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688138886353","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.353Z","updated":"2023-06-30T15:28:06.353Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"Kk1MEAOMaosgc753rv2j5fjXXT0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6d309f21-182a-4bfd-bba9-d4454b3105f5"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.353Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_32x32/1688138886353","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_32x32?generation=1688138886353&alt=media"}}
[debug] [2023-06-30T15:49:33.361Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.361Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.361Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.361Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"f6b05014-e918-4c3b-8d46-7d36f55f23ce","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","time":"2023-06-30T15:30:43.372Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139043372","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.372Z","updated":"2023-06-30T15:30:43.372Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"n2QB/siqFvId07UoJzYBuo6DSK4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"539f102d-5429-4d09-ada8-41cf8f2fbe58"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T15:30:43.372Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_2400x1600/1688139043372","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_2400x1600?generation=1688139043372&alt=media"}}
[debug] [2023-06-30T15:49:33.362Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.362Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.362Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.362Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e558b4df-5d39-4a5d-9cb0-78670fd8f8c0","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","time":"2023-06-28T14:53:18.046Z","data":{"kind":"storage#object","name":"resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963998046","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:53:18.046Z","updated":"2023-06-28T14:53:18.046Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"1m3jsq2GIQ8j9TB1geTkgjngA4Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0d18bff6-4a24-49bb-b35b-7b7a6074aa65"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:53:18.046Z","id":"birch-collective-develop.appspot.com/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600/1687963998046","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_2400x1600?generation=1687963998046&alt=media"}}
[debug] [2023-06-30T15:49:33.363Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.363Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.363Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.363Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"598ce7a7-b6c4-48e1-b49d-5729748a45de","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","time":"2023-06-28T14:53:17.880Z","data":{"kind":"storage#object","name":"resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963997880","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:53:17.880Z","updated":"2023-06-28T14:53:17.880Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"wn4fdQaSNG1GV8dBVyN5aQk74GE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c23e4647-1fbb-448b-aa8f-347c6e1e7b29"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:53:17.880Z","id":"birch-collective-develop.appspot.com/resized/9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32/1687963997880","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F9bb5fb06-c6b1-4ec3-9b2b-3275f097fb38_32x32?generation=1687963997880&alt=media"}}
[debug] [2023-06-30T15:49:33.364Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.364Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.364Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.364Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"97193553-d317-4844-b5bd-416b5d30d0b5","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","time":"2023-06-30T15:28:06.572Z","data":{"kind":"storage#object","name":"resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688138886572","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:28:06.572Z","updated":"2023-06-30T15:28:06.572Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"H/gwkuEO/oFapv1XrMLQ4Cey8AI","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c90bdcb7-8b22-4dad-860f-dfae180f881a"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:28:06.572Z","id":"birch-collective-develop.appspot.com/resized/a0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600/1688138886572","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa0a7572c-fff1-4739-a758-734ff41ce0dc_2400x1600?generation=1688138886572&alt=media"}}
[debug] [2023-06-30T15:49:33.374Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.374Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.374Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.374Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"7f815352-8634-412e-ac2b-299e2dd843a8","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","time":"2023-06-30T15:48:05.159Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140085159","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.159Z","updated":"2023-06-30T15:48:05.159Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"uawAAOu7tZiVY02W+acJ1HGXS/Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0efc65e9-1ced-43b5-ba18-5d773725a555"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T15:48:05.159Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600/1688140085159","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_2400x1600?generation=1688140085159&alt=media"}}
[debug] [2023-06-30T15:49:33.376Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.376Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.376Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.376Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"2f956cbc-3e89-47b6-9675-1a71db6c9ec7","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","time":"2023-06-30T15:48:05.063Z","data":{"kind":"storage#object","name":"resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140085063","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:48:05.063Z","updated":"2023-06-30T15:48:05.063Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"LG51e0KhG/0V1gCrlHJ0Ch6T+78","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"86a1365e-28f1-4317-9f0f-e67abd573290"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T15:48:05.063Z","id":"birch-collective-develop.appspot.com/resized/c42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32/1688140085063","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fc42b43d5-3d02-4eb2-9446-8b3900dbfafc_32x32?generation=1688140085063&alt=media"}}
[debug] [2023-06-30T15:49:33.377Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.377Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.377Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.377Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"03c4db0b-7f49-4f1f-b4b5-e116eb445c69","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","time":"2023-06-30T15:46:03.570Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688139963570","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.570Z","updated":"2023-06-30T15:46:03.570Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"L2LQgp2aoX8TX6l4wBs1qt2Fqk8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"4f0cabf9-d11a-4f33-9d09-3c7d417f4ed2"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.570Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600/1688139963570","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_2400x1600?generation=1688139963570&alt=media"}}
[debug] [2023-06-30T15:49:33.378Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.378Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.378Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.378Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"4dedc8a5-75a9-4386-a331-2f5964938113","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","time":"2023-06-30T15:46:03.388Z","data":{"kind":"storage#object","name":"resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139963388","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:46:03.388Z","updated":"2023-06-30T15:46:03.388Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"zunoRQiRgLbIuGFwBeQzUZrBVLY","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"943cd260-12b7-4016-94fe-6f5c2356f78d"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:46:03.388Z","id":"birch-collective-develop.appspot.com/resized/cc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32/1688139963388","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fcc3361e7-fc4f-4da2-ae54-1ec4ade58511_32x32?generation=1688139963388&alt=media"}}
[debug] [2023-06-30T15:49:33.380Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.380Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.380Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.381Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"1e8cf2b7-68e5-49af-940c-81db39dde50a","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","time":"2023-06-30T15:30:43.231Z","data":{"kind":"storage#object","name":"resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688139043231","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:30:43.231Z","updated":"2023-06-30T15:30:43.231Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"f+wTv0w/baH7YSfItMxj1z1/QDc","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e19dbd12-957e-4719-91aa-74b46a057625"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T15:30:43.231Z","id":"birch-collective-develop.appspot.com/resized/a26dae23-7b61-4885-a295-24956dff2e17_32x32/1688139043231","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fa26dae23-7b61-4885-a295-24956dff2e17_32x32?generation=1688139043231&alt=media"}}
[debug] [2023-06-30T15:49:33.386Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.386Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.387Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.387Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"bd24e05c-ecb4-4079-bbfa-556e24d87ca3","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","time":"2023-06-28T14:45:53.078Z","data":{"kind":"storage#object","name":"resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687963553078","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:45:53.078Z","updated":"2023-06-28T14:45:53.078Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"c+XLdL/w7PeaH7IEFTKh/lOiB4A","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d512bcd0-a6c1-4e14-885e-bbd43ec9ff23"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-28T14:45:53.078Z","id":"birch-collective-develop.appspot.com/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32/1687963553078","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_32x32?generation=1687963553078&alt=media"}}
[debug] [2023-06-30T15:49:33.387Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.387Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.388Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.388Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"89dcedf0-d1d6-4442-9baf-b8ddf593acec","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","time":"2023-06-28T14:57:20.566Z","data":{"kind":"storage#object","name":"resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964240565","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:57:20.566Z","updated":"2023-06-28T14:57:20.566Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"QdffIM5shjl595CXKmVdJfIpTP8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2b3dc343-834b-4bde-8ae1-44a928fd2d06"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-28T14:57:20.566Z","id":"birch-collective-develop.appspot.com/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600/1687964240565","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_2400x1600?generation=1687964240565&alt=media"}}
[debug] [2023-06-30T15:49:33.388Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.388Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.388Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.388Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"186ed181-778a-489f-9594-f0611d4f4864","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","time":"2023-06-28T14:57:20.356Z","data":{"kind":"storage#object","name":"resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964240356","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:57:20.356Z","updated":"2023-06-28T14:57:20.356Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"ip6D1s+Mo7jap0qIGgXgWrsVYW4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6b81dd1f-e526-4bba-ae87-62d21d4cfd8a"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-28T14:57:20.356Z","id":"birch-collective-develop.appspot.com/resized/d81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32/1687964240356","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd81558ac-b6ff-46f2-ab3c-cfa442c8cf9d_32x32?generation=1687964240356&alt=media"}}
[debug] [2023-06-30T15:49:33.389Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.389Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.389Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.389Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"ea0110f3-73a5-43c8-992d-b6193e242224","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","time":"2023-06-28T15:06:29.528Z","data":{"kind":"storage#object","name":"resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687964789528","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:06:29.528Z","updated":"2023-06-28T15:06:29.528Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"D6ZXcHXap/UmMZwd95dWWxShSN4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"584a3737-a490-44dd-a81a-cf04c89fcf8e"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-28T15:06:29.528Z","id":"birch-collective-develop.appspot.com/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600/1687964789528","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_2400x1600?generation=1687964789528&alt=media"}}
[debug] [2023-06-30T15:49:33.390Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.390Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.391Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.391Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"d7c0f605-1c59-42c0-8033-c78a3e238f6f","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","time":"2023-06-28T15:06:29.343Z","data":{"kind":"storage#object","name":"resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687964789343","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T15:06:29.343Z","updated":"2023-06-28T15:06:29.343Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"6Mh0PCVvG00lXGs+7myTl2Oc+Vw","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"317ccb96-1d52-4a38-b1e9-d2b13e3e175b"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-28T15:06:29.343Z","id":"birch-collective-develop.appspot.com/resized/e3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32/1687964789343","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fe3fab7d7-0bcc-4897-aa0f-e6d8eb895f7e_32x32?generation=1687964789343&alt=media"}}
[debug] [2023-06-30T15:49:33.391Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.391Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.391Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.391Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"1aef41de-0e48-4e66-a7a9-85899202dd8a","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","time":"2023-06-28T14:45:53.208Z","data":{"kind":"storage#object","name":"resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687963553208","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:45:53.208Z","updated":"2023-06-28T14:45:53.208Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"sAG8/wFl5A1Q8ibBCek+fs71wt0","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"f2a35979-4b93-49ce-934b-675824546b0c"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-28T14:45:53.208Z","id":"birch-collective-develop.appspot.com/resized/d2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600/1687963553208","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Fd2ba0ab1-c0f8-47de-b89d-5f4328b21842_2400x1600?generation=1687963553208&alt=media"}}
[debug] [2023-06-30T15:49:33.393Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.393Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.393Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.393Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.394Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.394Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.396Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.396Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.396Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.396Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"b27404ce-c503-4f32-9b98-19a1a1c7ca40","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600","time":"2023-06-28T14:30:56.162Z","data":{"kind":"storage#object","name":"resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687962656162","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:30:56.162Z","updated":"2023-06-28T14:30:56.162Z","storageClass":"STANDARD","size":"98402","md5Hash":"m1K4JydSM4da1/nsqttDcw==","etag":"Jru4r1x44Xw9nz/SWZNntcJ+c0o","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"3a28bf64-83c5-4593-9add-8d47259a503e"},"crc32c":"0YkHbg==","timeStorageClassUpdated":"2023-06-28T14:30:56.162Z","id":"birch-collective-develop.appspot.com/resized/f829d223-7a70-4608-adc4-dbf5615df553_2400x1600/1687962656162","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_2400x1600?generation=1687962656162&alt=media"}}
[debug] [2023-06-30T15:49:33.397Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.397Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.397Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.397Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e4e899c8-6d07-4ea4-966e-ed1150a900f9","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32","time":"2023-06-28T14:30:55.302Z","data":{"kind":"storage#object","name":"resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687962655302","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:30:55.302Z","updated":"2023-06-28T14:30:55.302Z","storageClass":"STANDARD","size":"184","md5Hash":"8n794ibjJnk/dLmA3/VAeA==","etag":"8/Swsi2sAUwso9pc7NWrYKWf2ag","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"a0d7edb9-db66-4300-9837-aec2f2e75673"},"crc32c":"uZP+lA==","timeStorageClassUpdated":"2023-06-28T14:30:55.302Z","id":"birch-collective-develop.appspot.com/resized/f829d223-7a70-4608-adc4-dbf5615df553_32x32/1687962655302","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ff829d223-7a70-4608-adc4-dbf5615df553_32x32?generation=1687962655302&alt=media"}}
[debug] [2023-06-30T15:49:33.399Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.399Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.399Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.399Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"11ae12fc-01ae-4548-8c80-9d729853f164","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","time":"2023-06-28T14:05:02.849Z","data":{"kind":"storage#object","name":"resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1687961102849","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:05:02.849Z","updated":"2023-06-28T14:05:02.849Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"+JSdT2DkeGFnyn0pCUrX94shrlU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"6025cc07-3548-4f2f-9613-9590cca97350"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-28T14:05:02.849Z","id":"birch-collective-develop.appspot.com/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600/1687961102849","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_2400x1600?generation=1687961102849&alt=media"}}
[debug] [2023-06-30T15:49:33.400Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.400Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.400Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:49:33.400Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"43a7cee9-6640-469a-b93f-cf747708bd2c","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","time":"2023-06-28T14:05:02.632Z","data":{"kind":"storage#object","name":"resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1687961102632","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-28T14:05:02.632Z","updated":"2023-06-28T14:05:02.632Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"6Fng4Nj7h+Toj1PzsD5jsucpH9M","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"1a358cf4-3b76-442f-8e40-1e1c548c2091"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-28T14:05:02.632Z","id":"birch-collective-develop.appspot.com/resized/fe3c0571-9c8f-4a6e-ba20-399294bac740_32x32/1687961102632","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Ffe3c0571-9c8f-4a6e-ba20-399294bac740_32x32?generation=1687961102632&alt=media"}}
[debug] [2023-06-30T15:49:33.401Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.401Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.401Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.401Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.402Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.408Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.408Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.408Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.408Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.409Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.409Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.409Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.409Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.410Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.410Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.416Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.416Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.417Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.417Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.418Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.418Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.418Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.418Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.419Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.419Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.419Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.419Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.422Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.422Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.423Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.423Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.423Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.423Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:49:33.424Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:49:33.424Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:19.739Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:19.740Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140339739","timestamp":"2023-06-30T15:52:19.739Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada","bucket":"birch-collective-develop.appspot.com","generation":"1688140339733","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:52:19.733Z","updated":"2023-06-30T15:52:19.733Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"+xtfjK9XV0xMJlFJp0LLul+gXec","metadata":{"firebaseStorageDownloadTokens":"71c3b277-7f47-4943-830a-9b718de47143"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.733Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media"}}
[debug] [2023-06-30T15:52:19.741Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.741Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:52:19.742Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.741Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:19.742Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:52:19.743Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:19.743Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:19.743Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:19.743Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"ee0e2ee9-a8e6-4729-9a5d-8ab0f8e9ed1e","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada","time":"2023-06-30T15:52:19.733Z","data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada","bucket":"birch-collective-develop.appspot.com","generation":"1688140339733","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:52:19.733Z","updated":"2023-06-30T15:52:19.733Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"+xtfjK9XV0xMJlFJp0LLul+gXec","metadata":{"firebaseStorageDownloadTokens":"71c3b277-7f47-4943-830a-9b718de47143"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.733Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media"}}
[debug] [2023-06-30T15:52:19.746Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:52:19.746Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:19.746Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:52:19.747Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:52:19.747Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:52:19.748Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:52:19.748Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:52:19.750Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:19.751Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:19.751Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada","bucket":"birch-collective-develop.appspot.com","generation":"1688140339733","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:52:19.733Z","updated":"2023-06-30T15:52:19.733Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"+xtfjK9XV0xMJlFJp0LLul+gXec","metadata":{"firebaseStorageDownloadTokens":"71c3b277-7f47-4943-830a-9b718de47143"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.733Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media"},"context":{"eventId":"1688140339739","timestamp":"2023-06-30T15:52:19.739Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/100aa832-2ffd-43da-8c47-52f553d52ada\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140339733\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:52:19.733Z\",\"updated\":\"2023-06-30T15:52:19.733Z\",\"storageClass\":\"STANDARD\",\"size\":\"140357\",\"md5Hash\":\"hnanNEjPMEYZ68fW9X+yFQ==\",\"etag\":\"+xtfjK9XV0xMJlFJp0LLul+gXec\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"71c3b277-7f47-4943-830a-9b718de47143\"},\"crc32c\":\"fx/IdQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:52:19.733Z\",\"id\":\"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media\"},\"context\":{\"eventId\":\"1688140339739\",\"timestamp\":\"2023-06-30T15:52:19.739Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada' to '/tmp/a296021a-0aee-4d78-b32b-b2c22140b8d2'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada' to '/tmp/a296021a-0aee-4d78-b32b-b2c22140b8d2'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada' to '/tmp/a296021a-0aee-4d78-b32b-b2c22140b8d2'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'\"}"}}
[debug] [2023-06-30T15:52:19.801Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:19.802Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140339801","timestamp":"2023-06-30T15:52:19.801Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140339801","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:19.801Z","updated":"2023-06-30T15:52:19.801Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"0SVNX7GnGr9VeNoh8iwqqGiQteU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"cb243fc9-513f-4965-86d0-2c54e6ef9948"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.801Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32/1688140339801","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32?generation=1688140339801&alt=media"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/43ef0fe8-64e1-4dec-adc2-11cf1a2d3acd'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32'\"}"}}
[debug] [2023-06-30T15:52:19.808Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.808Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:19.809Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.808Z"],"workRunningCount":2}
[debug] [2023-06-30T15:52:19.809Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:19.810Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:19.811Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:19.811Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:19.811Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"ca8a2706-1a4f-463c-ba2f-c8769694832a","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","time":"2023-06-30T15:52:19.801Z","data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140339801","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:19.801Z","updated":"2023-06-30T15:52:19.801Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"0SVNX7GnGr9VeNoh8iwqqGiQteU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"cb243fc9-513f-4965-86d0-2c54e6ef9948"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.801Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32/1688140339801","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32?generation=1688140339801&alt=media"}}
[debug] [2023-06-30T15:52:19.813Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.813Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:19.813Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.813Z"],"workRunningCount":2}
[debug] [2023-06-30T15:52:19.813Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:52:19.814Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:52:19.814Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:52:19.814Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:52:19.814Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:52:19.816Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:19.816Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:19.820Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140339801","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:19.801Z","updated":"2023-06-30T15:52:19.801Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"0SVNX7GnGr9VeNoh8iwqqGiQteU","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"cb243fc9-513f-4965-86d0-2c54e6ef9948"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.801Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32/1688140339801","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32?generation=1688140339801&alt=media"},"context":{"eventId":"1688140339801","timestamp":"2023-06-30T15:52:19.801Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140339801\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:52:19.801Z\",\"updated\":\"2023-06-30T15:52:19.801Z\",\"storageClass\":\"STANDARD\",\"size\":\"196\",\"md5Hash\":\"i1W1Mu4ohJ7wWapxWI3wkg==\",\"etag\":\"0SVNX7GnGr9VeNoh8iwqqGiQteU\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"cb243fc9-513f-4965-86d0-2c54e6ef9948\"},\"crc32c\":\"1E1LzQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:52:19.801Z\",\"id\":\"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32/1688140339801\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_32x32?generation=1688140339801&alt=media\"},\"context\":{\"eventId\":\"1688140339801\",\"timestamp\":\"2023-06-30T15:52:19.801Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:52:19.822Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 7.973957ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 7.973957ms"}}
[debug] [2023-06-30T15:52:19.823Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:52:19.823Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:52:19.823Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:52:19.823Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'\"}"}}
[debug] [2023-06-30T15:52:20.009Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:20.010Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140340009","timestamp":"2023-06-30T15:52:20.009Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140340008","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:20.009Z","updated":"2023-06-30T15:52:20.009Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"y9dECmDTRMzd9MUroouaB97SelE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c9f0bb9e-ab2b-4c31-906c-f7cc2e99b2e4"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:52:20.009Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600/1688140340008","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600?generation=1688140340008&alt=media"}}
[debug] [2023-06-30T15:52:20.014Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:20.014Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:20.014Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:20.014Z"],"workRunningCount":2}
[debug] [2023-06-30T15:52:20.014Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/7af7cebe-a933-41b8-8178-cf7375f7e972'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'\"}"}}
[debug] [2023-06-30T15:52:20.016Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:20.016Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:20.016Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:20.016Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"34e5598d-a3ad-467b-aa80-e55c3677ee2d","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","time":"2023-06-30T15:52:20.009Z","data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140340008","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:20.009Z","updated":"2023-06-30T15:52:20.009Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"y9dECmDTRMzd9MUroouaB97SelE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c9f0bb9e-ab2b-4c31-906c-f7cc2e99b2e4"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:52:20.009Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600/1688140340008","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600?generation=1688140340008&alt=media"}}
[debug] [2023-06-30T15:52:20.017Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:20.017Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140340017","timestamp":"2023-06-30T15:52:20.017Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada","bucket":"birch-collective-develop.appspot.com","generation":"1688140339733","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:52:19.733Z","updated":"2023-06-30T15:52:19.733Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"+xtfjK9XV0xMJlFJp0LLul+gXec","metadata":{"firebaseStorageDownloadTokens":"71c3b277-7f47-4943-830a-9b718de47143"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.733Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media"}}
[debug] [2023-06-30T15:52:20.018Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:20.018Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:20.018Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:20.018Z"],"workRunningCount":2}
[debug] [2023-06-30T15:52:20.019Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:52:20.019Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:52:20.019Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:52:20.019Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:52:20.019Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:52:20.022Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:20.022Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:20.022Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:20.022Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:52:20.023Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:52:20.023Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"33e74a1b-5c4d-4ab2-93dc-06300d1b547e","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada","time":"2023-06-30T15:52:19.733Z","data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada","bucket":"birch-collective-develop.appspot.com","generation":"1688140339733","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:52:19.733Z","updated":"2023-06-30T15:52:19.733Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"+xtfjK9XV0xMJlFJp0LLul+gXec","metadata":{"firebaseStorageDownloadTokens":"71c3b277-7f47-4943-830a-9b718de47143"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:52:19.733Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada/1688140339733","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada?generation=1688140339733&alt=media"}}
[debug] [2023-06-30T15:52:20.023Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140340008","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:52:20.009Z","updated":"2023-06-30T15:52:20.009Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"y9dECmDTRMzd9MUroouaB97SelE","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c9f0bb9e-ab2b-4c31-906c-f7cc2e99b2e4"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:52:20.009Z","id":"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600/1688140340008","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600?generation=1688140340008&alt=media"},"context":{"eventId":"1688140340009","timestamp":"2023-06-30T15:52:20.009Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140340008\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:52:20.009Z\",\"updated\":\"2023-06-30T15:52:20.009Z\",\"storageClass\":\"STANDARD\",\"size\":\"54154\",\"md5Hash\":\"tp7yVeb++qwokyU7P3g/2Q==\",\"etag\":\"y9dECmDTRMzd9MUroouaB97SelE\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"c9f0bb9e-ab2b-4c31-906c-f7cc2e99b2e4\"},\"crc32c\":\"qpuTQw==\",\"timeStorageClassUpdated\":\"2023-06-30T15:52:20.009Z\",\"id\":\"birch-collective-develop.appspot.com/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600/1688140340008\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600?generation=1688140340008&alt=media\"},\"context\":{\"eventId\":\"1688140340009\",\"timestamp\":\"2023-06-30T15:52:20.009Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/100aa832-2ffd-43da-8c47-52f553d52ada_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:52:20.024Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 4.971495ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 4.971495ms"}}
[debug] [2023-06-30T15:52:20.024Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:52:20.024Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:52:20.024Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:52:20.024Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:52:19.746Z"],"workRunningCount":1}
[debug] [2023-06-30T15:52:20.027Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:52:20.027Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/100aa832-2ffd-43da-8c47-52f553d52ada'\"}"}}
[debug] [2023-06-30T15:52:20.030Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 281.833833ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 281.833833ms"}}
[debug] [2023-06-30T15:52:20.030Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:52:20.030Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:52:20.030Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:52:20.030Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:52:37.853Z] Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:52:37.869Z] Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:52:37.900Z] Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:52:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:52:38.964Z] Jun 30, 2023 4:52:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:52:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:52:38.988Z] Jun 30, 2023 4:52:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:52:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:53:24.135Z] Jun 30, 2023 4:53:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:53:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:54:10.138Z] Jun 30, 2023 4:54:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:54:10 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:54:56.142Z] Jun 30, 2023 4:54:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:54:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:55:56.167Z] Jun 30, 2023 4:55:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:55:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:56:43.185Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.185Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140603185","timestamp":"2023-06-30T15:56:43.185Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","bucket":"birch-collective-develop.appspot.com","generation":"1688140603179","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:56:43.179Z","updated":"2023-06-30T15:56:43.179Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"2N1TQ/zUdgtbMJksBhK6050/fGc","metadata":{"firebaseStorageDownloadTokens":"6b9f4407-71bf-450d-9a67-89ccd70ef438"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:56:43.179Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media"}}
[debug] [2023-06-30T15:56:43.187Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.187Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:56:43.187Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.187Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.188Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:56:43.188Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.188Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.189Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.189Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"6fdd8540-7b42-423e-933e-c447b3cb6943","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","time":"2023-06-30T15:56:43.179Z","data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","bucket":"birch-collective-develop.appspot.com","generation":"1688140603179","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:56:43.179Z","updated":"2023-06-30T15:56:43.179Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"2N1TQ/zUdgtbMJksBhK6050/fGc","metadata":{"firebaseStorageDownloadTokens":"6b9f4407-71bf-450d-9a67-89ccd70ef438"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:56:43.179Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media"}}
[debug] [2023-06-30T15:56:43.191Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:56:43.191Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.191Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:56:43.192Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:56:43.192Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:56:43.192Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:56:43.192Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:56:43.196Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.197Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.197Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","bucket":"birch-collective-develop.appspot.com","generation":"1688140603179","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:56:43.179Z","updated":"2023-06-30T15:56:43.179Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"2N1TQ/zUdgtbMJksBhK6050/fGc","metadata":{"firebaseStorageDownloadTokens":"6b9f4407-71bf-450d-9a67-89ccd70ef438"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:56:43.179Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media"},"context":{"eventId":"1688140603185","timestamp":"2023-06-30T15:56:43.185Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140603179\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:56:43.179Z\",\"updated\":\"2023-06-30T15:56:43.179Z\",\"storageClass\":\"STANDARD\",\"size\":\"144634\",\"md5Hash\":\"/2sfonGDoyvJoapvLZit8Q==\",\"etag\":\"2N1TQ/zUdgtbMJksBhK6050/fGc\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"6b9f4407-71bf-450d-9a67-89ccd70ef438\"},\"crc32c\":\"54GuSg==\",\"timeStorageClassUpdated\":\"2023-06-30T15:56:43.179Z\",\"id\":\"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media\"},\"context\":{\"eventId\":\"1688140603185\",\"timestamp\":\"2023-06-30T15:56:43.185Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65' to '/tmp/e0d97edc-7498-423c-b90e-2115fa40c1af'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65' to '/tmp/e0d97edc-7498-423c-b90e-2115fa40c1af'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65' to '/tmp/e0d97edc-7498-423c-b90e-2115fa40c1af'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'\"}"}}
[debug] [2023-06-30T15:56:43.314Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.314Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140603314","timestamp":"2023-06-30T15:56:43.314Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140603314","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.314Z","updated":"2023-06-30T15:56:43.314Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"mgTU9aKYFofbx1k56apaaOh5glg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5fdd176e-9ed8-4d3c-a199-547f9a6b197c"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.314Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32/1688140603314","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32?generation=1688140603314&alt=media"}}
[debug] [2023-06-30T15:56:43.316Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.316Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.316Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.316Z"],"workRunningCount":2}
[debug] [2023-06-30T15:56:43.317Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/92f47358-641b-49fc-9b98-ccaabdbb7457'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32'\"}"}}
[debug] [2023-06-30T15:56:43.319Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.319Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.319Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.320Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"ec8d8b56-6f99-4bcd-aaff-f3be5d6d9301","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","time":"2023-06-30T15:56:43.314Z","data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140603314","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.314Z","updated":"2023-06-30T15:56:43.314Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"mgTU9aKYFofbx1k56apaaOh5glg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5fdd176e-9ed8-4d3c-a199-547f9a6b197c"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.314Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32/1688140603314","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32?generation=1688140603314&alt=media"}}
[debug] [2023-06-30T15:56:43.321Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.321Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.321Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.321Z"],"workRunningCount":2}
[debug] [2023-06-30T15:56:43.321Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:56:43.321Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:56:43.321Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:56:43.321Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:56:43.321Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:56:43.323Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.323Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.324Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140603314","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.314Z","updated":"2023-06-30T15:56:43.314Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"mgTU9aKYFofbx1k56apaaOh5glg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"5fdd176e-9ed8-4d3c-a199-547f9a6b197c"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.314Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32/1688140603314","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32?generation=1688140603314&alt=media"},"context":{"eventId":"1688140603314","timestamp":"2023-06-30T15:56:43.314Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140603314\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:56:43.314Z\",\"updated\":\"2023-06-30T15:56:43.314Z\",\"storageClass\":\"STANDARD\",\"size\":\"172\",\"md5Hash\":\"8oyrq4V5dmijnLJ+toEhcw==\",\"etag\":\"mgTU9aKYFofbx1k56apaaOh5glg\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"5fdd176e-9ed8-4d3c-a199-547f9a6b197c\"},\"crc32c\":\"OVEVMQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:56:43.314Z\",\"id\":\"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32/1688140603314\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_32x32?generation=1688140603314&alt=media\"},\"context\":{\"eventId\":\"1688140603314\",\"timestamp\":\"2023-06-30T15:56:43.314Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:56:43.325Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 3.285833ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 3.285833ms"}}
[debug] [2023-06-30T15:56:43.325Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:56:43.325Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:56:43.325Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:56:43.325Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'\"}"}}
[debug] [2023-06-30T15:56:43.476Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.477Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140603476","timestamp":"2023-06-30T15:56:43.476Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140603476","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.476Z","updated":"2023-06-30T15:56:43.476Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"kN1F2Fgebn/n5aNsSP0ne17WE4o","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d530b586-3c44-44f1-8619-5f18178c9947"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.476Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600/1688140603476","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600?generation=1688140603476&alt=media"}}
[debug] [2023-06-30T15:56:43.479Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.479Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.479Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.479Z"],"workRunningCount":2}
[debug] [2023-06-30T15:56:43.479Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/0ed9fbcf-8a70-4ad9-82bb-b1af28b7a915'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'\"}"}}
[debug] [2023-06-30T15:56:43.481Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.481Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.481Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.481Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"1c95b88e-2d44-4d78-ab74-c5ec773a42d5","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","time":"2023-06-30T15:56:43.476Z","data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140603476","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.476Z","updated":"2023-06-30T15:56:43.476Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"kN1F2Fgebn/n5aNsSP0ne17WE4o","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d530b586-3c44-44f1-8619-5f18178c9947"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.476Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600/1688140603476","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600?generation=1688140603476&alt=media"}}
[debug] [2023-06-30T15:56:43.482Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.482Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140603482","timestamp":"2023-06-30T15:56:43.482Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","bucket":"birch-collective-develop.appspot.com","generation":"1688140603179","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:56:43.179Z","updated":"2023-06-30T15:56:43.179Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"2N1TQ/zUdgtbMJksBhK6050/fGc","metadata":{"firebaseStorageDownloadTokens":"6b9f4407-71bf-450d-9a67-89ccd70ef438"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:56:43.179Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media"}}
[debug] [2023-06-30T15:56:43.483Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.483Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.483Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.191Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.483Z"],"workRunningCount":2}
[debug] [2023-06-30T15:56:43.483Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:56:43.483Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:56:43.484Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:56:43.484Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:56:43.484Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/aa43d0eb-700c-4a82-a425-6238a0abdb65'\"}"}}
[debug] [2023-06-30T15:56:43.486Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 294.00992ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 294.00992ms"}}
[debug] [2023-06-30T15:56:43.486Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:56:43.486Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:56:43.486Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:56:43.486Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:56:43.483Z"],"workRunningCount":1}
[debug] [2023-06-30T15:56:43.487Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.487Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.488Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140603476","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:56:43.476Z","updated":"2023-06-30T15:56:43.476Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"kN1F2Fgebn/n5aNsSP0ne17WE4o","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"d530b586-3c44-44f1-8619-5f18178c9947"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T15:56:43.476Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600/1688140603476","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600?generation=1688140603476&alt=media"},"context":{"eventId":"1688140603476","timestamp":"2023-06-30T15:56:43.476Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140603476\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:56:43.476Z\",\"updated\":\"2023-06-30T15:56:43.476Z\",\"storageClass\":\"STANDARD\",\"size\":\"50902\",\"md5Hash\":\"OoR83DDIg+fi1SfmdDEGQg==\",\"etag\":\"kN1F2Fgebn/n5aNsSP0ne17WE4o\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"d530b586-3c44-44f1-8619-5f18178c9947\"},\"crc32c\":\"+UdurQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:56:43.476Z\",\"id\":\"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600/1688140603476\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600?generation=1688140603476&alt=media\"},\"context\":{\"eventId\":\"1688140603476\",\"timestamp\":\"2023-06-30T15:56:43.476Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:56:43.489Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.489Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:43.489Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:56:43.489Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"d542687a-3d8e-4ec3-9977-25c642479405","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","time":"2023-06-30T15:56:43.179Z","data":{"kind":"storage#object","name":"resized/aa43d0eb-700c-4a82-a425-6238a0abdb65","bucket":"birch-collective-develop.appspot.com","generation":"1688140603179","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:56:43.179Z","updated":"2023-06-30T15:56:43.179Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"2N1TQ/zUdgtbMJksBhK6050/fGc","metadata":{"firebaseStorageDownloadTokens":"6b9f4407-71bf-450d-9a67-89ccd70ef438"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T15:56:43.179Z","id":"birch-collective-develop.appspot.com/resized/aa43d0eb-700c-4a82-a425-6238a0abdb65/1688140603179","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2Faa43d0eb-700c-4a82-a425-6238a0abdb65?generation=1688140603179&alt=media"}}
[debug] [2023-06-30T15:56:43.490Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 6.503172ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 6.503172ms"}}
[debug] [2023-06-30T15:56:43.491Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:56:43.491Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:56:43.491Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:56:43.491Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:56:43.492Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:56:43.492Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:56:44.274Z] Jun 30, 2023 4:56:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:56:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:57:30.139Z] Jun 30, 2023 4:57:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:57:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:57:38.925Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:38.925Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140658925","timestamp":"2023-06-30T15:57:38.925Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","bucket":"birch-collective-develop.appspot.com","generation":"1688140658922","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:57:38.922Z","updated":"2023-06-30T15:57:38.922Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"If+75h2lKGB4FvzKz0pnJv0lhGk","metadata":{"firebaseStorageDownloadTokens":"0f94418a-ca23-460d-8a0d-413472451cd6"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.922Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media"}}
[debug] [2023-06-30T15:57:38.927Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.927Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:57:38.927Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.927Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:38.928Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:57:38.929Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:38.930Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:38.930Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:38.930Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e222f67d-016b-47b9-8d23-4b2e9be80eda","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","time":"2023-06-30T15:57:38.922Z","data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","bucket":"birch-collective-develop.appspot.com","generation":"1688140658922","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:57:38.922Z","updated":"2023-06-30T15:57:38.922Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"If+75h2lKGB4FvzKz0pnJv0lhGk","metadata":{"firebaseStorageDownloadTokens":"0f94418a-ca23-460d-8a0d-413472451cd6"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.922Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media"}}
[debug] [2023-06-30T15:57:38.932Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:57:38.932Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:38.932Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:57:38.932Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:57:38.932Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:57:38.933Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:57:38.933Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T15:57:38.935Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:38.935Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:38.935Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","bucket":"birch-collective-develop.appspot.com","generation":"1688140658922","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T15:57:38.922Z","updated":"2023-06-30T15:57:38.922Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"If+75h2lKGB4FvzKz0pnJv0lhGk","metadata":{"firebaseStorageDownloadTokens":"0f94418a-ca23-460d-8a0d-413472451cd6"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.922Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media"},"context":{"eventId":"1688140658925","timestamp":"2023-06-30T15:57:38.925Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140658922\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T15:57:38.922Z\",\"updated\":\"2023-06-30T15:57:38.922Z\",\"storageClass\":\"STANDARD\",\"size\":\"140357\",\"md5Hash\":\"hnanNEjPMEYZ68fW9X+yFQ==\",\"etag\":\"If+75h2lKGB4FvzKz0pnJv0lhGk\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"0f94418a-ca23-460d-8a0d-413472451cd6\"},\"crc32c\":\"fx/IdQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:57:38.922Z\",\"id\":\"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media\"},\"context\":{\"eventId\":\"1688140658925\",\"timestamp\":\"2023-06-30T15:57:38.925Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796' to '/tmp/7b34aad2-993c-455b-8d07-3fe1b2980b72'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796' to '/tmp/7b34aad2-993c-455b-8d07-3fe1b2980b72'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796' to '/tmp/7b34aad2-993c-455b-8d07-3fe1b2980b72'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'\"}"}}
[debug] [2023-06-30T15:57:38.977Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:38.977Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140658977","timestamp":"2023-06-30T15:57:38.977Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140658977","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:38.977Z","updated":"2023-06-30T15:57:38.977Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"C4U+ldnqjeVv0y98N050ZcfpDyQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"00159b37-c0d3-4220-a3f3-2b7bb08dca0d"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.977Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32/1688140658977","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32?generation=1688140658977&alt=media"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/7d987c52-bc99-4b35-87d7-7147fe503084'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32'\"}"}}
[debug] [2023-06-30T15:57:38.987Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.987Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:38.987Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.987Z"],"workRunningCount":2}
[debug] [2023-06-30T15:57:38.988Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:38.988Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:38.988Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:38.988Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:38.988Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"93ccc122-13fc-4385-96fa-bc863e9bc5f7","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","time":"2023-06-30T15:57:38.977Z","data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140658977","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:38.977Z","updated":"2023-06-30T15:57:38.977Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"C4U+ldnqjeVv0y98N050ZcfpDyQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"00159b37-c0d3-4220-a3f3-2b7bb08dca0d"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.977Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32/1688140658977","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32?generation=1688140658977&alt=media"}}
[debug] [2023-06-30T15:57:38.989Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.989Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:38.990Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.989Z"],"workRunningCount":2}
[debug] [2023-06-30T15:57:38.990Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:57:38.990Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:57:38.990Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:57:38.990Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:57:38.990Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T15:57:38.992Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:38.992Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:38.992Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140658977","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:38.977Z","updated":"2023-06-30T15:57:38.977Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"C4U+ldnqjeVv0y98N050ZcfpDyQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"00159b37-c0d3-4220-a3f3-2b7bb08dca0d"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.977Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32/1688140658977","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32?generation=1688140658977&alt=media"},"context":{"eventId":"1688140658977","timestamp":"2023-06-30T15:57:38.977Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140658977\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:57:38.977Z\",\"updated\":\"2023-06-30T15:57:38.977Z\",\"storageClass\":\"STANDARD\",\"size\":\"196\",\"md5Hash\":\"i1W1Mu4ohJ7wWapxWI3wkg==\",\"etag\":\"C4U+ldnqjeVv0y98N050ZcfpDyQ\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"00159b37-c0d3-4220-a3f3-2b7bb08dca0d\"},\"crc32c\":\"1E1LzQ==\",\"timeStorageClassUpdated\":\"2023-06-30T15:57:38.977Z\",\"id\":\"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32/1688140658977\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32?generation=1688140658977&alt=media\"},\"context\":{\"eventId\":\"1688140658977\",\"timestamp\":\"2023-06-30T15:57:38.977Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:57:38.993Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 2.751565ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 2.751565ms"}}
[debug] [2023-06-30T15:57:38.993Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:57:38.994Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:57:38.994Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:57:38.994Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'\"}"}}
[debug] [2023-06-30T15:57:39.190Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:39.190Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140659190","timestamp":"2023-06-30T15:57:39.190Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140659189","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:39.189Z","updated":"2023-06-30T15:57:39.189Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"DwMqms/7JVGXUUxZ2kI7oRvNK5Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"98a85e1c-ecee-40af-b61f-ddb18732b509"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:57:39.189Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600/1688140659189","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600?generation=1688140659189&alt=media"}}
[debug] [2023-06-30T15:57:39.192Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:39.192Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:39.192Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:39.192Z"],"workRunningCount":2}
[debug] [2023-06-30T15:57:39.193Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:39.193Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:39.193Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:39.193Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:39.193Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"9dbcbdf3-a872-48bd-92e8-830f1e16d0d7","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","time":"2023-06-30T15:57:39.189Z","data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140659189","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:39.189Z","updated":"2023-06-30T15:57:39.189Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"DwMqms/7JVGXUUxZ2kI7oRvNK5Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"98a85e1c-ecee-40af-b61f-ddb18732b509"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:57:39.189Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600/1688140659189","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600?generation=1688140659189&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/bb746427-ec73-4c3e-b2a0-35cc0b201a9e'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'\"}"}}
[debug] [2023-06-30T15:57:39.195Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:39.196Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140659195","timestamp":"2023-06-30T15:57:39.195Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","bucket":"birch-collective-develop.appspot.com","generation":"1688140658922","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:57:38.922Z","updated":"2023-06-30T15:57:38.922Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"If+75h2lKGB4FvzKz0pnJv0lhGk","metadata":{"firebaseStorageDownloadTokens":"0f94418a-ca23-460d-8a0d-413472451cd6"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.922Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media"}}
[debug] [2023-06-30T15:57:39.197Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:39.197Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:39.197Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:39.197Z"],"workRunningCount":2}
[debug] [2023-06-30T15:57:39.197Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T15:57:39.198Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T15:57:39.198Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T15:57:39.198Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T15:57:39.198Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796'\"}"}}
[debug] [2023-06-30T15:57:39.201Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:39.201Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:39.202Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140659189","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T15:57:39.189Z","updated":"2023-06-30T15:57:39.189Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"DwMqms/7JVGXUUxZ2kI7oRvNK5Q","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"98a85e1c-ecee-40af-b61f-ddb18732b509"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T15:57:39.189Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600/1688140659189","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600?generation=1688140659189&alt=media"},"context":{"eventId":"1688140659190","timestamp":"2023-06-30T15:57:39.190Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140659189\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T15:57:39.189Z\",\"updated\":\"2023-06-30T15:57:39.189Z\",\"storageClass\":\"STANDARD\",\"size\":\"54154\",\"md5Hash\":\"tp7yVeb++qwokyU7P3g/2Q==\",\"etag\":\"DwMqms/7JVGXUUxZ2kI7oRvNK5Q\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"98a85e1c-ecee-40af-b61f-ddb18732b509\"},\"crc32c\":\"qpuTQw==\",\"timeStorageClassUpdated\":\"2023-06-30T15:57:39.189Z\",\"id\":\"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600/1688140659189\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600?generation=1688140659189&alt=media\"},\"context\":{\"eventId\":\"1688140659190\",\"timestamp\":\"2023-06-30T15:57:39.190Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T15:57:39.203Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 5.134108ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 5.134108ms"}}
[debug] [2023-06-30T15:57:39.203Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T15:57:39.204Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:57:39.204Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:57:39.204Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T15:57:38.932Z"],"workRunningCount":1}
[debug] [2023-06-30T15:57:39.205Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:39.205Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:57:39.205Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T15:57:39.205Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"e8ec7595-2929-4c84-9e82-b7fb270e4b59","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","time":"2023-06-30T15:57:38.922Z","data":{"kind":"storage#object","name":"resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","bucket":"birch-collective-develop.appspot.com","generation":"1688140658922","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T15:57:38.922Z","updated":"2023-06-30T15:57:38.922Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"If+75h2lKGB4FvzKz0pnJv0lhGk","metadata":{"firebaseStorageDownloadTokens":"0f94418a-ca23-460d-8a0d-413472451cd6"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T15:57:38.922Z","id":"birch-collective-develop.appspot.com/resized/2b84fab6-065c-4d9b-abd1-f8a4f4d5d796/1688140658922","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F2b84fab6-065c-4d9b-abd1-f8a4f4d5d796?generation=1688140658922&alt=media"}}
[debug] [2023-06-30T15:57:39.206Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 273.036174ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 273.036174ms"}}
[debug] [2023-06-30T15:57:39.206Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T15:57:39.206Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T15:57:39.206Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T15:57:39.206Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T15:57:39.208Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T15:57:39.208Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T15:58:55.134Z] Jun 30, 2023 4:58:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:58:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T15:59:41.135Z] Jun 30, 2023 4:59:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 4:59:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:00:41.145Z] Jun 30, 2023 5:00:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:00:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:01:32.222Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.222Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140892222","timestamp":"2023-06-30T16:01:32.222Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","bucket":"birch-collective-develop.appspot.com","generation":"1688140892218","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:01:32.218Z","updated":"2023-06-30T16:01:32.218Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"IzKrnyB0oaCjtmXOeEYsO76xA/k","metadata":{"firebaseStorageDownloadTokens":"f2c3f5f1-c7a4-4900-9310-26830119fd56"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.218Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media"}}
[debug] [2023-06-30T16:01:32.224Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.224Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:01:32.224Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.224Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.225Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:01:32.226Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.226Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.226Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.226Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"baeaf30f-f963-4e11-8708-06d4c78921c7","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","time":"2023-06-30T16:01:32.218Z","data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","bucket":"birch-collective-develop.appspot.com","generation":"1688140892218","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:01:32.218Z","updated":"2023-06-30T16:01:32.218Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"IzKrnyB0oaCjtmXOeEYsO76xA/k","metadata":{"firebaseStorageDownloadTokens":"f2c3f5f1-c7a4-4900-9310-26830119fd56"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.218Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media"}}
[debug] [2023-06-30T16:01:32.227Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:01:32.227Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.227Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:01:32.228Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:01:32.228Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:01:32.228Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:01:32.228Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:01:32.232Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.232Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.232Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","bucket":"birch-collective-develop.appspot.com","generation":"1688140892218","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:01:32.218Z","updated":"2023-06-30T16:01:32.218Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"IzKrnyB0oaCjtmXOeEYsO76xA/k","metadata":{"firebaseStorageDownloadTokens":"f2c3f5f1-c7a4-4900-9310-26830119fd56"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.218Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media"},"context":{"eventId":"1688140892222","timestamp":"2023-06-30T16:01:32.222Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140892218\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T16:01:32.218Z\",\"updated\":\"2023-06-30T16:01:32.218Z\",\"storageClass\":\"STANDARD\",\"size\":\"140357\",\"md5Hash\":\"hnanNEjPMEYZ68fW9X+yFQ==\",\"etag\":\"IzKrnyB0oaCjtmXOeEYsO76xA/k\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"f2c3f5f1-c7a4-4900-9310-26830119fd56\"},\"crc32c\":\"fx/IdQ==\",\"timeStorageClassUpdated\":\"2023-06-30T16:01:32.218Z\",\"id\":\"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media\"},\"context\":{\"eventId\":\"1688140892222\",\"timestamp\":\"2023-06-30T16:01:32.222Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd' to '/tmp/ab7ba0d5-d7c5-4f95-83fe-ef5fbbaba4e3'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd' to '/tmp/ab7ba0d5-d7c5-4f95-83fe-ef5fbbaba4e3'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd' to '/tmp/ab7ba0d5-d7c5-4f95-83fe-ef5fbbaba4e3'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'\"}"}}
[debug] [2023-06-30T16:01:32.280Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.283Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140892280","timestamp":"2023-06-30T16:01:32.280Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140892280","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.280Z","updated":"2023-06-30T16:01:32.280Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"9ciD+DqF+nzk9aWDpnEuy+AIiU4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"1339e277-cb5b-494c-a67c-0db9b9476f63"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.280Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32/1688140892280","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32?generation=1688140892280&alt=media"}}
[debug] [2023-06-30T16:01:32.287Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.287Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.288Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.287Z"],"workRunningCount":2}
[debug] [2023-06-30T16:01:32.288Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.289Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.289Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.289Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.289Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"44f7fd38-35ee-45aa-9e32-cc96969fa992","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","time":"2023-06-30T16:01:32.280Z","data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140892280","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.280Z","updated":"2023-06-30T16:01:32.280Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"9ciD+DqF+nzk9aWDpnEuy+AIiU4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"1339e277-cb5b-494c-a67c-0db9b9476f63"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.280Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32/1688140892280","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32?generation=1688140892280&alt=media"}}
[debug] [2023-06-30T16:01:32.290Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.290Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.290Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.290Z"],"workRunningCount":2}
[debug] [2023-06-30T16:01:32.290Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:01:32.291Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:01:32.291Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:01:32.291Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:01:32.292Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/98cc411a-a8db-40cc-a704-e52776692ef7'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32'\"}"}}
[debug] [2023-06-30T16:01:32.301Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 8.721652ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 8.721652ms"}}
[debug] [2023-06-30T16:01:32.301Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:01:32.301Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:01:32.301Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:01:32.301Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.302Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.302Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.302Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140892280","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.280Z","updated":"2023-06-30T16:01:32.280Z","storageClass":"STANDARD","size":"196","md5Hash":"i1W1Mu4ohJ7wWapxWI3wkg==","etag":"9ciD+DqF+nzk9aWDpnEuy+AIiU4","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"1339e277-cb5b-494c-a67c-0db9b9476f63"},"crc32c":"1E1LzQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.280Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32/1688140892280","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32?generation=1688140892280&alt=media"},"context":{"eventId":"1688140892280","timestamp":"2023-06-30T16:01:32.280Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140892280\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:01:32.280Z\",\"updated\":\"2023-06-30T16:01:32.280Z\",\"storageClass\":\"STANDARD\",\"size\":\"196\",\"md5Hash\":\"i1W1Mu4ohJ7wWapxWI3wkg==\",\"etag\":\"9ciD+DqF+nzk9aWDpnEuy+AIiU4\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"1339e277-cb5b-494c-a67c-0db9b9476f63\"},\"crc32c\":\"1E1LzQ==\",\"timeStorageClassUpdated\":\"2023-06-30T16:01:32.280Z\",\"id\":\"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32/1688140892280\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32?generation=1688140892280&alt=media\"},\"context\":{\"eventId\":\"1688140892280\",\"timestamp\":\"2023-06-30T16:01:32.280Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'\"}"}}
[debug] [2023-06-30T16:01:32.483Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.484Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140892483","timestamp":"2023-06-30T16:01:32.483Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140892482","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.482Z","updated":"2023-06-30T16:01:32.482Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"ljxWztB6GeY58nNZG2LGFLGMSew","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c116db1a-1c15-4c59-8714-71977fb5b6b5"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T16:01:32.482Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600/1688140892482","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600?generation=1688140892482&alt=media"}}
[debug] [2023-06-30T16:01:32.485Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.485Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.485Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.485Z"],"workRunningCount":2}
[debug] [2023-06-30T16:01:32.486Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.486Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.486Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.486Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.486Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"3d319c04-3dc4-41aa-88e8-3547143c0e10","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","time":"2023-06-30T16:01:32.482Z","data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140892482","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.482Z","updated":"2023-06-30T16:01:32.482Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"ljxWztB6GeY58nNZG2LGFLGMSew","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c116db1a-1c15-4c59-8714-71977fb5b6b5"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T16:01:32.482Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600/1688140892482","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600?generation=1688140892482&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/7cad068c-b495-4060-bca8-fc24c1ac75da'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'\"}"}}
[debug] [2023-06-30T16:01:32.488Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.488Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140892488","timestamp":"2023-06-30T16:01:32.488Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","bucket":"birch-collective-develop.appspot.com","generation":"1688140892218","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:01:32.218Z","updated":"2023-06-30T16:01:32.218Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"IzKrnyB0oaCjtmXOeEYsO76xA/k","metadata":{"firebaseStorageDownloadTokens":"f2c3f5f1-c7a4-4900-9310-26830119fd56"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.218Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media"}}
[debug] [2023-06-30T16:01:32.489Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.489Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.489Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.227Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.489Z"],"workRunningCount":2}
[debug] [2023-06-30T16:01:32.489Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:01:32.489Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:01:32.490Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:01:32.490Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:01:32.490Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/58bf129c-a56c-44ef-8708-0bcf51a261cd'\"}"}}
[debug] [2023-06-30T16:01:32.492Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 263.793325ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 263.793325ms"}}
[debug] [2023-06-30T16:01:32.492Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:01:32.492Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:01:32.492Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:01:32.492Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:01:32.489Z"],"workRunningCount":1}
[debug] [2023-06-30T16:01:32.495Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.495Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.496Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140892482","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:01:32.482Z","updated":"2023-06-30T16:01:32.482Z","storageClass":"STANDARD","size":"54154","md5Hash":"tp7yVeb++qwokyU7P3g/2Q==","etag":"ljxWztB6GeY58nNZG2LGFLGMSew","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"c116db1a-1c15-4c59-8714-71977fb5b6b5"},"crc32c":"qpuTQw==","timeStorageClassUpdated":"2023-06-30T16:01:32.482Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600/1688140892482","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600?generation=1688140892482&alt=media"},"context":{"eventId":"1688140892483","timestamp":"2023-06-30T16:01:32.483Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140892482\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:01:32.482Z\",\"updated\":\"2023-06-30T16:01:32.482Z\",\"storageClass\":\"STANDARD\",\"size\":\"54154\",\"md5Hash\":\"tp7yVeb++qwokyU7P3g/2Q==\",\"etag\":\"ljxWztB6GeY58nNZG2LGFLGMSew\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"c116db1a-1c15-4c59-8714-71977fb5b6b5\"},\"crc32c\":\"qpuTQw==\",\"timeStorageClassUpdated\":\"2023-06-30T16:01:32.482Z\",\"id\":\"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600/1688140892482\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600?generation=1688140892482&alt=media\"},\"context\":{\"eventId\":\"1688140892483\",\"timestamp\":\"2023-06-30T16:01:32.483Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:01:32.499Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 9.260471ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 9.260471ms"}}
[debug] [2023-06-30T16:01:32.499Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:01:32.499Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:01:32.499Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:01:32.500Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:01:32.500Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.500Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:32.500Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:01:32.500Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"1aeebe8f-8d5a-4b21-b9b2-0a4254e98fe6","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","time":"2023-06-30T16:01:32.218Z","data":{"kind":"storage#object","name":"resized/58bf129c-a56c-44ef-8708-0bcf51a261cd","bucket":"birch-collective-develop.appspot.com","generation":"1688140892218","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:01:32.218Z","updated":"2023-06-30T16:01:32.218Z","storageClass":"STANDARD","size":"140357","md5Hash":"hnanNEjPMEYZ68fW9X+yFQ==","etag":"IzKrnyB0oaCjtmXOeEYsO76xA/k","metadata":{"firebaseStorageDownloadTokens":"f2c3f5f1-c7a4-4900-9310-26830119fd56"},"crc32c":"fx/IdQ==","timeStorageClassUpdated":"2023-06-30T16:01:32.218Z","id":"birch-collective-develop.appspot.com/resized/58bf129c-a56c-44ef-8708-0bcf51a261cd/1688140892218","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F58bf129c-a56c-44ef-8708-0bcf51a261cd?generation=1688140892218&alt=media"}}
[debug] [2023-06-30T16:01:32.502Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:01:32.502Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:01:33.343Z] Jun 30, 2023 5:01:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:01:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:02:19.138Z] Jun 30, 2023 5:02:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:02:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:02:36.703Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.703Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140956703","timestamp":"2023-06-30T16:02:36.703Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","bucket":"birch-collective-develop.appspot.com","generation":"1688140956697","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:02:36.697Z","updated":"2023-06-30T16:02:36.697Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"T6gj5AxEJob8q4I7UiNzuCViJnI","metadata":{"firebaseStorageDownloadTokens":"d3a36f05-87b1-4d4a-819d-ee8147198e97"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:02:36.697Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media"}}
[debug] [2023-06-30T16:02:36.706Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.706Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:02:36.706Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.706Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.706Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:02:36.707Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.707Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.707Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.707Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"5fab664f-cf75-4c3b-a12b-5b36df184f38","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","time":"2023-06-30T16:02:36.697Z","data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","bucket":"birch-collective-develop.appspot.com","generation":"1688140956697","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:02:36.697Z","updated":"2023-06-30T16:02:36.697Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"T6gj5AxEJob8q4I7UiNzuCViJnI","metadata":{"firebaseStorageDownloadTokens":"d3a36f05-87b1-4d4a-819d-ee8147198e97"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:02:36.697Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media"}}
[debug] [2023-06-30T16:02:36.709Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:02:36.709Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.709Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:02:36.709Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:02:36.709Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:02:36.709Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:02:36.710Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:02:36.712Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.712Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.712Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","bucket":"birch-collective-develop.appspot.com","generation":"1688140956697","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:02:36.697Z","updated":"2023-06-30T16:02:36.697Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"T6gj5AxEJob8q4I7UiNzuCViJnI","metadata":{"firebaseStorageDownloadTokens":"d3a36f05-87b1-4d4a-819d-ee8147198e97"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:02:36.697Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media"},"context":{"eventId":"1688140956703","timestamp":"2023-06-30T16:02:36.703Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140956697\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T16:02:36.697Z\",\"updated\":\"2023-06-30T16:02:36.697Z\",\"storageClass\":\"STANDARD\",\"size\":\"65093\",\"md5Hash\":\"2v5Zhvb5eAkWnlI/Jk8Ccg==\",\"etag\":\"T6gj5AxEJob8q4I7UiNzuCViJnI\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"d3a36f05-87b1-4d4a-819d-ee8147198e97\"},\"crc32c\":\"Gz73XA==\",\"timeStorageClassUpdated\":\"2023-06-30T16:02:36.697Z\",\"id\":\"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media\"},\"context\":{\"eventId\":\"1688140956703\",\"timestamp\":\"2023-06-30T16:02:36.703Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b' to '/tmp/fa42f622-5b7f-44aa-986d-c9c5c433a49b'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b' to '/tmp/fa42f622-5b7f-44aa-986d-c9c5c433a49b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b' to '/tmp/fa42f622-5b7f-44aa-986d-c9c5c433a49b'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'\"}"}}
[debug] [2023-06-30T16:02:36.761Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.761Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140956761","timestamp":"2023-06-30T16:02:36.761Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140956760","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.761Z","updated":"2023-06-30T16:02:36.761Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"3m1deYVzKiwgmbVbjwss+2vdLbk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"24bfceab-2709-40b0-a33e-9cd54e0b020e"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:02:36.761Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32/1688140956760","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32?generation=1688140956760&alt=media"}}
[debug] [2023-06-30T16:02:36.764Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.764Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.764Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.764Z"],"workRunningCount":2}
[debug] [2023-06-30T16:02:36.765Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.765Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.765Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.766Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.766Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"735ae420-e1f2-4147-8706-26c299192606","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","time":"2023-06-30T16:02:36.761Z","data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140956760","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.761Z","updated":"2023-06-30T16:02:36.761Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"3m1deYVzKiwgmbVbjwss+2vdLbk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"24bfceab-2709-40b0-a33e-9cd54e0b020e"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:02:36.761Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32/1688140956760","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32?generation=1688140956760&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/eb72ea3f-12e2-4a16-9c69-37e7919dc6ba'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32'\"}"}}
[debug] [2023-06-30T16:02:36.774Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.774Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.777Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.774Z"],"workRunningCount":2}
[debug] [2023-06-30T16:02:36.778Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:02:36.782Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:02:36.782Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:02:36.782Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:02:36.783Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T16:02:36.785Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.785Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.785Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688140956760","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.761Z","updated":"2023-06-30T16:02:36.761Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"3m1deYVzKiwgmbVbjwss+2vdLbk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"24bfceab-2709-40b0-a33e-9cd54e0b020e"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:02:36.761Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32/1688140956760","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32?generation=1688140956760&alt=media"},"context":{"eventId":"1688140956761","timestamp":"2023-06-30T16:02:36.761Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140956760\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:02:36.761Z\",\"updated\":\"2023-06-30T16:02:36.761Z\",\"storageClass\":\"STANDARD\",\"size\":\"106\",\"md5Hash\":\"nnDYyAAuY3nCFRRn/b0meA==\",\"etag\":\"3m1deYVzKiwgmbVbjwss+2vdLbk\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"24bfceab-2709-40b0-a33e-9cd54e0b020e\"},\"crc32c\":\"buLj6Q==\",\"timeStorageClassUpdated\":\"2023-06-30T16:02:36.761Z\",\"id\":\"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32/1688140956760\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32?generation=1688140956760&alt=media\"},\"context\":{\"eventId\":\"1688140956761\",\"timestamp\":\"2023-06-30T16:02:36.761Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:02:36.787Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 4.477214ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 4.477214ms"}}
[debug] [2023-06-30T16:02:36.788Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:02:36.788Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:02:36.788Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:02:36.788Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'\"}"}}
[debug] [2023-06-30T16:02:36.873Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.874Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140956873","timestamp":"2023-06-30T16:02:36.873Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140956873","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.873Z","updated":"2023-06-30T16:02:36.873Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"9p5mjRQIzU+k+2TDYOUzqQeBojQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"a3b94f84-118b-4798-bc9c-e14ef33f8dc2"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:02:36.873Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600/1688140956873","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600?generation=1688140956873&alt=media"}}
[debug] [2023-06-30T16:02:36.876Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.875Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.876Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.875Z"],"workRunningCount":2}
[debug] [2023-06-30T16:02:36.876Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/a87ee00d-9957-4284-97fe-55b0e597c882'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'\"}"}}
[debug] [2023-06-30T16:02:36.878Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.878Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688140956878","timestamp":"2023-06-30T16:02:36.878Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","bucket":"birch-collective-develop.appspot.com","generation":"1688140956697","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:02:36.697Z","updated":"2023-06-30T16:02:36.697Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"T6gj5AxEJob8q4I7UiNzuCViJnI","metadata":{"firebaseStorageDownloadTokens":"d3a36f05-87b1-4d4a-819d-ee8147198e97"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:02:36.697Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media"}}
[debug] [2023-06-30T16:02:36.879Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.879Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.879Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.879Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"6dd4d1c4-fff7-4645-869d-c8080656353c","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","time":"2023-06-30T16:02:36.873Z","data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140956873","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.873Z","updated":"2023-06-30T16:02:36.873Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"9p5mjRQIzU+k+2TDYOUzqQeBojQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"a3b94f84-118b-4798-bc9c-e14ef33f8dc2"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:02:36.873Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600/1688140956873","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600?generation=1688140956873&alt=media"}}
[debug] [2023-06-30T16:02:36.880Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.880Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.880Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.709Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.880Z"],"workRunningCount":2}
[debug] [2023-06-30T16:02:36.880Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:02:36.881Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:02:36.881Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:02:36.881Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:02:36.881Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b'\"}"}}
[debug] [2023-06-30T16:02:36.884Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 174.935348ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 174.935348ms"}}
[debug] [2023-06-30T16:02:36.885Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:02:36.885Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:02:36.885Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:02:36.885Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:02:36.880Z"],"workRunningCount":1}
[debug] [2023-06-30T16:02:36.887Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.887Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.887Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:02:36.887Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"7a92e6f3-f259-4ed4-b0cf-5781d50ab372","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","time":"2023-06-30T16:02:36.697Z","data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b","bucket":"birch-collective-develop.appspot.com","generation":"1688140956697","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:02:36.697Z","updated":"2023-06-30T16:02:36.697Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"T6gj5AxEJob8q4I7UiNzuCViJnI","metadata":{"firebaseStorageDownloadTokens":"d3a36f05-87b1-4d4a-819d-ee8147198e97"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:02:36.697Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b/1688140956697","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b?generation=1688140956697&alt=media"}}
[debug] [2023-06-30T16:02:36.888Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.888Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:02:36.889Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688140956873","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:02:36.873Z","updated":"2023-06-30T16:02:36.873Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"9p5mjRQIzU+k+2TDYOUzqQeBojQ","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"a3b94f84-118b-4798-bc9c-e14ef33f8dc2"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:02:36.873Z","id":"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600/1688140956873","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600?generation=1688140956873&alt=media"},"context":{"eventId":"1688140956873","timestamp":"2023-06-30T16:02:36.873Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688140956873\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:02:36.873Z\",\"updated\":\"2023-06-30T16:02:36.873Z\",\"storageClass\":\"STANDARD\",\"size\":\"23404\",\"md5Hash\":\"Q2Bufhca1ZFVRa9MDbe+Sg==\",\"etag\":\"9p5mjRQIzU+k+2TDYOUzqQeBojQ\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"a3b94f84-118b-4798-bc9c-e14ef33f8dc2\"},\"crc32c\":\"ZRqmww==\",\"timeStorageClassUpdated\":\"2023-06-30T16:02:36.873Z\",\"id\":\"birch-collective-develop.appspot.com/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600/1688140956873\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600?generation=1688140956873&alt=media\"},\"context\":{\"eventId\":\"1688140956873\",\"timestamp\":\"2023-06-30T16:02:36.873Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/5aced9fb-cfc1-48c9-a752-cd354c886e2b_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:02:36.890Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 8.84512ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 8.84512ms"}}
[debug] [2023-06-30T16:02:36.890Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:02:36.890Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:02:36.890Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:02:36.890Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:02:36.891Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:02:36.892Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:07.844Z] Jun 30, 2023 5:03:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:03:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:03:36.039Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.039Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141016039","timestamp":"2023-06-30T16:03:36.039Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401","bucket":"birch-collective-develop.appspot.com","generation":"1688141016035","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:03:36.035Z","updated":"2023-06-30T16:03:36.035Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"u0YtX22vlefcrwS+PekGL9IS/8k","metadata":{"firebaseStorageDownloadTokens":"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T16:03:36.035Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media"}}
[debug] [2023-06-30T16:03:36.043Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.043Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:03:36.044Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.043Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.044Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:03:36.045Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.045Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.046Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.046Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"01eb5272-c863-4829-8862-83fdd8ef8fa8","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401","time":"2023-06-30T16:03:36.035Z","data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401","bucket":"birch-collective-develop.appspot.com","generation":"1688141016035","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:03:36.035Z","updated":"2023-06-30T16:03:36.035Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"u0YtX22vlefcrwS+PekGL9IS/8k","metadata":{"firebaseStorageDownloadTokens":"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T16:03:36.035Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media"}}
[debug] [2023-06-30T16:03:36.047Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:03:36.047Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.047Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:03:36.048Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:03:36.049Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:03:36.049Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:03:36.049Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:03:36.052Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.055Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.055Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401","bucket":"birch-collective-develop.appspot.com","generation":"1688141016035","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:03:36.035Z","updated":"2023-06-30T16:03:36.035Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"u0YtX22vlefcrwS+PekGL9IS/8k","metadata":{"firebaseStorageDownloadTokens":"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T16:03:36.035Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media"},"context":{"eventId":"1688141016039","timestamp":"2023-06-30T16:03:36.039Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/254b2584-e26d-4d9e-979d-9892ac93b401\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141016035\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T16:03:36.035Z\",\"updated\":\"2023-06-30T16:03:36.035Z\",\"storageClass\":\"STANDARD\",\"size\":\"144634\",\"md5Hash\":\"/2sfonGDoyvJoapvLZit8Q==\",\"etag\":\"u0YtX22vlefcrwS+PekGL9IS/8k\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1\"},\"crc32c\":\"54GuSg==\",\"timeStorageClassUpdated\":\"2023-06-30T16:03:36.035Z\",\"id\":\"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media\"},\"context\":{\"eventId\":\"1688141016039\",\"timestamp\":\"2023-06-30T16:03:36.039Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401' to '/tmp/1b071b4f-245b-4e4d-8e6e-39488cc6df3f'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401' to '/tmp/1b071b4f-245b-4e4d-8e6e-39488cc6df3f'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401' to '/tmp/1b071b4f-245b-4e4d-8e6e-39488cc6df3f'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/d6629718-9737-4b99-9551-84c2398db1f0' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/d6629718-9737-4b99-9551-84c2398db1f0' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/d6629718-9737-4b99-9551-84c2398db1f0' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'\"}"}}
[debug] [2023-06-30T16:03:36.128Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.128Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141016128","timestamp":"2023-06-30T16:03:36.128Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141016127","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.127Z","updated":"2023-06-30T16:03:36.127Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"xglLsn0LE6jzQVJII7tLIR0RCEo","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0094ac85-c464-4586-b313-5b48d0c8d1fa"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.127Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32/1688141016127","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32?generation=1688141016127&alt=media"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/d6629718-9737-4b99-9551-84c2398db1f0'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32'\"}"}}
[debug] [2023-06-30T16:03:36.136Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.135Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.136Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.135Z"],"workRunningCount":2}
[debug] [2023-06-30T16:03:36.136Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.137Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.137Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.137Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.137Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"87b90034-19a8-4ee7-9ff9-ae72083c2201","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","time":"2023-06-30T16:03:36.127Z","data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141016127","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.127Z","updated":"2023-06-30T16:03:36.127Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"xglLsn0LE6jzQVJII7tLIR0RCEo","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0094ac85-c464-4586-b313-5b48d0c8d1fa"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.127Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32/1688141016127","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32?generation=1688141016127&alt=media"}}
[debug] [2023-06-30T16:03:36.139Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.139Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.139Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.139Z"],"workRunningCount":2}
[debug] [2023-06-30T16:03:36.139Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:03:36.139Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:03:36.139Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:03:36.139Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:03:36.140Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T16:03:36.142Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.142Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.143Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141016127","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.127Z","updated":"2023-06-30T16:03:36.127Z","storageClass":"STANDARD","size":"172","md5Hash":"8oyrq4V5dmijnLJ+toEhcw==","etag":"xglLsn0LE6jzQVJII7tLIR0RCEo","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"0094ac85-c464-4586-b313-5b48d0c8d1fa"},"crc32c":"OVEVMQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.127Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32/1688141016127","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32?generation=1688141016127&alt=media"},"context":{"eventId":"1688141016128","timestamp":"2023-06-30T16:03:36.128Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141016127\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:03:36.127Z\",\"updated\":\"2023-06-30T16:03:36.127Z\",\"storageClass\":\"STANDARD\",\"size\":\"172\",\"md5Hash\":\"8oyrq4V5dmijnLJ+toEhcw==\",\"etag\":\"xglLsn0LE6jzQVJII7tLIR0RCEo\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"0094ac85-c464-4586-b313-5b48d0c8d1fa\"},\"crc32c\":\"OVEVMQ==\",\"timeStorageClassUpdated\":\"2023-06-30T16:03:36.127Z\",\"id\":\"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32/1688141016127\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_32x32?generation=1688141016127&alt=media\"},\"context\":{\"eventId\":\"1688141016128\",\"timestamp\":\"2023-06-30T16:03:36.128Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:03:36.145Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 5.005268ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 5.005268ms"}}
[debug] [2023-06-30T16:03:36.145Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:03:36.145Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:03:36.145Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:03:36.145Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'\"}"}}
[debug] [2023-06-30T16:03:36.346Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.346Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141016346","timestamp":"2023-06-30T16:03:36.346Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141016345","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.345Z","updated":"2023-06-30T16:03:36.345Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"e/MwoUsk/IgjDbVt2FSyTuTf/uw","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e35ce3b1-e6ac-46d0-a886-174efee15272"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.345Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600/1688141016345","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600?generation=1688141016345&alt=media"}}
[debug] [2023-06-30T16:03:36.348Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.348Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.348Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.348Z"],"workRunningCount":2}
[debug] [2023-06-30T16:03:36.348Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/ed8132fc-acc2-47f0-b820-c9c5da8336ae'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'\"}"}}
[debug] [2023-06-30T16:03:36.349Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.349Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.349Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.349Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"6596b667-18be-49ac-a9a8-bb4136bca2fa","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","time":"2023-06-30T16:03:36.345Z","data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141016345","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.345Z","updated":"2023-06-30T16:03:36.345Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"e/MwoUsk/IgjDbVt2FSyTuTf/uw","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e35ce3b1-e6ac-46d0-a886-174efee15272"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.345Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600/1688141016345","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600?generation=1688141016345&alt=media"}}
[debug] [2023-06-30T16:03:36.350Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.350Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141016350","timestamp":"2023-06-30T16:03:36.350Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401","bucket":"birch-collective-develop.appspot.com","generation":"1688141016035","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:03:36.035Z","updated":"2023-06-30T16:03:36.035Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"u0YtX22vlefcrwS+PekGL9IS/8k","metadata":{"firebaseStorageDownloadTokens":"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T16:03:36.035Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media"}}
[debug] [2023-06-30T16:03:36.352Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.352Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.352Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.047Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.352Z"],"workRunningCount":2}
[debug] [2023-06-30T16:03:36.352Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:03:36.352Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:03:36.352Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:03:36.352Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:03:36.353Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/254b2584-e26d-4d9e-979d-9892ac93b401'\"}"}}
[debug] [2023-06-30T16:03:36.356Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 306.850573ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 306.850573ms"}}
[debug] [2023-06-30T16:03:36.356Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:03:36.356Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:03:36.356Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:03:36.356Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:03:36.352Z"],"workRunningCount":1}
[debug] [2023-06-30T16:03:36.358Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.358Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.358Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.358Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:03:36.358Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:03:36.358Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"62f70273-1f88-42e6-9b75-afd5eaf4f106","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401","time":"2023-06-30T16:03:36.035Z","data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401","bucket":"birch-collective-develop.appspot.com","generation":"1688141016035","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:03:36.035Z","updated":"2023-06-30T16:03:36.035Z","storageClass":"STANDARD","size":"144634","md5Hash":"/2sfonGDoyvJoapvLZit8Q==","etag":"u0YtX22vlefcrwS+PekGL9IS/8k","metadata":{"firebaseStorageDownloadTokens":"7f91d593-d1d9-45a3-a412-05f0d0e7d1b1"},"crc32c":"54GuSg==","timeStorageClassUpdated":"2023-06-30T16:03:36.035Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401/1688141016035","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401?generation=1688141016035&alt=media"}}
[debug] [2023-06-30T16:03:36.360Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141016345","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:03:36.345Z","updated":"2023-06-30T16:03:36.345Z","storageClass":"STANDARD","size":"50902","md5Hash":"OoR83DDIg+fi1SfmdDEGQg==","etag":"e/MwoUsk/IgjDbVt2FSyTuTf/uw","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"e35ce3b1-e6ac-46d0-a886-174efee15272"},"crc32c":"+UdurQ==","timeStorageClassUpdated":"2023-06-30T16:03:36.345Z","id":"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600/1688141016345","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600?generation=1688141016345&alt=media"},"context":{"eventId":"1688141016346","timestamp":"2023-06-30T16:03:36.346Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141016345\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:03:36.345Z\",\"updated\":\"2023-06-30T16:03:36.345Z\",\"storageClass\":\"STANDARD\",\"size\":\"50902\",\"md5Hash\":\"OoR83DDIg+fi1SfmdDEGQg==\",\"etag\":\"e/MwoUsk/IgjDbVt2FSyTuTf/uw\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"e35ce3b1-e6ac-46d0-a886-174efee15272\"},\"crc32c\":\"+UdurQ==\",\"timeStorageClassUpdated\":\"2023-06-30T16:03:36.345Z\",\"id\":\"birch-collective-develop.appspot.com/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600/1688141016345\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600?generation=1688141016345&alt=media\"},\"context\":{\"eventId\":\"1688141016346\",\"timestamp\":\"2023-06-30T16:03:36.346Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/254b2584-e26d-4d9e-979d-9892ac93b401_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:03:36.363Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 10.879761ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 10.879761ms"}}
[debug] [2023-06-30T16:03:36.364Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:03:36.364Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:03:36.364Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:03:36.364Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:03:36.366Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:03:36.366Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:04:07.197Z] Jun 30, 2023 5:04:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:04:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:04:27.592Z] Jun 30, 2023 5:04:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:04:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:04:56.807Z] Jun 30, 2023 5:04:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:04:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:05:56.822Z] Jun 30, 2023 5:05:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:05:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:06:42.139Z] Jun 30, 2023 5:06:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:06:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:07:42.158Z] Jun 30, 2023 5:07:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:07:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:08:28.140Z] Jun 30, 2023 5:08:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:08:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:09:14.136Z] Jun 30, 2023 5:09:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:09:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:10:00.140Z] Jun 30, 2023 5:10:00 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:10:00 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:10:46.138Z] Jun 30, 2023 5:10:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:10:46 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:12:02.139Z] Jun 30, 2023 5:12:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:12:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:12:48.140Z] Jun 30, 2023 5:12:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:12:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:12:49.700Z] Jun 30, 2023 5:12:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:12:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:13:48.154Z] Jun 30, 2023 5:13:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:13:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:14:22.640Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.641Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141662640","timestamp":"2023-06-30T16:14:22.640Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","bucket":"birch-collective-develop.appspot.com","generation":"1688141662636","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:14:22.636Z","updated":"2023-06-30T16:14:22.636Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"m1Z5wdOKZXm9xI31eKeTwPwq6Qs","metadata":{"firebaseStorageDownloadTokens":"c1e43e59-63b6-4897-a2ec-f22762ab53f3"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T16:14:22.636Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media"}}
[debug] [2023-06-30T16:14:22.644Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.644Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:14:22.646Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.644Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.646Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:14:22.649Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.649Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.649Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.649Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"1df5edcf-e858-4f27-8139-5b0d99398dc8","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","time":"2023-06-30T16:14:22.636Z","data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","bucket":"birch-collective-develop.appspot.com","generation":"1688141662636","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:14:22.636Z","updated":"2023-06-30T16:14:22.636Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"m1Z5wdOKZXm9xI31eKeTwPwq6Qs","metadata":{"firebaseStorageDownloadTokens":"c1e43e59-63b6-4897-a2ec-f22762ab53f3"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T16:14:22.636Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media"}}
[debug] [2023-06-30T16:14:22.650Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:14:22.650Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.650Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:14:22.650Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:14:22.651Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:14:22.651Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:14:22.651Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:14:22.653Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.654Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.656Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","bucket":"birch-collective-develop.appspot.com","generation":"1688141662636","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:14:22.636Z","updated":"2023-06-30T16:14:22.636Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"m1Z5wdOKZXm9xI31eKeTwPwq6Qs","metadata":{"firebaseStorageDownloadTokens":"c1e43e59-63b6-4897-a2ec-f22762ab53f3"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T16:14:22.636Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media"},"context":{"eventId":"1688141662640","timestamp":"2023-06-30T16:14:22.640Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141662636\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T16:14:22.636Z\",\"updated\":\"2023-06-30T16:14:22.636Z\",\"storageClass\":\"STANDARD\",\"size\":\"102274\",\"md5Hash\":\"j41xxb8Up7IYrGqSbgyCSQ==\",\"etag\":\"m1Z5wdOKZXm9xI31eKeTwPwq6Qs\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"c1e43e59-63b6-4897-a2ec-f22762ab53f3\"},\"crc32c\":\"AgAG2g==\",\"timeStorageClassUpdated\":\"2023-06-30T16:14:22.636Z\",\"id\":\"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media\"},\"context\":{\"eventId\":\"1688141662640\",\"timestamp\":\"2023-06-30T16:14:22.640Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d' to '/tmp/ef409633-f6ee-4b13-b847-2e0ebc3058b3'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d' to '/tmp/ef409633-f6ee-4b13-b847-2e0ebc3058b3'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d' to '/tmp/ef409633-f6ee-4b13-b847-2e0ebc3058b3'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'\"}"}}
[debug] [2023-06-30T16:14:22.706Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.706Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141662706","timestamp":"2023-06-30T16:14:22.706Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141662706","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.706Z","updated":"2023-06-30T16:14:22.706Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"FssfJY7YXqAMVRyh7tf3Bj4s2Tk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85064159-9b50-435c-ab13-bee3ef68eb65"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T16:14:22.706Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32/1688141662706","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32?generation=1688141662706&alt=media"}}
[debug] [2023-06-30T16:14:22.708Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.708Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.708Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.708Z"],"workRunningCount":2}
[debug] [2023-06-30T16:14:22.709Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.711Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.711Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.711Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.711Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"df6403d7-8f33-4126-a9ac-b535c1ecfb60","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","time":"2023-06-30T16:14:22.706Z","data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141662706","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.706Z","updated":"2023-06-30T16:14:22.706Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"FssfJY7YXqAMVRyh7tf3Bj4s2Tk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85064159-9b50-435c-ab13-bee3ef68eb65"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T16:14:22.706Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32/1688141662706","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32?generation=1688141662706&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/02d03244-33d5-4dd7-9cae-26bf82fbba1a'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32'\"}"}}
[debug] [2023-06-30T16:14:22.717Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.716Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.717Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.716Z"],"workRunningCount":2}
[debug] [2023-06-30T16:14:22.717Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:14:22.717Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:14:22.717Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:14:22.717Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:14:22.718Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[debug] [2023-06-30T16:14:22.721Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.722Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.722Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141662706","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.706Z","updated":"2023-06-30T16:14:22.706Z","storageClass":"STANDARD","size":"220","md5Hash":"QwkECtxr0SisVV/3SxVbgQ==","etag":"FssfJY7YXqAMVRyh7tf3Bj4s2Tk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85064159-9b50-435c-ab13-bee3ef68eb65"},"crc32c":"fFzPIQ==","timeStorageClassUpdated":"2023-06-30T16:14:22.706Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32/1688141662706","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32?generation=1688141662706&alt=media"},"context":{"eventId":"1688141662706","timestamp":"2023-06-30T16:14:22.706Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141662706\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:14:22.706Z\",\"updated\":\"2023-06-30T16:14:22.706Z\",\"storageClass\":\"STANDARD\",\"size\":\"220\",\"md5Hash\":\"QwkECtxr0SisVV/3SxVbgQ==\",\"etag\":\"FssfJY7YXqAMVRyh7tf3Bj4s2Tk\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"85064159-9b50-435c-ab13-bee3ef68eb65\"},\"crc32c\":\"fFzPIQ==\",\"timeStorageClassUpdated\":\"2023-06-30T16:14:22.706Z\",\"id\":\"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32/1688141662706\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32?generation=1688141662706&alt=media\"},\"context\":{\"eventId\":\"1688141662706\",\"timestamp\":\"2023-06-30T16:14:22.706Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:14:22.725Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 6.978476ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 6.978476ms"}}
[debug] [2023-06-30T16:14:22.727Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:14:22.727Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:14:22.728Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:14:22.729Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'\"}"}}
[debug] [2023-06-30T16:14:22.885Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.885Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141662885","timestamp":"2023-06-30T16:14:22.885Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141662885","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.885Z","updated":"2023-06-30T16:14:22.885Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"mXha4H3kFdC7eh7RTmRZz+jWIi8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85fe2526-b600-4d2b-8e7a-9e9b3acc909b"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T16:14:22.885Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600/1688141662885","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600?generation=1688141662885&alt=media"}}
[debug] [2023-06-30T16:14:22.887Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.887Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.888Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.887Z"],"workRunningCount":2}
[debug] [2023-06-30T16:14:22.888Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.889Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.889Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.889Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.889Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"570ade51-5a44-444b-8193-0fa9758f1646","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","time":"2023-06-30T16:14:22.885Z","data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141662885","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.885Z","updated":"2023-06-30T16:14:22.885Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"mXha4H3kFdC7eh7RTmRZz+jWIi8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85fe2526-b600-4d2b-8e7a-9e9b3acc909b"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T16:14:22.885Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600/1688141662885","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600?generation=1688141662885&alt=media"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/10d6d1d7-8d5a-4cb0-bc91-66ed497b75a9'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'\"}"}}
[debug] [2023-06-30T16:14:22.895Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.895Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[debug] [2023-06-30T16:14:22.895Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.895Z"],"workRunningCount":2}
[debug] [2023-06-30T16:14:22.895Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:14:22.895Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:14:22.896Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:14:22.896Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:14:22.896Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'\"}"}}
[debug] [2023-06-30T16:14:22.902Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.903Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141662902","timestamp":"2023-06-30T16:14:22.902Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","bucket":"birch-collective-develop.appspot.com","generation":"1688141662636","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:14:22.636Z","updated":"2023-06-30T16:14:22.636Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"m1Z5wdOKZXm9xI31eKeTwPwq6Qs","metadata":{"firebaseStorageDownloadTokens":"c1e43e59-63b6-4897-a2ec-f22762ab53f3"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T16:14:22.636Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media"}}
[debug] [2023-06-30T16:14:22.905Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.905Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.906Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141662885","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:14:22.885Z","updated":"2023-06-30T16:14:22.885Z","storageClass":"STANDARD","size":"40614","md5Hash":"XKGg6ZS4WuxRmfSHak89xQ==","etag":"mXha4H3kFdC7eh7RTmRZz+jWIi8","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"85fe2526-b600-4d2b-8e7a-9e9b3acc909b"},"crc32c":"SqPiLA==","timeStorageClassUpdated":"2023-06-30T16:14:22.885Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600/1688141662885","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600?generation=1688141662885&alt=media"},"context":{"eventId":"1688141662885","timestamp":"2023-06-30T16:14:22.885Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141662885\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:14:22.885Z\",\"updated\":\"2023-06-30T16:14:22.885Z\",\"storageClass\":\"STANDARD\",\"size\":\"40614\",\"md5Hash\":\"XKGg6ZS4WuxRmfSHak89xQ==\",\"etag\":\"mXha4H3kFdC7eh7RTmRZz+jWIi8\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"85fe2526-b600-4d2b-8e7a-9e9b3acc909b\"},\"crc32c\":\"SqPiLA==\",\"timeStorageClassUpdated\":\"2023-06-30T16:14:22.885Z\",\"id\":\"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600/1688141662885\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600?generation=1688141662885&alt=media\"},\"context\":{\"eventId\":\"1688141662885\",\"timestamp\":\"2023-06-30T16:14:22.885Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:14:22.907Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 10.840167ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 10.840167ms"}}
[debug] [2023-06-30T16:14:22.907Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:14:22.907Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:14:22.907Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:14:22.907Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:14:22.650Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'\"}"}}
[debug] [2023-06-30T16:14:22.909Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.909Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:22.909Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:14:22.909Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"5e241ef8-eea3-4288-85c4-2b2df67ce9df","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","time":"2023-06-30T16:14:22.636Z","data":{"kind":"storage#object","name":"resized/23f5be5e-0b8b-4618-a2b8-996728a0455d","bucket":"birch-collective-develop.appspot.com","generation":"1688141662636","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:14:22.636Z","updated":"2023-06-30T16:14:22.636Z","storageClass":"STANDARD","size":"102274","md5Hash":"j41xxb8Up7IYrGqSbgyCSQ==","etag":"m1Z5wdOKZXm9xI31eKeTwPwq6Qs","metadata":{"firebaseStorageDownloadTokens":"c1e43e59-63b6-4897-a2ec-f22762ab53f3"},"crc32c":"AgAG2g==","timeStorageClassUpdated":"2023-06-30T16:14:22.636Z","id":"birch-collective-develop.appspot.com/resized/23f5be5e-0b8b-4618-a2b8-996728a0455d/1688141662636","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F23f5be5e-0b8b-4618-a2b8-996728a0455d?generation=1688141662636&alt=media"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/23f5be5e-0b8b-4618-a2b8-996728a0455d'\"}"}}
[debug] [2023-06-30T16:14:22.911Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 260.747712ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 260.747712ms"}}
[debug] [2023-06-30T16:14:22.912Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:14:22.912Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:14:22.912Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:14:22.912Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:14:22.913Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:14:22.913Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:14:53.736Z] Jun 30, 2023 5:14:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:14:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:16:09.137Z] Jun 30, 2023 5:16:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:16:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:16:15.028Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.028Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141775028","timestamp":"2023-06-30T16:16:15.028Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","bucket":"birch-collective-develop.appspot.com","generation":"1688141775024","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:16:15.024Z","updated":"2023-06-30T16:16:15.024Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"yXbVdu0WDLlwHwPm4BMOsDsL9G8","metadata":{"firebaseStorageDownloadTokens":"57a23060-aec1-4dee-9e18-4e49c920ec6f"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:16:15.024Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media"}}
[debug] [2023-06-30T16:16:15.030Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.030Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:15.030Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.030Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.030Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:15.031Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.031Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.031Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.031Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"c59aff5a-bf06-4bde-b1c1-d5fbbeb8fb49","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","time":"2023-06-30T16:16:15.024Z","data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","bucket":"birch-collective-develop.appspot.com","generation":"1688141775024","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:16:15.024Z","updated":"2023-06-30T16:16:15.024Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"yXbVdu0WDLlwHwPm4BMOsDsL9G8","metadata":{"firebaseStorageDownloadTokens":"57a23060-aec1-4dee-9e18-4e49c920ec6f"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:16:15.024Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media"}}
[debug] [2023-06-30T16:16:15.032Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:15.032Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.032Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:16:15.033Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:16:15.033Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:16:15.033Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:16:15.035Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:16:15.037Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.039Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.040Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","bucket":"birch-collective-develop.appspot.com","generation":"1688141775024","metageneration":"1","contentType":"image/png","timeCreated":"2023-06-30T16:16:15.024Z","updated":"2023-06-30T16:16:15.024Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"yXbVdu0WDLlwHwPm4BMOsDsL9G8","metadata":{"firebaseStorageDownloadTokens":"57a23060-aec1-4dee-9e18-4e49c920ec6f"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:16:15.024Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media"},"context":{"eventId":"1688141775028","timestamp":"2023-06-30T16:16:15.028Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141775024\",\"metageneration\":\"1\",\"contentType\":\"image/png\",\"timeCreated\":\"2023-06-30T16:16:15.024Z\",\"updated\":\"2023-06-30T16:16:15.024Z\",\"storageClass\":\"STANDARD\",\"size\":\"65093\",\"md5Hash\":\"2v5Zhvb5eAkWnlI/Jk8Ccg==\",\"etag\":\"yXbVdu0WDLlwHwPm4BMOsDsL9G8\",\"metadata\":{\"firebaseStorageDownloadTokens\":\"57a23060-aec1-4dee-9e18-4e49c920ec6f\"},\"crc32c\":\"Gz73XA==\",\"timeStorageClassUpdated\":\"2023-06-30T16:16:15.024Z\",\"id\":\"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media\"},\"context\":{\"eventId\":\"1688141775028\",\"timestamp\":\"2023-06-30T16:16:15.028Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"Creating temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Creating temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Creating temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Created temporary directory: '/tmp'"} {"user":{"severity":"INFO","message":"Created temporary directory: '/tmp'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Created temporary directory: '/tmp'\"}"}}
[info] >  {"severity":"INFO","message":"Downloading image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"} {"user":{"severity":"INFO","message":"Downloading image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloading image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'\"}"}}
[info] >  {"severity":"INFO","message":"Downloaded image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292' to '/tmp/b6ae9269-3cc8-4e11-8f80-1973789b813c'"} {"user":{"severity":"INFO","message":"Downloaded image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292' to '/tmp/b6ae9269-3cc8-4e11-8f80-1973789b813c'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Downloaded image file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292' to '/tmp/b6ae9269-3cc8-4e11-8f80-1973789b813c'\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965' to size: 2400x1600"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965' to size: 2400x1600"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965' to size: 2400x1600\"}"}}
[info] >  {"severity":"INFO","message":"Resizing image at path '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c' to size: 32x32"} {"user":{"severity":"INFO","message":"Resizing image at path '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c' to size: 32x32"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resizing image at path '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c' to size: 32x32\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Resized image created at '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'"} {"user":{"severity":"INFO","message":"Resized image created at '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Resized image created at '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'\"}"}}
[info] >  {"severity":"INFO","message":"Converting image from type, , to type webp."} {"user":{"severity":"INFO","message":"Converting image from type, , to type webp."},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converting image from type, , to type webp.\"}"}}
[debug] [2023-06-30T16:16:15.087Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.088Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141775087","timestamp":"2023-06-30T16:16:15.087Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141775087","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.087Z","updated":"2023-06-30T16:16:15.087Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"UgSGzW0jE3dN9sNR1TXprjDH7Vk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"dc24e43c-6b49-4227-b841-bacd1d3ed36a"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:16:15.087Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32/1688141775087","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32?generation=1688141775087&alt=media"}}
[debug] [2023-06-30T16:16:15.091Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.091Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.092Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.091Z"],"workRunningCount":2}
[debug] [2023-06-30T16:16:15.092Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.105Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.105Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.105Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.105Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"8a83f65b-0906-4c98-b28e-1d9e4c0729d9","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","time":"2023-06-30T16:16:15.087Z","data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141775087","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.087Z","updated":"2023-06-30T16:16:15.087Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"UgSGzW0jE3dN9sNR1TXprjDH7Vk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"dc24e43c-6b49-4227-b841-bacd1d3ed36a"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:16:15.087Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32/1688141775087","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32?generation=1688141775087&alt=media"}}
[debug] [2023-06-30T16:16:15.106Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.106Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.107Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z","/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.106Z"],"workRunningCount":2}
[debug] [2023-06-30T16:16:15.107Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:16:15.107Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:16:15.107Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:16:15.107Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:16:15.108Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: BUSY"}}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/daa7d70b-5692-4230-a1b0-fcc555994c7c'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32'\"}"}}
[debug] [2023-06-30T16:16:15.120Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 12.128367ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 12.128367ms"}}
[debug] [2023-06-30T16:16:15.122Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: IDLE"}}
[debug] [2023-06-30T16:16:15.122Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:16:15.122Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:16:15.122Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.122Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.122Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.122Z] [runtime-status] [39423] RunBackground {"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","bucket":"birch-collective-develop.appspot.com","generation":"1688141775087","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.087Z","updated":"2023-06-30T16:16:15.087Z","storageClass":"STANDARD","size":"106","md5Hash":"nnDYyAAuY3nCFRRn/b0meA==","etag":"UgSGzW0jE3dN9sNR1TXprjDH7Vk","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"dc24e43c-6b49-4227-b841-bacd1d3ed36a"},"crc32c":"buLj6Q==","timeStorageClassUpdated":"2023-06-30T16:16:15.087Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32/1688141775087","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32?generation=1688141775087&alt=media"},"context":{"eventId":"1688141775087","timestamp":"2023-06-30T16:16:15.087Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39423] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141775087\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:16:15.087Z\",\"updated\":\"2023-06-30T16:16:15.087Z\",\"storageClass\":\"STANDARD\",\"size\":\"106\",\"md5Hash\":\"nnDYyAAuY3nCFRRn/b0meA==\",\"etag\":\"UgSGzW0jE3dN9sNR1TXprjDH7Vk\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"dc24e43c-6b49-4227-b841-bacd1d3ed36a\"},\"crc32c\":\"buLj6Q==\",\"timeStorageClassUpdated\":\"2023-06-30T16:16:15.087Z\",\"id\":\"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32/1688141775087\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32?generation=1688141775087&alt=media\"},\"context\":{\"eventId\":\"1688141775087\",\"timestamp\":\"2023-06-30T16:16:15.087Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_32x32\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[info] >  {"severity":"INFO","message":"Converted image to webp"} {"user":{"severity":"INFO","message":"Converted image to webp"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Converted image to webp\"}"}}
[info] >  {"severity":"INFO","message":"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"} {"user":{"severity":"INFO","message":"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploading resized image to 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'\"}"}}
[debug] [2023-06-30T16:16:15.298Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.299Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141775298","timestamp":"2023-06-30T16:16:15.298Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141775298","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.298Z","updated":"2023-06-30T16:16:15.298Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"xTpEJxsMAlraFAUcjeFySZawmxg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2c375ea6-1373-44d1-8bf5-07c867413aa0"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:16:15.298Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600/1688141775298","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600?generation=1688141775298&alt=media"}}
[debug] [2023-06-30T16:16:15.300Z] [work-queue] {"queuedWork":["europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.300Z"],"queueLength":1,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.301Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z","europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.300Z"],"workRunningCount":2}
[debug] [2023-06-30T16:16:15.301Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.032Z"],"workRunningCount":1}
[info] >  {"severity":"INFO","message":"Uploaded resized image to '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'"} {"user":{"severity":"INFO","message":"Uploaded resized image to '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Uploaded resized image to '/tmp/2acdc34f-5d12-4bdc-9b1d-178e58303965'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"} {"user":{"severity":"INFO","message":"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"} {"user":{"severity":"INFO","message":"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary resized file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600'\"}"}}
[info] >  {"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"} {"user":{"severity":"INFO","message":"Deleting original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'\"}"}}
[debug] [2023-06-30T16:16:15.304Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.304Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"eventId":"1688141775304","timestamp":"2023-06-30T16:16:15.304Z","eventType":"google.storage.object.delete","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","type":"storage#object"},"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","bucket":"birch-collective-develop.appspot.com","generation":"1688141775024","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:16:15.024Z","updated":"2023-06-30T16:16:15.024Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"yXbVdu0WDLlwHwPm4BMOsDsL9G8","metadata":{"firebaseStorageDownloadTokens":"57a23060-aec1-4dee-9e18-4e49c920ec6f"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:16:15.024Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media"}}
[debug] [2023-06-30T16:16:15.305Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.306Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.307Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.307Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"4126c1b2-2e48-401a-8881-0a644a280908","type":"google.cloud.storage.object.v1.finalized","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","time":"2023-06-30T16:16:15.298Z","data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141775298","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.298Z","updated":"2023-06-30T16:16:15.298Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"xTpEJxsMAlraFAUcjeFySZawmxg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2c375ea6-1373-44d1-8bf5-07c867413aa0"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:16:15.298Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600/1688141775298","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600?generation=1688141775298&alt=media"}}
[info] >  {"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"} {"user":{"severity":"INFO","message":"Deleted original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted original file from storage bucket: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'\"}"}}
[info] >  {"severity":"INFO","message":"Completed execution of extension"} {"user":{"severity":"INFO","message":"Completed execution of extension"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Completed execution of extension\"}"}}
[info] >  {"severity":"INFO","message":"Deleting temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"} {"user":{"severity":"INFO","message":"Deleting temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleting temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'\"}"}}
[info] >  {"severity":"INFO","message":"Deleted temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"} {"user":{"severity":"INFO","message":"Deleted temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"Deleted temporary original file: 'resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292'\"}"}}
[debug] [2023-06-30T16:16:15.309Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 274.421285ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 274.421285ms"}}
[debug] [2023-06-30T16:16:15.309Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:16:15.309Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:16:15.309Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:16:15.309Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:15.310Z] [work-queue] {"queuedWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.310Z"],"queueLength":1,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:15.310Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":["/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0-2023-06-30T16:16:15.310Z"],"workRunningCount":1}
[debug] [2023-06-30T16:16:15.310Z] Accepted request POST /functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0 --> europe-west2-ext-storage-resize-images-generateResizedImage-0
[debug] [2023-06-30T16:16:15.310Z] [functions] Runtime ready! Sending request! {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Runtime ready! Sending request!"}}
[debug] [2023-06-30T16:16:15.310Z] [functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/ {"metadata":{"emulator":{"name":"functions"},"message":"[functions] Got req.url=/functions/projects/birch-collective-develop/triggers/europe-west2-ext-storage-resize-images-generateResizedImage-0, mapping to path=/functions/projects/"}}
[debug] [2023-06-30T16:16:15.310Z] [worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitRequest(triggerId=europe-west2-ext-storage-resize-images-generateResizedImage)"}}
[info] i  functions: Beginning execution of "europe-west2-ext-storage-resize-images-generateResizedImage" {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Beginning execution of \"europe-west2-ext-storage-resize-images-generateResizedImage\""}}
[debug] [2023-06-30T16:16:15.311Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: BUSY"}}
[debug] [2023-06-30T16:16:15.313Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.313Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.313Z] >>> [apiv2][query] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast [none]
[debug] [2023-06-30T16:16:15.313Z] >>> [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"specversion":"1.0","id":"222b1d76-b19a-409a-b398-1bf26621dcdd","type":"google.cloud.storage.object.v1.deleted","source":"//storage.googleapis.com/projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","time":"2023-06-30T16:16:15.024Z","data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292","bucket":"birch-collective-develop.appspot.com","generation":"1688141775024","metageneration":"1","contentType":"image/png","contentDisposition":"inline","timeCreated":"2023-06-30T16:16:15.024Z","updated":"2023-06-30T16:16:15.024Z","storageClass":"STANDARD","size":"65093","md5Hash":"2v5Zhvb5eAkWnlI/Jk8Ccg==","etag":"yXbVdu0WDLlwHwPm4BMOsDsL9G8","metadata":{"firebaseStorageDownloadTokens":"57a23060-aec1-4dee-9e18-4e49c920ec6f"},"crc32c":"Gz73XA==","timeStorageClassUpdated":"2023-06-30T16:16:15.024Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292/1688141775024","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292?generation=1688141775024&alt=media"}}
[debug] [2023-06-30T16:16:15.313Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.314Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.315Z] <<< [apiv2][status] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast 200
[debug] [2023-06-30T16:16:15.315Z] <<< [apiv2][body] POST http://127.0.0.1:5001/functions/projects/birch-collective-develop/trigger_multicast {"status":"multicast_acknowledged"}
[debug] [2023-06-30T16:16:15.316Z] [runtime-status] [39403] RunBackground {"data":{"kind":"storage#object","name":"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","bucket":"birch-collective-develop.appspot.com","generation":"1688141775298","metageneration":"1","contentType":"image/webp","contentDisposition":"","timeCreated":"2023-06-30T16:16:15.298Z","updated":"2023-06-30T16:16:15.298Z","storageClass":"STANDARD","size":"23404","md5Hash":"Q2Bufhca1ZFVRa9MDbe+Sg==","etag":"xTpEJxsMAlraFAUcjeFySZawmxg","metadata":{"resizedImage":"true","firebaseStorageDownloadTokens":"2c375ea6-1373-44d1-8bf5-07c867413aa0"},"crc32c":"ZRqmww==","timeStorageClassUpdated":"2023-06-30T16:16:15.298Z","id":"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600/1688141775298","selfLink":"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","mediaLink":"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600?generation=1688141775298&alt=media"},"context":{"eventId":"1688141775298","timestamp":"2023-06-30T16:16:15.298Z","eventType":"google.storage.object.finalize","resource":{"service":"storage.googleapis.com","name":"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600","type":"storage#object"}}} {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[runtime-status] [39403] RunBackground {\"data\":{\"kind\":\"storage#object\",\"name\":\"resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600\",\"bucket\":\"birch-collective-develop.appspot.com\",\"generation\":\"1688141775298\",\"metageneration\":\"1\",\"contentType\":\"image/webp\",\"contentDisposition\":\"\",\"timeCreated\":\"2023-06-30T16:16:15.298Z\",\"updated\":\"2023-06-30T16:16:15.298Z\",\"storageClass\":\"STANDARD\",\"size\":\"23404\",\"md5Hash\":\"Q2Bufhca1ZFVRa9MDbe+Sg==\",\"etag\":\"xTpEJxsMAlraFAUcjeFySZawmxg\",\"metadata\":{\"resizedImage\":\"true\",\"firebaseStorageDownloadTokens\":\"2c375ea6-1373-44d1-8bf5-07c867413aa0\"},\"crc32c\":\"ZRqmww==\",\"timeStorageClassUpdated\":\"2023-06-30T16:16:15.298Z\",\"id\":\"birch-collective-develop.appspot.com/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600/1688141775298\",\"selfLink\":\"http://127.0.0.1:9199/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600\",\"mediaLink\":\"http://127.0.0.1:9199/download/storage/v1/b/birch-collective-develop.appspot.com/o/resized%2F6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600?generation=1688141775298&alt=media\"},\"context\":{\"eventId\":\"1688141775298\",\"timestamp\":\"2023-06-30T16:16:15.298Z\",\"eventType\":\"google.storage.object.finalize\",\"resource\":{\"service\":\"storage.googleapis.com\",\"name\":\"projects/_/buckets/birch-collective-develop.appspot.com/objects/resized/6750a9e0-ad4c-4739-a9d0-35dbd93e4292_2400x1600\",\"type\":\"storage#object\"}}}"}}
[info] >  {"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"} {"user":{"bucket":"birch-collective-develop.appspot.com","doBackfill":false,"imageSizes":["2400x1600","32x32"],"makePublic":false,"deleteOriginalFile":2,"imageTypes":["webp"],"animated":false,"location":"europe-west2","severity":"INFO","message":"Started execution of extension with configuration"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"bucket\":\"birch-collective-develop.appspot.com\",\"doBackfill\":false,\"imageSizes\":[\"2400x1600\",\"32x32\"],\"makePublic\":false,\"deleteOriginalFile\":2,\"imageTypes\":[\"webp\"],\"animated\":false,\"location\":\"europe-west2\",\"severity\":\"INFO\",\"message\":\"Started execution of extension with configuration\"}"}}
[info] >  {"severity":"INFO","message":"File is already a resized image, no processing is required"} {"user":{"severity":"INFO","message":"File is already a resized image, no processing is required"},"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"\u001b[90m> \u001b[39m {\"severity\":\"INFO\",\"message\":\"File is already a resized image, no processing is required\"}"}}
[debug] [2023-06-30T16:16:15.317Z] Finishing up request with event=pause {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=pause"}}
[info] i  functions: Finished "europe-west2-ext-storage-resize-images-generateResizedImage" in 6.9027ms {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finished \"europe-west2-ext-storage-resize-images-generateResizedImage\" in 6.9027ms"}}
[debug] [2023-06-30T16:16:15.318Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: IDLE"}}
[debug] [2023-06-30T16:16:15.318Z] Finishing up request with event=finish {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=finish"}}
[debug] [2023-06-30T16:16:15.318Z] Finishing up request with event=close {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"Finishing up request with event=close"}}
[debug] [2023-06-30T16:16:15.318Z] [work-queue] {"queuedWork":[],"queueLength":0,"runningWork":[],"workRunningCount":0}
[debug] [2023-06-30T16:16:57.406Z] Received signal SIGHUP 1
[info]  
[info] i  emulators: Received SIGHUP for the first time. Starting a clean shutdown. 
[info] i  emulators: Please wait for a clean shutdown or send the SIGHUP signal again to stop right now. 
[info] i  Automatically exporting data using --export-on-exit "./db-local-data" please wait for the export to finish... 
[debug] [2023-06-30T16:16:57.421Z] >>> [apiv2][query] GET http://127.0.0.1:4400/ [none]
[debug] [2023-06-30T16:16:57.423Z] <<< [apiv2][status] GET http://127.0.0.1:4400/ 200
[debug] [2023-06-30T16:16:57.423Z] <<< [apiv2][body] GET http://127.0.0.1:4400/ {"version":"12.4.0","origins":["http://127.0.0.1:4400","http://[::1]:4400"],"host":"127.0.0.1","port":4400}
[info] i  Found running emulator hub for project birch-collective-develop at http://127.0.0.1:4400 
[info] i  Exporting data to: /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data 
[debug] [2023-06-30T16:16:57.437Z] >>> [apiv2][query] GET http://127.0.0.1:4400/ [none]
[debug] [2023-06-30T16:16:57.470Z] <<< [apiv2][status] GET http://127.0.0.1:4400/ 200
[debug] [2023-06-30T16:16:57.470Z] <<< [apiv2][body] GET http://127.0.0.1:4400/ {"version":"12.4.0","origins":["http://127.0.0.1:4400","http://[::1]:4400"],"host":"127.0.0.1","port":4400}
[debug] [2023-06-30T16:16:57.470Z] >>> [apiv2][query] POST http://127.0.0.1:4400/_admin/export [none]
[debug] [2023-06-30T16:16:57.470Z] >>> [apiv2][body] POST http://127.0.0.1:4400/_admin/export {"path":"/home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data","initiatedBy":"exit"}
[debug] [2023-06-30T16:16:57.471Z] Ignoring signal SIGHUP due to short delay of 65ms
[debug] [2023-06-30T16:16:57.498Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: exited {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: exited"}}
[debug] [2023-06-30T16:16:57.498Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: FINISHED {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-4650b2b1-cccf-417e-b4e2-94df7b9d640f]: FINISHED"}}
[debug] [2023-06-30T16:16:57.501Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: exited {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: exited"}}
[debug] [2023-06-30T16:16:57.501Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: FINISHED {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-fe7b7118-eace-4aef-9f8b-d96a4e68eb9e]: FINISHED"}}
[debug] [2023-06-30T16:16:57.501Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: exited {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: exited"}}
[debug] [2023-06-30T16:16:57.502Z] [worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: FINISHED {"metadata":{"emulator":{"name":"functions"},"function":{"name":"europe-west2-ext-storage-resize-images-generateResizedImage"},"extension":{"instanceId":"storage-resize-images","ref":"firebase/storage-resize-images@0.1.37"},"message":"[worker-europe-west2-ext-storage-resize-images-generateResizedImage-427bbe9e-ee50-48b8-b4a8-5821f286c994]: FINISHED"}}
[info] i  emulators: Received export request. Exporting data to /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data. 
[debug] [2023-06-30T16:16:57.530Z] >>> [apiv2][query] POST http://127.0.0.1:8080/emulator/v1/projects/birch-collective-develop:export [none]
[debug] [2023-06-30T16:16:57.530Z] >>> [apiv2][body] POST http://127.0.0.1:8080/emulator/v1/projects/birch-collective-develop:export {"database":"projects/birch-collective-develop/databases/(default)","export_directory":"firebase-export-1688141817510lbSZby","export_name":"firestore_export"}
[debug] [2023-06-30T16:16:57.544Z] Jun 30, 2023 5:16:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
INFO: Detected non-HTTP/2 connection.
 {"metadata":{"emulator":{"name":"firestore"},"message":"Jun 30, 2023 5:16:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n"}}
[debug] [2023-06-30T16:16:57.640Z] <<< [apiv2][status] POST http://127.0.0.1:8080/emulator/v1/projects/birch-collective-develop:export 200
[debug] [2023-06-30T16:16:57.640Z] <<< [apiv2][body] POST http://127.0.0.1:8080/emulator/v1/projects/birch-collective-develop:export {}
[debug] [2023-06-30T16:16:57.642Z] Exporting auth users in Project birch-collective-develop to firebase-export-1688141817510lbSZby/auth_export/accounts.json
[debug] [2023-06-30T16:16:57.756Z] Exporting project config in Project birch-collective-develop to firebase-export-1688141817510lbSZby/auth_export/accounts.json
[debug] [2023-06-30T16:16:57.765Z] >>> [apiv2][query] POST http://127.0.0.1:9199/internal/export [none]
[debug] [2023-06-30T16:16:57.766Z] >>> [apiv2][body] POST http://127.0.0.1:9199/internal/export {"path":"firebase-export-1688141817510lbSZby/storage_export","initiatedBy":"exit"}
[debug] [2023-06-30T16:16:57.837Z] <<< [apiv2][status] POST http://127.0.0.1:9199/internal/export 200
[debug] [2023-06-30T16:16:57.840Z] <<< [apiv2][body] POST http://127.0.0.1:9199/internal/export [stream]
[debug] [2023-06-30T16:16:57.841Z] hubExport: swapping firebase-export-1688141817510lbSZby with /home/ruben/Coding/website-builds/birch-collective/version-june_2023/cms/db-local-data
[info] ✔  emulators: Export complete. 
[debug] [2023-06-30T16:16:57.922Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.923Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.923Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.924Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.924Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.924Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.927Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.931Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.931Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.932Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.932Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.933Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.933Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.933Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.934Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.934Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.936Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.937Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.937Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.938Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.939Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.939Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.940Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.941Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.941Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.941Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.944Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.959Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.960Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.960Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.961Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.961Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.961Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.962Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.962Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.963Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.963Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.972Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.972Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.973Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.973Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.973Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.974Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.974Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.974Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.975Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.976Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.976Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.978Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.979Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.979Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.980Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.981Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.984Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.985Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.985Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.986Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.986Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.986Z] <<< [apiv2][status] POST http://127.0.0.1:4400/_admin/export 200
[debug] [2023-06-30T16:16:57.986Z] <<< [apiv2][body] POST http://127.0.0.1:4400/_admin/export {"message":"OK"}
[info] ✔  Export complete 
[info] i  emulators: Shutting down emulators. {"metadata":{"emulator":{"name":"hub"},"message":"Shutting down emulators."}}
[info] i  ui: Stopping Emulator UI {"metadata":{"emulator":{"name":"ui"},"message":"Stopping Emulator UI"}}
[debug] [2023-06-30T16:16:57.988Z] node[37869]: ../src/node.cc:678:void node::ResetStdio(): Assertion `!(err != 0) || (err == -1 && (*__errno_location ()) == 1)' failed.
 {"metadata":{"emulator":{"name":"ui"},"message":"node[37869]: ../src/node.cc:678:void node::ResetStdio(): Assertion `!(err != 0) || (err == -1 && (*__errno_location ()) == 1)' failed.\n"}}
[debug] [2023-06-30T16:16:57.991Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.991Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.992Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.992Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.993Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.993Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:57.993Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.000Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.001Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.001Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.002Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.002Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.002Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.002Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.005Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.005Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.006Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.006Z]  1: 0xb7a940 node::Abort() [node]
 2: 0xb7a9be  [node]
 3: 0xb34dd4  [node]
 4: 0xb34f90 node::SignalExit(int, siginfo_t*, void*) [node]
 5: 0x7f6c2b04fab0  [/usr/lib/libc.so.6]
 6: 0x7f6c2b121266 epoll_wait [/usr/lib/libc.so.6]
 7: 0x16713f3  [node]
 8: 0x165f47e uv_run [node]
 9: 0xabda6d node::SpinEventLoop(node::Environment*) [node]
10: 0xbc1164 node::NodeMainInstance::Run() [node]
11: 0xb35bc8 node::LoadSnapshotDataAndRun(node::SnapshotData const**, node::InitializationResult const*) [node]
12: 0xb3976f node::Start(int, char**) [node]
13: 0x7f6c2b039850  [/usr/lib/libc.so.6]
14: 0x7f6c2b03990a __libc_start_main [/usr/lib/libc.so.6]
15: 0xabbdee _start [node]
 {"metadata":{"emulator":{"name":"ui"},"message":" 1: 0xb7a940 node::Abort() [node]\n 2: 0xb7a9be  [node]\n 3: 0xb34dd4  [node]\n 4: 0xb34f90 node::SignalExit(int, siginfo_t*, void*) [node]\n 5: 0x7f6c2b04fab0  [/usr/lib/libc.so.6]\n 6: 0x7f6c2b121266 epoll_wait [/usr/lib/libc.so.6]\n 7: 0x16713f3  [node]\n 8: 0x165f47e uv_run [node]\n 9: 0xabda6d node::SpinEventLoop(node::Environment*) [node]\n10: 0xbc1164 node::NodeMainInstance::Run() [node]\n11: 0xb35bc8 node::LoadSnapshotDataAndRun(node::SnapshotData const**, node::InitializationResult const*) [node]\n12: 0xb3976f node::Start(int, char**) [node]\n13: 0x7f6c2b039850  [/usr/lib/libc.so.6]\n14: 0x7f6c2b03990a __libc_start_main [/usr/lib/libc.so.6]\n15: 0xabbdee _start [node]\n"}}
[debug] [2023-06-30T16:16:58.008Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.009Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.009Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.009Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.010Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.010Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.010Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.011Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.011Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.023Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.023Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.024Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.024Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.024Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.025Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.025Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.026Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.026Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.027Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.040Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.040Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.040Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.041Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.041Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.056Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.057Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.057Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.059Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2023-06-30T16:16:58.059Z] Error: write EIO
    at afterWriteDispatched (node:internal/stream_base_commons:160:15)
    at writeGeneric (node:internal/stream_base_commons:151:3)
    at Socket._writeGeneric (node:net:930:11)
    at Socket._write (node:net:942:8)
    at writeOrBuffer (node:internal/streams/writable:392:12)
    at _write (node:internal/streams/writable:333:10)
    at Writable.write (node:internal/streams/writable:337:10)
    at Console.log (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston/lib/winston/transports/console.js:79:23)
    at Console._write (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/winston-transport/index.js:103:17)
    at doWrite (/home/ruben/.nvm/versions/node/v18.16.0/lib/node_modules/firebase-tools/node_modules/readable-stream/lib/_stream_writable.js:390:139)
[error] 
